var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/ButtonComponent.html",[0,0.766,1,1.053]],["body/components/ButtonComponent.html",[0,1.138,1,1.688,2,1.684,3,0.333,4,0.387,5,1.217,6,1.717,7,1.217,8,1.717,9,0.387,10,0.39,11,0.17,12,0.17,13,1.684,14,2.792,15,0.888,16,3.172,17,2.956,18,2.717,19,1.331,20,1.52,21,2.829,22,2.588,23,2.717,24,2.717,25,4.432,26,2.104,27,3.864,28,0.529,29,1.105,30,2.376,31,2.376,32,2.376,33,2.725,34,1.737,35,0.992,36,2.104,37,1.878,38,2.376,39,2.376,40,1.737,41,0.985,42,2.717,43,1.688,44,2.325,45,1.875,46,1.142,47,2.792,48,0.992,49,0.041,50,1.028,51,0.658,52,0.791,53,1.688,54,3.874,55,1.963,56,0.707,57,1.963,58,1.564,59,1.963,60,1.094,61,1.717,62,1.717,63,1.52,64,1.963,65,1.717,66,1.267,67,1.717,68,0.798,69,0.798,70,1.094,71,0.985,72,1.963,73,1.717,74,1.717,75,0.506,76,1.963,77,1.963,78,1.717,79,1.963,80,0.985,81,1.963,82,0.664,83,0.445,84,1.564,85,1.357,86,1.52,87,0.282,88,0.282,89,1.963,90,1.357,91,2.792,92,1.963,93,2.792,94,1.217,95,1.364,96,1.717,97,2.941,98,1.717,99,1.717,100,0.985,101,1.717,102,1.217,103,1.717,104,1.094,105,1.717,106,1.717,107,1.717,108,0.019,109,0.026,110,0.019]],["title/interfaces/Data.html",[56,0.476,111,1.3]],["body/interfaces/Data.html",[3,0.383,4,0.445,7,1.399,9,0.445,10,0.324,11,0.114,12,0.114,28,0.383,29,1.214,44,1.56,45,1.865,49,0.042,51,0.568,56,0.937,60,1.258,63,1.803,69,0.918,71,1.499,75,0.77,80,1.499,82,0.661,83,0.512,84,1.68,85,1.56,87,0.48,88,0.324,108,0.022,109,0.029,110,0.022,111,1.399,112,1.973,113,2.256,114,2.256,115,0.976,116,3.907,117,3.486,118,1.748,119,1.56,120,2.256,121,2.256,122,2.611,123,2.635,124,3.486,125,1.851,126,1.513,127,2.256,128,2.635,129,2.635,130,2.985,131,2.635,132,1.973,133,1.748,134,1.973,135,3.486,136,1.748,137,0.737,138,1.973,139,2.635,140,2.635,141,1.399,142,2.635,143,2.635,144,2.635,145,2.635,146,2.256,147,2.635,148,2.635,149,3.346,150,2.635,151,2.611,152,1.788,153,2.635,154,2.635,155,3.907,156,2.635,157,3.907,158,2.635,159,2.635,160,2.256,161,2.635,162,2.635,163,2.635,164,2.635,165,2.635]],["title/injectables/DataEventPluginService.html",[115,0.685,134,1.834]],["body/injectables/DataEventPluginService.html",[3,0.322,4,0.375,7,1.647,9,0.375,10,0.501,11,0.176,12,0.176,15,0.621,28,0.322,29,1.08,35,0.97,41,0.954,44,1.836,45,2.016,46,0.966,48,1.118,49,0.042,50,0.892,51,0.614,52,0.892,56,0.908,60,1.481,63,1.858,68,1.08,69,0.773,71,1.334,75,0.933,80,1.665,82,0.605,83,0.431,84,1.815,85,1.313,87,0.439,88,0.273,108,0.018,109,0.026,110,0.018,111,1.178,113,3.489,114,1.9,115,0.868,116,3.872,117,3.576,118,1.472,119,1.313,120,1.9,121,1.9,122,2.323,123,2.219,124,3.872,125,2.056,126,1.499,127,2.656,128,3.102,129,3.102,130,3.489,131,3.102,132,1.662,133,1.472,134,2.323,135,4.075,136,1.472,137,0.621,138,2.323,139,3.102,140,3.102,141,1.647,142,2.219,143,2.219,144,2.219,145,3.102,146,2.656,147,3.102,148,3.102,149,3.489,150,3.872,151,3.052,152,1.665,153,2.219,154,2.219,155,3.576,156,2.219,157,3.576,158,2.219,159,2.219,160,1.9,161,2.219,162,2.219,163,2.219,164,2.219,165,2.219,166,1.178,167,3.778,168,3.102,169,2.703,170,3.778,171,2.703,172,2.703]],["title/injectables/ElementDataStorageService.html",[45,1.169,115,0.685]],["body/injectables/ElementDataStorageService.html",[3,0.292,4,0.339,7,1.965,9,0.339,10,0.482,11,0.189,12,0.169,15,0.562,28,0.292,35,0.903,45,1.767,46,0.923,48,1.158,49,0.042,50,0.923,51,0.538,52,0.923,56,0.928,60,1.379,66,1.423,68,1.289,75,1.007,82,0.339,83,0.39,84,2.046,87,0.247,88,0.247,95,1.591,108,0.017,109,0.024,110,0.017,115,0.808,126,1.582,132,1.503,133,1.331,137,0.562,138,2.163,141,1.965,149,3.902,151,2.163,152,1.242,166,1.065,173,4.778,174,2.444,175,4.085,176,3.153,177,2.473,178,2.888,179,2.163,180,2.163,181,3.518,182,3.518,183,3.518,184,3.518,185,3.518,186,3.518,187,2.473,188,2.888,189,1.71,190,3.518,191,2.888,192,3.518,193,2.473,194,2.888,195,3.518,196,2.888,197,4.509,198,3.518,199,3.518,200,3.518,201,2.473,202,4.509,203,2.535,204,3.518,205,1.71,206,3.518,207,3.023,208,2.444,209,4.976,210,4.976,211,4.976,212,3.518,213,2.444,214,3.518,215,3.518,216,2.444,217,3.518,218,2.444,219,2.473,220,0.863,221,2.444,222,1.71,223,3.518,224,3.518,225,2.444,226,2.444,227,2.444,228,4.122,229,2.444,230,1.503,231,2.444,232,4.509,233,2.444,234,2.444,235,1.718,236,2.444]],["title/components/HiddenComponent.html",[0,0.766,100,1.053]],["body/components/HiddenComponent.html",[0,1.143,1,0.994,2,1.695,3,0.336,4,0.391,5,1.228,6,1.732,7,1.228,8,1.732,9,0.391,10,0.392,11,0.17,12,0.17,13,1.695,15,0.893,16,3.192,17,2.837,18,2.734,19,1.333,20,1.534,21,2.837,22,2.595,24,2.734,26,2.117,28,0.531,29,1.112,30,2.391,31,2.391,32,2.391,33,2.738,34,1.745,35,0.998,36,2.117,37,1.89,38,2.391,39,2.391,40,1.745,41,0.994,42,2.734,43,1.695,44,2.334,45,1.882,46,1.144,48,0.998,49,0.041,50,1.031,51,0.659,52,0.796,53,1.695,54,3.882,55,1.98,56,0.71,57,1.98,58,1.572,59,1.98,60,1.104,61,1.732,62,1.732,63,1.526,64,1.98,65,1.732,66,1.273,67,1.732,68,0.806,69,0.806,70,1.104,71,0.994,72,1.98,73,1.732,74,1.732,75,0.511,76,1.98,77,1.98,78,1.732,79,1.98,80,0.994,81,1.98,82,0.666,83,0.449,84,1.572,85,1.369,86,1.534,87,0.284,88,0.284,89,1.98,94,1.228,95,1.372,96,1.732,97,2.953,98,1.732,99,1.732,100,1.695,101,1.732,102,1.228,103,1.732,104,1.104,105,1.732,106,1.732,107,1.732,108,0.019,109,0.026,110,0.019,237,2.817,238,3.889,239,2.734,240,4.453,241,3.889,242,2.817]],["title/components/JsonSchemaFormComponent.html",[0,0.766,102,1.3]],["body/components/JsonSchemaFormComponent.html",[0,0.779,1,0.526,2,1.05,3,0.178,4,0.207,5,0.65,6,0.917,7,0.65,8,0.917,9,0.207,10,0.49,11,0.205,12,0.209,15,0.697,19,0.343,20,0.812,21,2.227,22,2.091,26,1.312,28,0.362,35,0.619,37,1.171,41,0.851,43,1.229,46,0.973,48,0.619,49,0.042,50,0.713,51,0.534,52,0.493,53,0.851,56,0.714,58,1.581,68,0.689,69,1.169,71,0.851,75,0.632,82,0.622,83,0.238,84,0.851,86,0.812,87,0.15,88,0.15,90,0.725,94,0.65,95,1.229,96,0.917,97,2.141,98,0.917,99,0.917,100,0.526,101,0.917,102,1.518,103,0.917,104,0.585,105,0.917,106,0.917,107,0.917,108,0.01,109,0.016,110,0.01,125,1.666,126,0.474,133,1.312,137,0.8,177,1.048,178,1.224,220,1.581,222,0.725,243,3.416,244,1.224,245,2.141,246,2.772,247,0.945,248,2.41,249,2.41,250,3.095,251,2.448,252,2.41,253,2.41,254,2.41,255,1.979,256,3.483,257,2.41,258,1.482,259,1.979,260,2.41,261,1.048,262,2.41,263,1.979,264,2.448,265,2.41,266,1.979,267,2.41,268,1.224,269,2.41,270,1.979,271,1.979,272,1.694,273,2.132,274,3.033,275,2.132,276,2.41,277,2.41,278,1.482,279,2.519,280,1.952,281,1.979,282,3.483,283,2.41,284,2.687,285,3.138,286,3.138,287,3.138,288,3.138,289,1.224,290,1.491,291,4.752,292,1.491,293,3.901,294,3.901,295,3.901,296,3.34,297,3.901,298,4.752,299,1.491,300,2.41,301,2.41,302,2.41,303,2.41,304,2.41,305,1.491,306,1.491,307,2.41,308,1.694,309,2.41,310,1.979,311,1.491,312,1.865,313,1.491,314,1.979,315,2.41,316,2.41,317,2.41,318,2.41,319,1.491,320,1.491,321,2.41,322,2.41,323,1.491,324,1.491,325,2.587,326,1.979,327,2.49,328,1.224,329,1.224,330,1.491,331,0.812,332,1.048,333,1.491,334,1.048,335,1.224,336,1.979,337,0.917,338,1.491,339,1.491,340,1.491,341,1.491,342,1.224,343,1.491,344,1.224,345,1.491,346,1.491,347,0.65,348,1.224,349,1.491,350,1.491,351,1.491,352,1.491,353,1.491,354,1.491,355,0.812,356,1.048,357,1.491,358,1.224,359,1.491,360,1.224,361,3.033,362,1.491,363,1.491,364,3.033,365,1.491,366,1.491,367,1.491,368,2.41,369,3.033,370,1.491,371,1.491,372,1.491,373,1.491,374,1.491,375,1.491,376,1.491,377,1.491,378,1.491,379,1.491,380,1.491,381,1.491,382,1.491,383,1.491,384,1.491,385,1.491,386,1.491,387,3.138,388,1.491,389,1.491,390,1.491,391,1.491,392,1.224,393,1.491,394,1.491,395,1.048,396,2.41,397,1.224,398,1.491,399,3.033,400,1.491,401,1.491,402,1.491,403,1.491,404,1.491,405,1.491,406,1.491,407,1.491,408,1.491,409,0.812,410,1.491,411,1.491,412,1.491,413,1.491,414,1.491,415,1.491]],["title/modules/JsonSchemaFormModule.html",[247,1.169,416,1.625]],["body/modules/JsonSchemaFormModule.html",[3,0.414,4,0.482,9,0.482,10,0.35,11,0.158,12,0.175,19,0.798,43,1.745,49,0.042,56,0.553,63,1.104,82,0.768,83,0.553,87,0.35,88,0.35,94,1.513,102,2.618,108,0.024,109,0.03,110,0.024,118,1.891,119,1.687,134,2.749,243,2.441,247,1.361,278,2.749,279,2.693,280,2.155,342,2.85,347,1.513,409,1.891,416,3.162,417,1.891,418,1.891,419,2.693,420,2.135,421,3.476,422,2.85,423,2.85,424,2.85,425,2.85,426,2.85,427,3.202,428,3.143,429,1.891,430,3.472,431,2.749,432,3.143,433,2.135,434,2.749,435,4.471,436,2.441,437,3.472,438,3.472,439,3.472,440,3.472,441,3.472]],["title/injectables/JsonSchemaFormService.html",[43,1.053,115,0.685]],["body/injectables/JsonSchemaFormService.html",[0,1.313,2,1.057,3,0.289,4,0.337,5,2.325,9,0.486,10,0.48,11,0.169,12,0.192,15,0.804,17,1.321,19,1.175,21,1.321,28,0.289,29,1,34,1.608,35,0.898,36,1.905,41,0.856,43,1.235,46,0.92,48,1.153,49,0.042,50,0.92,51,0.592,52,0.92,56,0.558,66,1.362,68,1.174,69,1.285,70,1.371,71,0.856,75,0.9,80,0.856,82,0.57,83,0.387,87,0.245,88,0.414,90,2.315,95,1.586,108,0.017,109,0.024,110,0.017,115,0.804,126,1.428,136,1.321,137,0.943,152,1.752,166,1.057,187,1.705,189,1.994,207,1.905,220,1.752,230,2.151,243,3.349,247,1.371,250,1.491,293,2.872,392,2.872,409,1.905,419,1.321,431,1.491,432,2.459,433,1.491,434,2.151,442,2.425,443,3.499,444,3.499,445,2.425,446,5.237,447,5.116,448,4.104,449,4.493,450,2.425,451,3.499,452,5.237,453,2.459,454,2.425,455,3.499,456,3.499,457,4.104,458,4.763,459,2.872,460,3.499,461,4.104,462,3.499,463,3.369,464,2.425,465,2.151,466,3.499,467,3.499,468,2.425,469,2.425,470,3.688,471,3.499,472,2.425,473,2.425,474,1.491,475,2.425,476,2.425,477,1.705,478,1.705,479,3.369,480,2.425,481,2.425,482,2.425,483,3.499,484,1.991,485,2.425,486,2.425,487,2.425,488,2.425,489,2.425,490,2.425,491,2.425,492,2.425,493,2.425,494,2.425,495,2.425,496,2.425,497,2.425,498,2.425,499,3.499,500,1.7,501,2.425,502,2.425,503,2.425,504,2.425,505,2.425,506,2.425,507,2.425,508,2.425,509,2.425,510,2.425,511,2.425]],["title/interfaces/LayoutItem.html",[111,1.3,331,1.625]],["body/interfaces/LayoutItem.html",[3,0.404,4,0.47,9,0.47,10,0.444,11,0.183,12,0.183,19,1.189,28,0.404,29,1.259,34,2.223,46,0.694,49,0.041,50,1.125,51,0.699,52,1.184,56,0.825,66,1.259,75,1.063,87,0.342,108,0.023,109,0.03,110,0.023,111,1.477,112,2.084,125,2.395,138,2.707,176,2.707,201,3.095,205,2.139,207,2.818,331,2.397,355,2.397,453,3.095,465,2.707,512,3.095,513,3.39,514,2.783,515,4.013,516,3.39,517,3.614,518,3.638,519,3.614,520,4.402,521,3.095,522,4.402,523,3.614,524,4.402,525,4.402,526,3.614,527,3.614,528,3.614,529,4.402]],["title/classes/LayoutNode.html",[40,1.169,88,0.301]],["body/classes/LayoutNode.html",[3,0.23,4,0.268,9,0.268,10,0.517,11,0.192,12,0.203,15,0.823,19,1.048,28,0.23,29,0.844,34,1.788,35,0.758,40,2.007,41,0.681,46,1.048,48,0.758,49,0.042,50,1.002,51,0.621,52,0.604,53,1.042,56,0.781,58,1.61,66,0.552,68,1.358,70,0.756,75,1.005,82,0.633,87,0.195,88,0.195,90,0.938,95,1.042,108,0.013,109,0.02,110,0.013,125,1.75,126,1.556,137,1.091,152,1.265,175,2.423,188,2.423,193,1.356,203,1.815,207,1.607,220,1.265,222,1.434,230,1.186,258,1.815,280,2.134,308,2.075,312,2.805,329,1.584,331,3.163,332,1.356,334,1.356,336,3.552,358,2.423,474,1.186,477,2.075,479,3.296,484,2.423,500,1.434,512,3.6,517,2.942,518,3.442,519,2.423,527,2.423,530,1.929,531,2.951,532,2.951,533,2.423,534,2.951,535,2.423,536,4.014,537,2.951,538,2.951,539,2.423,540,2.951,541,2.951,542,2.951,543,2.951,544,2.423,545,2.423,546,2.951,547,3.296,548,2.942,549,2.075,550,3.584,551,3.584,552,3.745,553,2.951,554,2.951,555,1.929,556,2.951,557,2.951,558,2.951,559,2.951,560,1.929,561,2.423,562,2.951,563,2.951,564,2.075,565,2.423,566,2.951,567,1.929,568,1.929,569,2.423,570,2.951,571,1.929,572,1.929,573,1.929,574,1.929,575,2.951,576,1.929,577,1.929,578,1.929,579,1.929,580,2.951,581,1.929,582,1.929,583,2.519,584,1.929,585,1.929,586,1.929,587,1.929,588,1.929,589,1.929,590,4.748,591,1.356,592,1.929,593,1.929,594,1.929,595,2.951,596,1.584,597,1.929,598,2.423,599,1.929,600,1.929,601,1.929,602,1.929,603,1.929,604,1.929,605,1.929,606,1.929,607,1.929,608,1.929,609,1.929,610,2.423,611,1.929,612,1.929,613,1.929,614,1.929,615,1.929,616,1.929,617,1.929,618,1.584,619,1.929,620,1.929,621,1.929,622,1.929,623,1.929,624,1.356,625,1.929,626,1.929,627,1.929,628,1.929,629,1.929,630,1.929,631,1.929,632,1.929,633,1.929]],["title/interfaces/LayoutOptions.html",[111,1.3,583,2.097]],["body/interfaces/LayoutOptions.html",[3,0.346,4,0.402,9,0.402,10,0.4,11,0.141,12,0.141,28,0.346,29,1.134,46,0.594,49,0.042,51,0.677,52,1.207,75,1.061,87,0.292,95,1.4,108,0.02,109,0.027,110,0.02,111,1.264,112,1.783,137,1.117,141,2.422,180,2.439,294,2.381,296,4.169,297,4.869,325,1.579,387,4.696,453,2.789,512,2.789,514,2.381,515,3.257,583,2.789,624,3.417,634,2.9,635,3.991,636,3.991,637,3.991,638,3.991,639,4.179,640,3.991,641,3.991,642,2.9,643,3.967,644,3.967,645,3.967,646,3.967,647,3.967,648,3.967,649,4.179,650,3.967,651,3.967,652,3.967,653,2.9,654,2.9,655,2.381,656,2.9,657,2.381,658,2.9,659,2.381,660,2.9,661,2.381]],["title/injectables/LayoutService.html",[115,0.685,279,1.625]],["body/injectables/LayoutService.html",[3,0.348,4,0.404,9,0.404,10,0.491,11,0.181,12,0.181,15,0.914,28,0.348,35,1.022,40,1.776,41,1.028,46,0.928,48,1.164,49,0.042,50,0.928,51,0.475,52,0.928,53,2.034,58,1.936,60,1.142,66,1.296,68,1.138,69,1.138,75,0.528,82,0.73,83,0.464,84,1.028,87,0.294,88,0.294,108,0.02,109,0.027,110,0.02,115,0.914,126,1.441,136,1.587,137,0.669,152,1.8,166,1.27,176,1.792,179,2.447,205,1.934,220,1.405,222,1.416,235,2.048,246,1.416,258,1.792,279,2.167,280,2.294,289,2.392,331,2.652,332,2.048,334,2.048,500,1.416,547,3.721,549,2.798,596,2.392,649,2.392,662,2.914,663,2.798,664,3.98,665,3.98,666,3.98,667,2.914,668,3.98,669,2.914,670,2.914,671,2.914,672,3.267,673,3.98,674,3.98,675,3.98,676,2.914,677,2.392,678,2.914,679,3.98,680,2.914,681,2.914,682,2.914,683,2.914,684,2.914,685,4.532,686,3.98,687,3.98,688,2.914,689,4.532,690,2.914,691,2.914,692,2.914,693,2.914,694,2.914,695,2.914,696,2.914,697,2.914,698,2.914,699,2.914,700,2.914,701,2.914,702,2.914,703,2.914,704,2.914,705,2.914]],["title/injectables/SchemaService.html",[115,0.685,280,1.3]],["body/injectables/SchemaService.html",[3,0.33,4,0.383,9,0.383,10,0.505,11,0.207,12,0.211,15,1.013,28,0.33,35,0.985,46,0.975,48,0.985,49,0.042,50,0.785,51,0.33,52,0.785,53,0.975,56,0.888,66,1.26,68,1.26,69,0.79,82,0.661,83,0.44,87,0.279,88,0.279,90,1.343,108,0.019,109,0.026,110,0.019,115,0.881,125,1.672,126,1.401,137,0.635,141,1.672,151,1.699,152,1.354,166,1.204,176,3.184,179,2.359,194,3.15,201,1.942,203,2.359,205,2.142,220,1.681,222,1.864,261,3.348,263,2.268,264,2.697,280,1.672,312,2.928,314,3.15,335,3.15,348,3.15,355,1.504,409,2.089,500,1.864,549,2.697,565,3.15,598,2.268,610,3.909,663,2.697,677,2.268,706,2.763,707,3.837,708,4.408,709,3.837,710,2.763,711,2.697,712,3.837,713,2.763,714,2.763,715,2.763,716,2.763,717,3.837,718,2.763,719,2.763,720,3.15,721,3.837,722,4.762,723,3.837,724,3.837,725,3.837,726,2.763,727,2.763,728,2.763,729,2.763,730,2.763,731,3.837,732,2.763,733,2.763,734,2.763,735,3.837,736,3.837,737,2.763,738,2.763,739,2.763,740,2.763,741,2.763,742,2.763,743,2.763,744,2.763,745,2.763,746,2.763,747,2.763,748,2.763,749,2.763]],["title/components/SelectWidgetComponent.html",[0,0.766,104,1.169]],["body/components/SelectWidgetComponent.html",[0,1.181,1,0.786,2,1.432,3,0.266,4,0.309,5,0.97,6,1.369,7,0.97,8,1.369,9,0.309,10,0.394,11,0.163,12,0.163,13,1.702,15,0.755,17,2.622,18,2.31,19,1.34,20,1.212,21,2.622,22,2.537,24,2.31,26,1.789,28,0.466,29,0.94,30,2.021,31,2.021,32,2.021,33,2.402,34,1.531,35,0.844,36,1.789,37,1.597,38,2.402,39,2.402,40,1.803,41,0.786,43,1.522,44,2.096,45,1.691,46,1.102,48,0.844,49,0.042,50,0.942,51,0.633,52,0.673,53,1.624,54,3.67,55,1.565,56,0.623,57,1.565,58,1.624,59,1.565,60,1.531,61,1.369,62,1.369,63,1.371,64,1.565,65,1.369,66,1.117,67,2.021,68,0.637,69,1.117,70,0.872,71,0.786,72,1.565,73,1.369,74,1.369,75,0.404,76,1.565,77,1.565,78,1.369,79,1.565,80,0.786,81,1.565,82,0.639,83,0.355,84,1.379,85,1.082,86,1.212,87,0.224,88,0.224,89,1.565,90,1.082,94,0.97,95,1.16,96,1.369,97,2.652,98,1.369,99,1.369,100,0.786,101,1.369,102,0.97,103,1.369,104,1.691,105,3.144,106,1.369,107,1.369,108,0.015,109,0.022,110,0.015,126,0.707,136,1.212,137,0.755,152,0.786,180,2.021,220,1.624,230,2.021,246,1.082,272,2.31,273,2.746,275,2.746,325,2.127,395,1.565,470,2.698,477,2.31,478,2.31,591,1.565,711,2.31,750,3.906,751,3.906,752,2.226,753,3.286,754,2.31,755,3.286,756,2.698,757,3.906,758,3.286,759,3.906,760,2.226,761,4.314,762,3.502,763,3.286,764,3.286,765,4.601,766,3.286,767,2.698,768,3.286,769,3.286,770,1.827,771,2.226,772,2.226,773,3.286,774,2.226,775,2.226,776,2.226,777,3.906,778,2.226,779,2.226,780,2.226,781,2.226,782,2.226,783,2.226,784,2.226,785,2.226,786,2.226,787,2.226,788,2.226,789,2.226,790,2.226,791,1.827]],["title/classes/Widget.html",[19,0.685,88,0.301]],["body/classes/Widget.html",[3,0.286,4,0.333,9,0.333,10,0.552,11,0.196,12,0.196,13,2.384,15,0.797,17,3.085,19,1.136,22,1.686,28,0.566,29,0.992,30,2.507,31,2.507,32,2.507,33,3.039,34,1.937,35,0.891,36,1.889,37,1.686,38,2.507,39,2.507,40,1.998,41,1.439,42,1.685,43,1.577,44,2.402,45,1.751,46,1.106,48,0.891,49,0.042,50,0.915,51,0.635,52,0.71,53,1.842,56,0.756,58,1.877,60,1.598,61,2.133,62,2.133,63,1.62,65,2.507,66,1.356,67,2.133,68,0.686,69,0.992,70,0.94,71,1.224,73,2.133,74,2.133,75,0.629,78,2.507,80,1.224,82,0.658,83,0.382,84,0.846,85,1.165,86,1.305,87,0.242,88,0.242,108,0.016,109,0.024,110,0.016,137,0.551,203,1.474,205,1.165,220,1.224,272,2.439,273,2.866,275,2.866,325,2.433,326,2.848,337,1.474,395,1.685,397,1.968,474,1.474,500,1.165,754,1.685,767,1.968,770,1.968,791,1.968,792,2.397,793,4.077,794,2.397,795,2.397,796,2.397,797,2.397,798,2.397,799,2.397,800,2.397,801,2.397,802,2.397,803,2.397,804,4.077,805,1.685,806,2.397,807,2.397,808,2.397,809,2.397,810,2.397,811,2.397,812,2.397,813,2.397,814,2.397,815,3.469,816,2.397,817,2.397,818,2.397,819,2.397,820,2.397,821,2.397,822,2.397,823,2.397,824,2.397,825,2.397,826,2.397,827,2.397]],["title/modules/WidgetLibraryModule.html",[247,1.169,427,1.625]],["body/modules/WidgetLibraryModule.html",[1,2.052,3,0.437,4,0.508,9,0.508,10,0.369,11,0.13,12,0.13,13,1.596,49,0.042,82,0.739,83,0.584,87,0.369,88,0.369,94,1.596,100,2.052,104,2.279,108,0.025,109,0.031,110,0.025,247,1.435,278,2.252,347,1.596,417,1.994,418,1.994,419,2.761,420,2.252,421,3.564,427,3.24,428,3.252,429,1.994,431,2.252,432,3.252,433,2.252,434,2.844,436,2.575,805,2.575,828,3.007,829,3.007,830,3.007,831,3.663,832,4.626,833,4.509,834,4.626]],["title/injectables/WidgetLibraryService.html",[115,0.685,762,2.097]],["body/injectables/WidgetLibraryService.html",[0,1.346,1,1.914,3,0.419,4,0.487,9,0.487,10,0.454,11,0.16,12,0.16,13,1.962,15,1.035,19,1.296,23,2.468,28,0.419,35,1.156,40,1.765,46,0.719,48,0.901,49,0.042,50,0.719,51,0.688,52,0.719,75,0.951,82,0.728,83,0.56,87,0.354,88,0.501,92,2.468,100,1.589,108,0.024,109,0.031,110,0.024,115,1.035,126,1.431,132,2.159,133,1.912,137,1.035,141,1.53,166,1.53,179,2.769,220,1.754,239,3.165,429,1.912,436,3.165,465,2.159,500,1.706,663,3.165,720,3.697,762,3.165,835,3.511,836,4.503,837,4.503,838,4.503,839,3.511,840,3.511,841,3.511,842,3.511,843,2.882,844,3.511,845,3.511,846,4.503,847,3.511,848,3.511]],["title/dependencies.html",[418,1.95,849,2.505]],["body/dependencies.html",[11,0.138,12,0.17,49,0.042,58,1.371,83,0.619,108,0.026,109,0.033,110,0.026,118,2.613,119,2.332,258,2.95,261,2.73,264,2.73,268,3.188,270,3.188,271,3.188,328,3.188,418,2.115,433,2.388,591,2.73,805,2.73,850,3.884,851,5.943,852,3.884,853,3.884,854,3.884,855,3.884,856,3.884,857,3.884,858,3.884,859,3.884,860,3.884,861,3.884,862,3.884,863,3.884,864,3.884,865,3.884,866,3.884,867,3.884,868,3.884,869,3.884,870,3.884,871,3.884,872,3.884,873,3.884,874,3.884,875,3.884,876,3.884,877,3.884,878,3.884,879,3.884,880,3.884,881,3.884]],["title/index.html",[28,0.299,882,2.056,883,2.056]],["body/index.html",[0,0.905,5,1.536,11,0.2,12,0.203,49,0.041,82,0.753,83,0.562,87,0.355,88,0.355,108,0.024,109,0.031,110,0.024,118,1.919,119,1.713,177,2.477,189,1.713,219,2.477,245,2.775,246,2.699,247,1.381,250,2.167,251,3.816,337,2.167,347,1.967,355,1.919,356,2.477,360,2.893,416,2.712,419,1.919,420,2.167,431,2.167,434,2.775,521,3.173,564,2.477,711,2.477,884,3.524,885,3.524,886,3.524,887,4.311,888,3.524,889,3.524,890,3.524,891,3.524,892,3.524,893,3.524,894,2.893,895,3.524,896,3.524,897,3.524,898,3.524,899,3.524,900,3.524,901,3.524,902,3.524,903,4.514,904,3.524,905,3.524,906,3.524,907,4.514,908,2.893,909,3.524,910,3.524,911,3.524,912,3.524,913,3.524,914,3.524,915,3.524,916,3.524,917,4.514,918,4.98,919,3.524,920,3.524,921,2.893,922,2.893,923,2.477,924,3.524,925,2.893,926,3.524,927,3.524,928,3.524,929,3.524,930,3.524,931,3.524,932,3.524,933,3.524]],["title/license.html",[882,2.056,883,2.056,934,2.056]],["body/license.html",[11,0.18,12,0.18,49,0.032,63,1.166,80,1.295,108,0.025,109,0.032,110,0.025,189,2.251,245,2.848,246,2.466,255,3.013,284,2.58,327,3.013,347,1.599,569,3.802,887,4.166,894,3.013,923,2.58,934,3.013,935,3.67,936,5.33,937,4.631,938,4.631,939,3.67,940,3.67,941,3.67,942,3.67,943,3.013,944,3.67,945,3.67,946,3.67,947,3.67,948,4.631,949,3.67,950,3.67,951,3.67,952,3.67,953,3.013,954,3.67,955,5.817,956,3.67,957,3.67,958,3.67,959,5.075,960,3.67,961,4.631,962,3.67,963,3.67,964,3.67,965,3.67,966,3.67,967,3.67,968,3.67,969,3.67,970,4.631,971,3.67,972,3.67,973,3.67,974,3.67,975,4.631,976,4.631,977,3.013,978,3.67,979,3.67,980,3.67,981,3.67,982,3.67,983,3.67,984,3.67,985,3.67,986,3.67,987,3.67,988,3.67,989,3.67,990,3.67,991,3.67,992,3.67,993,3.67,994,3.67,995,3.67,996,3.67,997,3.67,998,3.67,999,3.67,1000,3.67,1001,3.67,1002,3.67,1003,3.67]],["title/modules.html",[417,2.202]],["body/modules.html",[49,0.036,108,0.031,109,0.036,110,0.031,119,2.588,416,2.518,417,2.518,427,2.518,1004,5.325,1005,5.325,1006,5.325]],["title/overview.html",[1007,3.32]],["body/overview.html",[1,2.016,2,1.618,43,1.801,49,0.041,94,1.618,100,2.016,102,2.597,104,2.239,108,0.025,109,0.032,110,0.025,112,2.283,166,1.618,247,1.455,278,2.283,279,2.778,280,2.224,347,1.618,416,3.146,417,2.022,418,2.022,419,2.022,420,2.283,421,2.611,422,3.049,423,3.049,424,3.049,425,3.049,426,3.049,427,3.276,428,3.28,429,2.022,474,2.283,828,3.049,829,3.049,830,3.049,1007,3.049,1008,3.831,1009,3.049,1010,3.714,1011,3.049]],["title/miscellaneous/typealiases.html",[1012,1.54,1013,3.581]],["body/miscellaneous/typealiases.html",[10,0.456,11,0.16,12,0.16,28,0.54,49,0.036,51,0.54,56,0.721,63,1.819,108,0.031,109,0.036,110,0.031,113,3.18,114,3.696,120,3.18,121,3.18,122,3.233,1012,2.781,1014,4.523,1015,4.523]],["title/miscellaneous/variables.html",[1012,1.54,1016,2.939]],["body/miscellaneous/variables.html",[1,1.57,2,1.938,10,0.449,11,0.158,12,0.158,13,1.938,19,1.022,28,0.531,49,0.04,51,0.531,66,1.272,70,1.743,100,1.57,104,1.743,108,0.03,109,0.035,110,0.03,189,2.162,672,3.651,833,4.274,1012,2.735,1016,3.651,1017,4.448,1018,4.448,1019,4.448]],["title/additional-documentation/introduction.html",[1020,2.505,1021,2.505,1022,2.505]],["body/additional-documentation/introduction.html",[0,1.352,3,0.214,5,1.685,11,0.164,12,0.2,15,0.888,19,0.642,20,0.979,22,2.035,23,3.532,26,0.979,29,1.268,34,1.642,37,0.873,49,0.041,50,0.908,51,0.628,53,0.986,56,0.546,58,1.932,63,1.521,69,0.514,70,1.095,71,0.634,75,0.507,80,0.634,82,0.664,87,0.346,88,0.346,92,2.944,95,0.634,108,0.023,109,0.019,110,0.019,122,1.718,125,1.218,127,2.718,130,2.944,137,0.642,141,1.494,146,1.263,152,0.634,160,1.263,168,1.475,180,2.108,187,3.254,189,0.873,191,2.294,193,1.263,196,3.438,205,2.249,207,0.979,219,1.263,222,0.873,235,1.263,239,2.944,244,1.475,245,1.105,246,2.441,250,1.105,251,1.964,259,2.814,266,2.814,281,2.294,284,1.263,285,1.475,286,1.475,287,2.294,288,2.294,295,2.294,296,2.41,308,1.263,310,2.814,312,2.727,325,0.979,337,1.718,344,1.475,347,0.783,355,1.522,356,1.263,409,1.522,429,0.979,459,2.294,463,2.294,465,2.378,478,1.964,518,1.964,521,1.263,523,2.814,526,2.814,528,1.475,533,1.475,535,1.475,539,1.475,544,1.475,545,1.475,548,3.174,552,3.438,561,2.294,564,1.964,618,1.475,624,3.254,635,2.294,636,2.294,637,2.294,638,2.294,639,2.814,640,2.294,641,2.294,655,1.475,657,1.475,659,1.475,661,1.475,754,1.263,756,1.475,843,3.438,908,2.294,921,3.64,922,2.294,923,1.263,925,1.475,943,1.475,953,2.294,977,1.475,1008,1.475,1009,1.475,1011,1.475,1023,1.797,1024,1.797,1025,4.188,1026,1.797,1027,3.867,1028,2.794,1029,2.794,1030,2.794,1031,2.794,1032,2.794,1033,2.794,1034,2.794,1035,1.797,1036,4.628,1037,1.797,1038,1.797,1039,1.797,1040,1.797,1041,1.797,1042,1.797,1043,3.428,1044,1.797,1045,1.797,1046,1.797,1047,1.797,1048,1.797,1049,1.797,1050,1.797,1051,2.794,1052,1.797,1053,3.428,1054,1.797,1055,1.797,1056,1.797,1057,1.797,1058,1.797,1059,2.794,1060,1.797,1061,1.797,1062,1.797,1063,1.797,1064,1.797,1065,1.797,1066,4.434,1067,1.797,1068,2.794,1069,1.797,1070,1.797,1071,1.797,1072,1.797,1073,2.794,1074,1.797,1075,1.797,1076,1.797,1077,1.797,1078,2.794,1079,1.797,1080,1.797,1081,1.797,1082,1.797,1083,3.867,1084,2.794,1085,1.797,1086,1.797,1087,3.428,1088,3.428,1089,1.797,1090,2.794,1091,1.797,1092,1.797,1093,1.797,1094,1.797,1095,2.794,1096,1.797,1097,1.797,1098,1.797,1099,1.797,1100,1.797,1101,1.797,1102,2.794,1103,1.797,1104,1.797,1105,1.797,1106,4.628,1107,1.797,1108,1.797,1109,3.428,1110,3.867,1111,3.428,1112,2.794,1113,4.188,1114,1.797,1115,1.797,1116,1.797,1117,2.794,1118,1.797,1119,3.428,1120,2.794,1121,1.797,1122,1.797,1123,1.797,1124,1.797,1125,1.797,1126,1.797,1127,1.797,1128,1.797,1129,1.797,1130,1.797,1131,1.797,1132,2.794,1133,1.797,1134,1.797,1135,2.794,1136,1.797,1137,1.797,1138,1.797,1139,1.797,1140,1.797,1141,1.797,1142,1.797,1143,1.797,1144,1.797,1145,1.797,1146,1.797,1147,1.797,1148,1.797,1149,1.797,1150,1.797,1151,1.797,1152,1.797,1153,1.797,1154,1.797,1155,1.797,1156,1.797,1157,1.797,1158,1.797]]],"invertedIndex":[["",{"_index":49,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["0",{"_index":235,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"injectables/LayoutService.html":{},"additional-documentation/introduction.html":{}}}],["0.0.36",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["0.11.0",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["0.3.9",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["0.9.1",{"_index":881,"title":{},"body":{"dependencies.html":{}}}],["07/schema",{"_index":1031,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["1",{"_index":686,"title":{},"body":{"injectables/LayoutService.html":{}}}],["1.9.0",{"_index":879,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":1063,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["2",{"_index":1008,"title":{},"body":{"overview.html":{},"additional-documentation/introduction.html":{}}}],["2.5.4",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["2014",{"_index":942,"title":{},"body":{"license.html":{}}}],["2019",{"_index":947,"title":{},"body":{"license.html":{}}}],["3",{"_index":1011,"title":{},"body":{"overview.html":{},"additional-documentation/introduction.html":{}}}],["30",{"_index":1095,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["333",{"_index":1082,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["4",{"_index":1009,"title":{},"body":{"overview.html":{},"additional-documentation/introduction.html":{}}}],["4.14.136",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["4.17.14",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":1010,"title":{},"body":{"overview.html":{}}}],["6.0.1",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["6.10.0",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["6.5.2",{"_index":877,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":886,"title":{},"body":{"index.html":{}}}],["7.0.0",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["7.0.3",{"_index":864,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["_blank",{"_index":316,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["_layout",{"_index":678,"title":{},"body":{"injectables/LayoutService.html":{}}}],["_parent",{"_index":317,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["_schema",{"_index":729,"title":{},"body":{"injectables/SchemaService.html":{}}}],["_self",{"_index":315,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["_top",{"_index":318,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["above",{"_index":894,"title":{},"body":{"index.html":{},"license.html":{}}}],["abstract",{"_index":806,"title":{},"body":{"classes/Widget.html":{}}}],["abstractcontrol",{"_index":78,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["accessing",{"_index":575,"title":{},"body":{"classes/LayoutNode.html":{}}}],["accesskey",{"_index":635,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["accessors",{"_index":549,"title":{},"body":{"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{}}}],["accordingly",{"_index":1139,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["ace",{"_index":270,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"dependencies.html":{}}}],["act",{"_index":1138,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["action",{"_index":284,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"license.html":{},"additional-documentation/introduction.html":{}}}],["acts",{"_index":535,"title":{},"body":{"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["actual",{"_index":1073,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["actual_component",{"_index":107,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["add",{"_index":219,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["addeventlistener",{"_index":167,"title":{},"body":{"injectables/DataEventPluginService.html":{}}}],["addeventlistener(element",{"_index":148,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["addition",{"_index":265,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["additional",{"_index":1020,"title":{"additional-documentation/introduction.html":{}},"body":{}}],["adds",{"_index":145,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["afterviewinit",{"_index":793,"title":{},"body":{"classes/Widget.html":{}}}],["against",{"_index":350,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["age",{"_index":1036,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["ajv",{"_index":261,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{},"dependencies.html":{}}}],["ajv.ajv",{"_index":739,"title":{},"body":{"injectables/SchemaService.html":{}}}],["ajv.validatefunction",{"_index":744,"title":{},"body":{"injectables/SchemaService.html":{}}}],["ajv]{@link",{"_index":381,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["aliases",{"_index":1014,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allerrors",{"_index":740,"title":{},"body":{"injectables/SchemaService.html":{}}}],["allowing",{"_index":544,"title":{},"body":{"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["allows",{"_index":194,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"injectables/SchemaService.html":{}}}],["along",{"_index":534,"title":{},"body":{"classes/LayoutNode.html":{}}}],["already",{"_index":926,"title":{},"body":{"index.html":{}}}],["alt",{"_index":655,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["and/or",{"_index":255,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"license.html":{}}}],["angular",{"_index":251,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["angular/animations",{"_index":850,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":852,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":433,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"modules/WidgetLibraryModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":853,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":83,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/flex",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":805,"title":{},"body":{"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":118,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"modules/JsonSchemaFormModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/router",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["angular2",{"_index":944,"title":{},"body":{"license.html":{}}}],["angular]{@link",{"_index":377,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["angularjs",{"_index":363,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["another",{"_index":262,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["api",{"_index":358,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{}}}],["app.component",{"_index":919,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":918,"title":{},"body":{"index.html":{}}}],["application",{"_index":916,"title":{},"body":{"index.html":{}}}],["application/x",{"_index":300,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["applied",{"_index":139,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["appmodule",{"_index":920,"title":{},"body":{"index.html":{}}}],["appropriate",{"_index":529,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["args",{"_index":735,"title":{},"body":{"injectables/SchemaService.html":{}}}],["arising",{"_index":1001,"title":{},"body":{"license.html":{}}}],["array",{"_index":53,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"additional-documentation/introduction.html":{}}}],["array.from(mappedpointers",{"_index":705,"title":{},"body":{"injectables/LayoutService.html":{}}}],["array.from(schemapointers.keys",{"_index":702,"title":{},"body":{"injectables/LayoutService.html":{}}}],["arrayitem",{"_index":629,"title":{},"body":{"classes/LayoutNode.html":{}}}],["arrayitemtype",{"_index":630,"title":{},"body":{"classes/LayoutNode.html":{}}}],["arrays",{"_index":186,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["assets/submit.png",{"_index":1094,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["associated",{"_index":80,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"license.html":{},"additional-documentation/introduction.html":{}}}],["association",{"_index":1130,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["attemtps",{"_index":888,"title":{},"body":{"index.html":{}}}],["attribute",{"_index":294,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutOptions.html":{}}}],["attributes",{"_index":180,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"interfaces/LayoutOptions.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/introduction.html":{}}}],["augmenting",{"_index":538,"title":{},"body":{"classes/LayoutNode.html":{}}}],["authors",{"_index":991,"title":{},"body":{"license.html":{}}}],["autocomplete",{"_index":285,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{}}}],["automatically",{"_index":201,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"interfaces/LayoutItem.html":{},"injectables/SchemaService.html":{}}}],["availablepointers",{"_index":701,"title":{},"body":{"injectables/LayoutService.html":{}}}],["based",{"_index":711,"title":{},"body":{"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"index.html":{}}}],["basic",{"_index":909,"title":{},"body":{"index.html":{}}}],["basic.component.ts",{"_index":1046,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["basic_widgets",{"_index":833,"title":{},"body":{"modules/WidgetLibraryModule.html":{},"miscellaneous/variables.html":{}}}],["basiccomponent",{"_index":1047,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["become",{"_index":1057,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["begin",{"_index":910,"title":{},"body":{"index.html":{}}}],["being",{"_index":1088,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["beta.24",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["bind",{"_index":463,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"additional-documentation/introduction.html":{}}}],["bindings",{"_index":1091,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["binds",{"_index":1099,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["boolean",{"_index":141,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"interfaces/LayoutOptions.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{}}}],["bootstrap",{"_index":420,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"index.html":{},"overview.html":{}}}],["both",{"_index":338,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["bound",{"_index":1127,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["brace",{"_index":268,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"dependencies.html":{}}}],["brace]{@link",{"_index":385,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["bring",{"_index":901,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1006,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":119,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"modules/JsonSchemaFormModule.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browserified",{"_index":269,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["browsermodule",{"_index":917,"title":{},"body":{"index.html":{}}}],["bubble",{"_index":1126,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["builder",{"_index":885,"title":{},"body":{"index.html":{}}}],["buildlayout(layout",{"_index":681,"title":{},"body":{"injectables/LayoutService.html":{}}}],["bunch",{"_index":929,"title":{},"body":{"index.html":{}}}],["button",{"_index":23,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{}}}],["button'},{'name",{"_index":99,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["button.component.html",{"_index":27,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button.component.scss",{"_index":25,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button.html",{"_index":1097,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["button1",{"_index":1109,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["button2",{"_index":1111,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["buttoncomponent",{"_index":1,"title":{"components/ButtonComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["buttons",{"_index":1083,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["can't",{"_index":1151,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["care",{"_index":1059,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["case",{"_index":1140,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["catch",{"_index":696,"title":{},"body":{"injectables/LayoutService.html":{}}}],["cb",{"_index":734,"title":{},"body":{"injectables/SchemaService.html":{}}}],["change",{"_index":67,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["changedetection",{"_index":276,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["changedetectionstrategy",{"_index":324,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":277,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["changes",{"_index":754,"title":{},"body":{"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"additional-documentation/introduction.html":{}}}],["changes.hasownproperty('schema",{"_index":398,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["changes.layoutnode",{"_index":814,"title":{},"body":{"classes/Widget.html":{}}}],["charge",{"_index":952,"title":{},"body":{"license.html":{}}}],["check",{"_index":903,"title":{},"body":{"index.html":{}}}],["checkmark",{"_index":1096,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["choice",{"_index":1146,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["claim",{"_index":994,"title":{},"body":{"license.html":{}}}],["class",{"_index":88,"title":{"classes/LayoutNode.html":{},"classes/Widget.html":{}},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["classes",{"_index":474,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"classes/Widget.html":{},"overview.html":{}}}],["click",{"_index":1104,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["click.data.layout",{"_index":1128,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["clicked",{"_index":1125,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["client",{"_index":248,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["clonedeep",{"_index":329,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{}}}],["clonedeep(this.layoutitem",{"_index":614,"title":{},"body":{"classes/LayoutNode.html":{}}}],["clonedeep(this.schema",{"_index":415,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["cluster_jsonschemaformmodule",{"_index":422,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"overview.html":{}}}],["cluster_jsonschemaformmodule_declarations",{"_index":423,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"overview.html":{}}}],["cluster_jsonschemaformmodule_exports",{"_index":426,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"overview.html":{}}}],["cluster_jsonschemaformmodule_imports",{"_index":425,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"overview.html":{}}}],["cluster_jsonschemaformmodule_jsonschemaformcomponent_providers",{"_index":424,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"overview.html":{}}}],["cluster_widgetlibrarymodule",{"_index":828,"title":{},"body":{"modules/WidgetLibraryModule.html":{},"overview.html":{}}}],["cluster_widgetlibrarymodule_declarations",{"_index":829,"title":{},"body":{"modules/WidgetLibraryModule.html":{},"overview.html":{}}}],["cluster_widgetlibrarymodule_exports",{"_index":830,"title":{},"body":{"modules/WidgetLibraryModule.html":{},"overview.html":{}}}],["code",{"_index":1120,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["collector",{"_index":200,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["color",{"_index":1081,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["command",{"_index":1053,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["commonmodule",{"_index":432,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"modules/WidgetLibraryModule.html":{}}}],["compatible",{"_index":359,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["compiler",{"_index":446,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["compiler.compilemoduleandallcomponentssync(runtimecomponentmodule",{"_index":487,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["compiles",{"_index":455,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["compileschema",{"_index":746,"title":{},"body":{"injectables/SchemaService.html":{}}}],["compiletemplate",{"_index":443,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["compiletemplate(template",{"_index":451,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["component",{"_index":0,"title":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"injectables/WidgetLibraryService.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["component's",{"_index":924,"title":{},"body":{"index.html":{}}}],["component_template",{"_index":98,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["componentfactory",{"_index":764,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["componentfactoryresolver",{"_index":761,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["componentref",{"_index":470,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{}}}],["componentref.destroy",{"_index":511,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["componentref.hostview.detectchanges",{"_index":509,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["componentref.location.nativeelement).innerhtml",{"_index":492,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["conditions",{"_index":974,"title":{},"body":{"license.html":{}}}],["connection",{"_index":1002,"title":{},"body":{"license.html":{}}}],["console.error('buildlayout",{"_index":698,"title":{},"body":{"injectables/LayoutService.html":{}}}],["console.error(layoutitem",{"_index":700,"title":{},"body":{"injectables/LayoutService.html":{}}}],["console.warn(this",{"_index":403,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["const",{"_index":152,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/introduction.html":{}}}],["constructor",{"_index":41,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/DataEventPluginService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["constructor(compiler",{"_index":445,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["constructor(componentfactory",{"_index":760,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["constructor(elementdatastorage",{"_index":169,"title":{},"body":{"injectables/DataEventPluginService.html":{}}}],["constructor(jsf",{"_index":42,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"classes/Widget.html":{}}}],["constructor(layoutitem",{"_index":553,"title":{},"body":{"classes/LayoutNode.html":{}}}],["constructor(private",{"_index":136,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{}}}],["constructor(protected",{"_index":811,"title":{},"body":{"classes/Widget.html":{}}}],["constructor(schemaservice",{"_index":289,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/LayoutService.html":{}}}],["consumption",{"_index":898,"title":{},"body":{"index.html":{}}}],["contain",{"_index":191,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"additional-documentation/introduction.html":{}}}],["container",{"_index":520,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["contains",{"_index":531,"title":{},"body":{"classes/LayoutNode.html":{}}}],["content",{"_index":552,"title":{},"body":{"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["context",{"_index":452,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["contianer",{"_index":525,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["contract",{"_index":998,"title":{},"body":{"license.html":{}}}],["control",{"_index":17,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["control.controlname",{"_index":497,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["control.layoutnode.name",{"_index":498,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["controldisabled",{"_index":30,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["controlname",{"_index":31,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["controls",{"_index":341,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["controlvalue",{"_index":32,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["conversion",{"_index":1148,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["converted",{"_index":188,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"classes/LayoutNode.html":{}}}],["copies",{"_index":970,"title":{},"body":{"license.html":{}}}],["copy",{"_index":569,"title":{},"body":{"classes/LayoutNode.html":{},"license.html":{}}}],["copyright",{"_index":936,"title":{},"body":{"license.html":{}}}],["core",{"_index":869,"title":{},"body":{"dependencies.html":{}}}],["couple",{"_index":1105,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["create",{"_index":484,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{}}}],["create(layoutitem",{"_index":559,"title":{},"body":{"classes/LayoutNode.html":{}}}],["createcomponent",{"_index":780,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["createcomponent(template",{"_index":480,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["created",{"_index":756,"title":{},"body":{"components/SelectWidgetComponent.html":{},"additional-documentation/introduction.html":{}}}],["createmodule(component",{"_index":485,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["creates",{"_index":477,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"components/SelectWidgetComponent.html":{}}}],["creation",{"_index":466,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["ctx",{"_index":469,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["currentlayout",{"_index":690,"title":{},"body":{"injectables/LayoutService.html":{}}}],["currently",{"_index":1077,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["custom",{"_index":1086,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["damages",{"_index":995,"title":{},"body":{"license.html":{}}}],["data",{"_index":56,"title":{"interfaces/Data.html":{}},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/introduction.html":{}}}],["dataevent",{"_index":122,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/introduction.html":{}}}],["dataeventpluginservice",{"_index":134,"title":{"injectables/DataEventPluginService.html":{}},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"modules/JsonSchemaFormModule.html":{}}}],["dataindex",{"_index":38,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["dataname",{"_index":155,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["datapointer",{"_index":551,"title":{},"body":{"classes/LayoutNode.html":{}}}],["datapointermap",{"_index":708,"title":{},"body":{"injectables/SchemaService.html":{}}}],["datatype",{"_index":631,"title":{},"body":{"classes/LayoutNode.html":{}}}],["david",{"_index":939,"title":{},"body":{"license.html":{}}}],["davis",{"_index":941,"title":{},"body":{"license.html":{}}}],["deal",{"_index":958,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1003,"title":{},"body":{"license.html":{}}}],["deault",{"_index":1049,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["declarations",{"_index":419,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"modules/WidgetLibraryModule.html":{},"index.html":{},"overview.html":{}}}],["decorators",{"_index":591,"title":{},"body":{"classes/LayoutNode.html":{},"components/SelectWidgetComponent.html":{},"dependencies.html":{}}}],["default",{"_index":70,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["defaultto",{"_index":584,"title":{},"body":{"classes/LayoutNode.html":{}}}],["defaultto(key",{"_index":611,"title":{},"body":{"classes/LayoutNode.html":{}}}],["defaultto(this.layoutitem.options",{"_index":627,"title":{},"body":{"classes/LayoutNode.html":{}}}],["defaultto(this.schema",{"_index":620,"title":{},"body":{"classes/LayoutNode.html":{}}}],["defaultwidget",{"_index":842,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["define",{"_index":307,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["defined",{"_index":46,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{}}}],["definition",{"_index":566,"title":{},"body":{"classes/LayoutNode.html":{}}}],["definitions",{"_index":723,"title":{},"body":{"injectables/SchemaService.html":{}}}],["degree",{"_index":536,"title":{},"body":{"classes/LayoutNode.html":{}}}],["delete",{"_index":204,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["delete(element",{"_index":206,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["deleted",{"_index":232,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["demo",{"_index":905,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":418,"title":{"dependencies.html":{}},"body":{"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depends",{"_index":256,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["describing",{"_index":61,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["description",{"_index":15,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{}}}],["destroyed",{"_index":394,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["determine",{"_index":138,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"interfaces/LayoutItem.html":{}}}],["determined",{"_index":1044,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["dialog",{"_index":310,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{}}}],["difference",{"_index":676,"title":{},"body":{"injectables/LayoutService.html":{}}}],["directive",{"_index":96,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["directives",{"_index":106,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["dirname",{"_index":636,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["disable",{"_index":74,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["disabled",{"_index":637,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["display",{"_index":921,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["displayed",{"_index":674,"title":{},"body":{"injectables/LayoutService.html":{}}}],["displays",{"_index":16,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{}}}],["distribute",{"_index":967,"title":{},"body":{"license.html":{}}}],["document",{"_index":457,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["document.createelement('template",{"_index":490,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["documentation",{"_index":956,"title":{},"body":{"license.html":{}}}],["documentfragment",{"_index":461,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["don't",{"_index":925,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["down",{"_index":1136,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["dynamic",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":753,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["ease",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["easy",{"_index":724,"title":{},"body":{"injectables/SchemaService.html":{}}}],["editor",{"_index":271,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"dependencies.html":{}}}],["element",{"_index":84,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["element.addeventlistener(type",{"_index":164,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["element.removeeventlistener(type",{"_index":165,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["elementdatastorage",{"_index":44,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["elementdatastorageservice",{"_index":45,"title":{"injectables/ElementDataStorageService.html":{}},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["elementref",{"_index":804,"title":{},"body":{"classes/Widget.html":{}}}],["enctype",{"_index":286,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{}}}],["entire",{"_index":349,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["entrycomponents",{"_index":832,"title":{},"body":{"modules/WidgetLibraryModule.html":{}}}],["equal",{"_index":1038,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["err",{"_index":697,"title":{},"body":{"injectables/LayoutService.html":{}}}],["error",{"_index":596,"title":{},"body":{"classes/LayoutNode.html":{},"injectables/LayoutService.html":{}}}],["error('missing",{"_index":600,"title":{},"body":{"classes/LayoutNode.html":{}}}],["even",{"_index":494,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["event",{"_index":63,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/HiddenComponent.html":{},"modules/JsonSchemaFormModule.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/introduction.html":{}}}],["event.data",{"_index":160,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"additional-documentation/introduction.html":{}}}],["event.data.id",{"_index":1117,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["event.data.onclick",{"_index":1123,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["event.target).value",{"_index":827,"title":{},"body":{"classes/Widget.html":{}}}],["event_manager_plugins",{"_index":435,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["eventhandler",{"_index":157,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["eventmanager",{"_index":117,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["eventname",{"_index":150,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["eventname.split",{"_index":156,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["events",{"_index":1102,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["everything",{"_index":1051,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["example",{"_index":266,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{}}}],["example.html",{"_index":366,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["examples",{"_index":907,"title":{},"body":{"index.html":{}}}],["examples)]{@link",{"_index":364,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["exception",{"_index":1085,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["expect",{"_index":1150,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["export",{"_index":87,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["exports",{"_index":421,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"overview.html":{}}}],["express",{"_index":982,"title":{},"body":{"license.html":{}}}],["extends",{"_index":18,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["external",{"_index":1119,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["f.componenttype",{"_index":506,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["factory",{"_index":504,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["factory.create(this.injector",{"_index":507,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["false",{"_index":71,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"additional-documentation/introduction.html":{}}}],["feedback",{"_index":345,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["few",{"_index":1060,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["fields",{"_index":1043,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{}}}],["files",{"_index":957,"title":{},"body":{"license.html":{}}}],["filling",{"_index":346,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["find",{"_index":928,"title":{},"body":{"index.html":{}}}],["fired",{"_index":131,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["first",{"_index":127,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"additional-documentation/introduction.html":{}}}],["firstname",{"_index":1032,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["fitness",{"_index":987,"title":{},"body":{"license.html":{}}}],["flag",{"_index":73,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["fn",{"_index":1121,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["fn(event",{"_index":1124,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["folder",{"_index":933,"title":{},"body":{"index.html":{}}}],["following",{"_index":923,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/introduction.html":{}}}],["form",{"_index":246,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{},"index.html":{},"license.html":{},"additional-documentation/introduction.html":{}}}],["form's",{"_index":360,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"index.html":{}}}],["form'},{'name",{"_index":103,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["form.component",{"_index":439,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["form.component.html",{"_index":281,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{}}}],["form.component.ts",{"_index":244,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{}}}],["form.component.ts:119",{"_index":320,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:124",{"_index":323,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:63",{"_index":313,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:65",{"_index":306,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:70",{"_index":292,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:75",{"_index":299,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:80",{"_index":305,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:85",{"_index":311,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:90",{"_index":319,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:94",{"_index":290,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.module.ts",{"_index":430,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["form.service",{"_index":86,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["form.service.ts",{"_index":442,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["form.service.ts:39",{"_index":450,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["form.service.ts:44",{"_index":464,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["form.service.ts:50",{"_index":468,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["form.service.ts:60",{"_index":454,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["form/src/lib/data",{"_index":113,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"miscellaneous/typealiases.html":{}}}],["form/src/lib/element",{"_index":173,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["form/src/lib/json",{"_index":243,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{}}}],["form/src/lib/layout",{"_index":512,"title":{},"body":{"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{}}}],["form/src/lib/layout.service.ts",{"_index":662,"title":{},"body":{"injectables/LayoutService.html":{}}}],["form/src/lib/layout.service.ts:18",{"_index":671,"title":{},"body":{"injectables/LayoutService.html":{}}}],["form/src/lib/layout.service.ts:20",{"_index":667,"title":{},"body":{"injectables/LayoutService.html":{}}}],["form/src/lib/layout.service.ts:24",{"_index":669,"title":{},"body":{"injectables/LayoutService.html":{}}}],["form/src/lib/schema.service.ts",{"_index":706,"title":{},"body":{"injectables/SchemaService.html":{}}}],["form/src/lib/schema.service.ts:17",{"_index":716,"title":{},"body":{"injectables/SchemaService.html":{}}}],["form/src/lib/schema.service.ts:21",{"_index":714,"title":{},"body":{"injectables/SchemaService.html":{}}}],["form/src/lib/schema.service.ts:30",{"_index":719,"title":{},"body":{"injectables/SchemaService.html":{}}}],["form/src/lib/schema.service.ts:49",{"_index":710,"title":{},"body":{"injectables/SchemaService.html":{}}}],["form/src/lib/widget",{"_index":13,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{}}}],["form]{@link",{"_index":361,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["formcontrol",{"_index":33,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["forminitialized",{"_index":388,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["fragment",{"_index":458,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["free",{"_index":951,"title":{},"body":{"license.html":{}}}],["function",{"_index":151,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"injectables/SchemaService.html":{}}}],["function('event",{"_index":1122,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["furnished",{"_index":973,"title":{},"body":{"license.html":{}}}],["garbage",{"_index":199,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["generatengcontent",{"_index":788,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["generates",{"_index":252,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["get(element",{"_index":212,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["getcontent",{"_index":578,"title":{},"body":{"classes/LayoutNode.html":{}}}],["getdatapointer",{"_index":573,"title":{},"body":{"classes/LayoutNode.html":{}}}],["getdatapointermap",{"_index":718,"title":{},"body":{"injectables/SchemaService.html":{}}}],["getdocumentfragment(componentref",{"_index":489,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["getlayout",{"_index":670,"title":{},"body":{"injectables/LayoutService.html":{}}}],["getlayoutdefinition",{"_index":567,"title":{},"body":{"classes/LayoutNode.html":{}}}],["getname",{"_index":571,"title":{},"body":{"classes/LayoutNode.html":{}}}],["getoptions",{"_index":581,"title":{},"body":{"classes/LayoutNode.html":{}}}],["getpointer(key",{"_index":609,"title":{},"body":{"classes/LayoutNode.html":{}}}],["gets",{"_index":720,"title":{},"body":{"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{}}}],["getschema",{"_index":713,"title":{},"body":{"injectables/SchemaService.html":{}}}],["getting",{"_index":882,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettype",{"_index":576,"title":{},"body":{"classes/LayoutNode.html":{}}}],["getwidget",{"_index":837,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["getwidget(type",{"_index":838,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["given",{"_index":562,"title":{},"body":{"classes/LayoutNode.html":{}}}],["gives",{"_index":540,"title":{},"body":{"classes/LayoutNode.html":{}}}],["global",{"_index":652,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["good",{"_index":1145,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["google",{"_index":1112,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["granted",{"_index":950,"title":{},"body":{"license.html":{}}}],["greater",{"_index":1039,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["ground",{"_index":896,"title":{},"body":{"index.html":{}}}],["handle",{"_index":618,"title":{},"body":{"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["handled",{"_index":1131,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["handler",{"_index":130,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"additional-documentation/introduction.html":{}}}],["handler(event",{"_index":162,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["handling",{"_index":664,"title":{},"body":{"injectables/LayoutService.html":{}}}],["has(element",{"_index":215,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["haswidget(type",{"_index":848,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["height",{"_index":657,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["held",{"_index":938,"title":{},"body":{"license.html":{}}}],["here",{"_index":908,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["hereby",{"_index":949,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":239,"title":{},"body":{"components/HiddenComponent.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{}}}],["hidden'},{'name",{"_index":101,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["hidden.component.html",{"_index":241,"title":{},"body":{"components/HiddenComponent.html":{}}}],["hidden.component.scss",{"_index":240,"title":{},"body":{"components/HiddenComponent.html":{}}}],["hiddencomponent",{"_index":100,"title":{"components/HiddenComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["holders",{"_index":992,"title":{},"body":{"license.html":{}}}],["html",{"_index":95,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/introduction.html":{}}}],["htmlclass",{"_index":638,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["htmlelement",{"_index":149,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{}}}],["http://json",{"_index":1029,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["http://schemaform.io",{"_index":362,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["http://schemaform.io/examples/bootstrap",{"_index":365,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["http://thlorenz.github.io/brace",{"_index":386,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["http://ulion.github.io/jsonform/playground",{"_index":376,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["https://angular.io",{"_index":378,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["https://developer.mozilla.org/en",{"_index":297,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutOptions.html":{}}}],["https://example.com/person.schema.json",{"_index":1028,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["https://github.com/epoberezkin/ajv",{"_index":382,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["https://github.com/epoberezkin/json",{"_index":384,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["https://github.com/joshfire/jsonform",{"_index":375,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["https://github.com/lodash/lodash",{"_index":380,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["https://github.com/mozilla",{"_index":370,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["https://mozilla",{"_index":372,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["icon",{"_index":639,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["id",{"_index":548,"title":{},"body":{"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["identifier",{"_index":558,"title":{},"body":{"classes/LayoutNode.html":{}}}],["ignore",{"_index":743,"title":{},"body":{"injectables/SchemaService.html":{}}}],["image",{"_index":843,"title":{},"body":{"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{}}}],["implements",{"_index":272,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["implied",{"_index":983,"title":{},"body":{"license.html":{}}}],["import",{"_index":82,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["imports",{"_index":431,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"modules/WidgetLibraryModule.html":{},"index.html":{}}}],["included",{"_index":977,"title":{},"body":{"license.html":{},"additional-documentation/introduction.html":{}}}],["including",{"_index":961,"title":{},"body":{"license.html":{}}}],["incorrect",{"_index":781,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["index",{"_index":28,"title":{"index.html":{}},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":514,"title":{},"body":{"interfaces/LayoutItem.html":{},"interfaces/LayoutOptions.html":{}}}],["individual",{"_index":340,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{}}}],["inherited",{"_index":54,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["initial",{"_index":820,"title":{},"body":{"classes/Widget.html":{}}}],["initialize",{"_index":816,"title":{},"body":{"classes/Widget.html":{}}}],["initializecontrol",{"_index":444,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["initializecontrol(control",{"_index":462,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["initializeform",{"_index":406,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["initializelayout",{"_index":410,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["initializeschema",{"_index":412,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["injectable",{"_index":115,"title":{"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{}},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{}}}],["injectables",{"_index":166,"title":{},"body":{"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{},"overview.html":{}}}],["injecting",{"_index":769,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["injector",{"_index":447,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["innerhtml",{"_index":488,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["input",{"_index":325,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutOptions.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"additional-documentation/introduction.html":{}}}],["input/button/button.component",{"_index":840,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["input/hidden/hidden.component",{"_index":841,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["input[name",{"_index":519,"title":{},"body":{"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{}}}],["input[type='hidden",{"_index":238,"title":{},"body":{"components/HiddenComponent.html":{}}}],["inputs",{"_index":37,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"additional-documentation/introduction.html":{}}}],["inserted",{"_index":1089,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["inside",{"_index":580,"title":{},"body":{"classes/LayoutNode.html":{}}}],["inspect",{"_index":1137,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["install",{"_index":913,"title":{},"body":{"index.html":{}}}],["installing",{"_index":911,"title":{},"body":{"index.html":{}}}],["instances",{"_index":1072,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["integer",{"_index":1041,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["interface",{"_index":111,"title":{"interfaces/Data.html":{},"interfaces/LayoutItem.html":{},"interfaces/LayoutOptions.html":{}},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"interfaces/LayoutItem.html":{},"interfaces/LayoutOptions.html":{}}}],["interfaces",{"_index":112,"title":{},"body":{"interfaces/Data.html":{},"interfaces/LayoutItem.html":{},"interfaces/LayoutOptions.html":{},"overview.html":{}}}],["internal",{"_index":295,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{}}}],["internally",{"_index":1132,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["introduction",{"_index":1022,"title":{"additional-documentation/introduction.html":{}},"body":{}}],["isplainobject",{"_index":330,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["isplainobject(this.schema",{"_index":413,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["isstring",{"_index":585,"title":{},"body":{"classes/LayoutNode.html":{}}}],["isstring(layoutitem",{"_index":603,"title":{},"body":{"classes/LayoutNode.html":{}}}],["isstring(this.layoutitem.content",{"_index":621,"title":{},"body":{"classes/LayoutNode.html":{}}}],["it's",{"_index":893,"title":{},"body":{"index.html":{}}}],["item",{"_index":518,"title":{},"body":{"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["item.data",{"_index":332,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{}}}],["item.data.ts",{"_index":513,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["item.data.ts:16",{"_index":516,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["items",{"_index":632,"title":{},"body":{"classes/LayoutNode.html":{}}}],["itself",{"_index":182,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["james",{"_index":945,"title":{},"body":{"license.html":{}}}],["javascript",{"_index":259,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{}}}],["joshfire's",{"_index":374,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["jquery",{"_index":178,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"components/JsonSchemaFormComponent.html":{}}}],["jquery's",{"_index":1134,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["js",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["jsf",{"_index":22,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"additional-documentation/introduction.html":{}}}],["json",{"_index":11,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["json/path",{"_index":608,"title":{},"body":{"classes/LayoutNode.html":{}}}],["jsonpointers",{"_index":741,"title":{},"body":{"injectables/SchemaService.html":{}}}],["jsonschema",{"_index":369,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["jsonschema7",{"_index":312,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"injectables/SchemaService.html":{},"additional-documentation/introduction.html":{}}}],["jsonschema7definition",{"_index":677,"title":{},"body":{"injectables/LayoutService.html":{},"injectables/SchemaService.html":{}}}],["jsonschemaformcomponent",{"_index":102,"title":{"components/JsonSchemaFormComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"components/SelectWidgetComponent.html":{},"overview.html":{}}}],["jsonschemaformmodule",{"_index":416,"title":{"modules/JsonSchemaFormModule.html":{}},"body":{"modules/JsonSchemaFormModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["jsonschemaformservice",{"_index":43,"title":{"injectables/JsonSchemaFormService.html":{}},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"overview.html":{}}}],["jsonschemaformservice.createcomponent(template",{"_index":501,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["jsonschemaformservice.createmodule(component",{"_index":502,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["jsonschemaformservice.getdocumentfragment(componentref",{"_index":510,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["key",{"_index":207,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["key's",{"_index":214,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["key(object.path",{"_index":607,"title":{},"body":{"classes/LayoutNode.html":{}}}],["key/value",{"_index":209,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["kind",{"_index":981,"title":{},"body":{"license.html":{}}}],["laid",{"_index":1056,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["last",{"_index":1035,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["lastly",{"_index":1115,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["lastname",{"_index":1034,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["layout",{"_index":58,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"dependencies.html":{},"additional-documentation/introduction.html":{}}}],["layout.component.ts",{"_index":1067,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["layout.json",{"_index":1066,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["layout.onclick",{"_index":1108,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["layout.reduce((currentlayout",{"_index":688,"title":{},"body":{"injectables/LayoutService.html":{}}}],["layout.service",{"_index":333,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["layout.type",{"_index":597,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layoutcomponent",{"_index":1068,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["layoutdefinition",{"_index":550,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layoutindex",{"_index":39,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["layoutitem",{"_index":331,"title":{"interfaces/LayoutItem.html":{}},"body":{"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{}}}],["layoutitem.type",{"_index":599,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layoutnode",{"_index":40,"title":{"classes/LayoutNode.html":{}},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{}}}],["layoutnode(item",{"_index":605,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layoutnode.create(layoutitem",{"_index":692,"title":{},"body":{"injectables/LayoutService.html":{}}}],["layoutnode.getpointer(this.layoutitem.key",{"_index":617,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layoutoptions",{"_index":583,"title":{"interfaces/LayoutOptions.html":{}},"body":{"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{}}}],["layouts",{"_index":665,"title":{},"body":{"injectables/LayoutService.html":{}}}],["layoutservice",{"_index":279,"title":{"injectables/LayoutService.html":{}},"body":{"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/LayoutService.html":{},"overview.html":{}}}],["left",{"_index":892,"title":{},"body":{"index.html":{}}}],["legend",{"_index":94,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"components/SelectWidgetComponent.html":{},"modules/WidgetLibraryModule.html":{},"overview.html":{}}}],["liability",{"_index":996,"title":{},"body":{"license.html":{}}}],["liable",{"_index":993,"title":{},"body":{"license.html":{}}}],["library",{"_index":250,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["library.module",{"_index":437,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["library.module.ts",{"_index":831,"title":{},"body":{"modules/WidgetLibraryModule.html":{}}}],["library.service",{"_index":771,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["library.service.ts",{"_index":835,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["library.service.ts:28",{"_index":839,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["library/container/select",{"_index":750,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["library/index.ts",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["library/input/button/button.component.ts",{"_index":14,"title":{},"body":{"components/ButtonComponent.html":{}}}],["library/input/button/button.component.ts:14",{"_index":47,"title":{},"body":{"components/ButtonComponent.html":{}}}],["library/input/hidden/hidden.component.ts",{"_index":237,"title":{},"body":{"components/HiddenComponent.html":{}}}],["library/input/hidden/hidden.component.ts:16",{"_index":242,"title":{},"body":{"components/HiddenComponent.html":{}}}],["library/widget",{"_index":436,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{}}}],["library/widget.ts",{"_index":792,"title":{},"body":{"classes/Widget.html":{}}}],["library/widget.ts:11",{"_index":795,"title":{},"body":{"classes/Widget.html":{}}}],["library/widget.ts:13",{"_index":796,"title":{},"body":{"classes/Widget.html":{}}}],["library/widget.ts:15",{"_index":797,"title":{},"body":{"classes/Widget.html":{}}}],["library/widget.ts:17",{"_index":798,"title":{},"body":{"classes/Widget.html":{}}}],["library/widget.ts:19",{"_index":799,"title":{},"body":{"classes/Widget.html":{}}}],["library/widget.ts:22",{"_index":803,"title":{},"body":{"classes/Widget.html":{}}}],["library/widget.ts:24",{"_index":802,"title":{},"body":{"classes/Widget.html":{}}}],["library/widget.ts:26",{"_index":801,"title":{},"body":{"classes/Widget.html":{}}}],["library/widget.ts:29",{"_index":794,"title":{},"body":{"classes/Widget.html":{}}}],["library/widget.ts:64",{"_index":800,"title":{},"body":{"classes/Widget.html":{}}}],["license",{"_index":934,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":962,"title":{},"body":{"license.html":{}}}],["limited",{"_index":984,"title":{},"body":{"license.html":{}}}],["link",{"_index":387,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutOptions.html":{}}}],["list",{"_index":672,"title":{},"body":{"injectables/LayoutService.html":{},"miscellaneous/variables.html":{}}}],["listener",{"_index":147,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["listners",{"_index":391,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["literal",{"_index":453,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"interfaces/LayoutOptions.html":{}}}],["live",{"_index":904,"title":{},"body":{"index.html":{}}}],["location",{"_index":1061,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["lodash",{"_index":258,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"dependencies.html":{}}}],["lodash]{@link",{"_index":379,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["logic",{"_index":532,"title":{},"body":{"classes/LayoutNode.html":{}}}],["login.component.html",{"_index":1075,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["look",{"_index":808,"title":{},"body":{"classes/Widget.html":{}}}],["looking",{"_index":563,"title":{},"body":{"classes/LayoutNode.html":{}}}],["lookup",{"_index":725,"title":{},"body":{"injectables/SchemaService.html":{}}}],["lot",{"_index":900,"title":{},"body":{"index.html":{}}}],["main",{"_index":915,"title":{},"body":{"index.html":{}}}],["make",{"_index":352,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["manager",{"_index":135,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["map",{"_index":176,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{}}}],["map()).get(element",{"_index":226,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["mapkeys",{"_index":586,"title":{},"body":{"classes/LayoutNode.html":{}}}],["mapkeys(pick(this.schema",{"_index":625,"title":{},"body":{"classes/LayoutNode.html":{}}}],["mappeddata",{"_index":223,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["mappeddata.delete(key",{"_index":233,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["mappeddata.set(key",{"_index":227,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["mappeddata.size",{"_index":234,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["mappedlayout",{"_index":687,"title":{},"body":{"injectables/LayoutService.html":{}}}],["mappedlayout.splice(starindex",{"_index":703,"title":{},"body":{"injectables/LayoutService.html":{}}}],["mappedpointers",{"_index":684,"title":{},"body":{"injectables/LayoutService.html":{}}}],["mappedpointers.add(layoutnode.datapointer",{"_index":694,"title":{},"body":{"injectables/LayoutService.html":{}}}],["mapping",{"_index":836,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["matched",{"_index":1153,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["matching",{"_index":109,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["max",{"_index":473,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["means",{"_index":128,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["memoize",{"_index":590,"title":{},"body":{"classes/LayoutNode.html":{}}}],["merchantability",{"_index":986,"title":{},"body":{"license.html":{}}}],["merge",{"_index":965,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":20,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/introduction.html":{}}}],["method",{"_index":287,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{}}}],["methods",{"_index":35,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{}}}],["minimum",{"_index":1042,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["miscellaneous",{"_index":1012,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":935,"title":{},"body":{"license.html":{}}}],["model",{"_index":254,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["modify",{"_index":964,"title":{},"body":{"license.html":{}}}],["module",{"_index":247,"title":{"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{}},"body":{"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"modules/WidgetLibraryModule.html":{},"index.html":{},"overview.html":{}}}],["module.componentfactories.find((f",{"_index":505,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["moduleref",{"_index":448,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["modules",{"_index":417,"title":{"modules.html":{}},"body":{"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithcomponentfactories",{"_index":471,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["more",{"_index":1074,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["mostly",{"_index":357,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["mozilla's",{"_index":367,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["multi",{"_index":440,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["multipart/form",{"_index":303,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["n",{"_index":1079,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["name",{"_index":50,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{}}}],["native",{"_index":1070,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["necessary",{"_index":1157,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["need",{"_index":187,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"additional-documentation/introduction.html":{}}}],["needed",{"_index":539,"title":{},"body":{"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["never",{"_index":1155,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["new",{"_index":222,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"additional-documentation/introduction.html":{}}}],["newcomponent",{"_index":772,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["newlayout",{"_index":689,"title":{},"body":{"injectables/LayoutService.html":{}}}],["newlayout.concat(layoutnode",{"_index":695,"title":{},"body":{"injectables/LayoutService.html":{}}}],["ng2",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["ngafterviewinit",{"_index":821,"title":{},"body":{"classes/Widget.html":{}}}],["ngdestroy",{"_index":393,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["ngmodule",{"_index":434,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"modules/WidgetLibraryModule.html":{},"index.html":{}}}],["ngmoduleref",{"_index":449,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["ngonchanges",{"_index":774,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["ngonchanges(changes",{"_index":397,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/Widget.html":{}}}],["ngondestroy",{"_index":400,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["ngoninit",{"_index":395,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["ngx",{"_index":245,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"index.html":{},"license.html":{},"additional-documentation/introduction.html":{}}}],["ngxjsonschemaform",{"_index":884,"title":{},"body":{"index.html":{}}}],["ngzone",{"_index":116,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["node",{"_index":60,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["node.ts",{"_index":530,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:22",{"_index":554,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:40",{"_index":560,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:58",{"_index":568,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:62",{"_index":572,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:66",{"_index":574,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:70",{"_index":577,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:75",{"_index":579,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:79",{"_index":582,"title":{},"body":{"classes/LayoutNode.html":{}}}],["nodes",{"_index":673,"title":{},"body":{"injectables/LayoutService.html":{}}}],["non",{"_index":192,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["noninfringement",{"_index":990,"title":{},"body":{"license.html":{}}}],["normalizes",{"_index":606,"title":{},"body":{"classes/LayoutNode.html":{}}}],["note",{"_index":521,"title":{},"body":{"interfaces/LayoutItem.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["notice",{"_index":975,"title":{},"body":{"license.html":{}}}],["npm",{"_index":912,"title":{},"body":{"index.html":{}}}],["null",{"_index":291,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["number",{"_index":649,"title":{},"body":{"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{}}}],["numerous",{"_index":1076,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["object",{"_index":355,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutItem.html":{},"injectables/SchemaService.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["objects",{"_index":185,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["observable",{"_index":389,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["obtaining",{"_index":954,"title":{},"body":{"license.html":{}}}],["obviously",{"_index":257,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["older",{"_index":1064,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["omit",{"_index":587,"title":{},"body":{"classes/LayoutNode.html":{}}}],["omit(this.layoutitem",{"_index":626,"title":{},"body":{"classes/LayoutNode.html":{}}}],["once",{"_index":1045,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["onchanges",{"_index":273,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["onclick",{"_index":1113,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["onclick(event",{"_index":1116,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["ondestroy",{"_index":274,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["oninit",{"_index":275,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["onto",{"_index":755,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["open",{"_index":1110,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["opendialog",{"_index":1141,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["opendialog(event",{"_index":1118,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["option",{"_index":1087,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["optional",{"_index":52,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{}}}],["options",{"_index":34,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"additional-documentation/introduction.html":{}}}],["options.data",{"_index":592,"title":{},"body":{"classes/LayoutNode.html":{}}}],["options.data.ts",{"_index":634,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["options.data.ts:32",{"_index":642,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["options.title",{"_index":1093,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["order",{"_index":1025,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["original",{"_index":570,"title":{},"body":{"classes/LayoutNode.html":{}}}],["others",{"_index":515,"title":{},"body":{"interfaces/LayoutItem.html":{},"interfaces/LayoutOptions.html":{}}}],["otherwise",{"_index":1000,"title":{},"body":{"license.html":{}}}],["out",{"_index":347,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"index.html":{},"license.html":{},"overview.html":{},"additional-documentation/introduction.html":{}}}],["over",{"_index":890,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1007,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":849,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":1021,"title":{"additional-documentation/introduction.html":{}},"body":{}}],["pairing",{"_index":210,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["param",{"_index":500,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{}}}],["parameters",{"_index":48,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{}}}],["parentschema",{"_index":736,"title":{},"body":{"injectables/SchemaService.html":{}}}],["parentschema.type",{"_index":737,"title":{},"body":{"injectables/SchemaService.html":{}}}],["parity",{"_index":902,"title":{},"body":{"index.html":{}}}],["parse",{"_index":533,"title":{},"body":{"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["parsing",{"_index":707,"title":{},"body":{"injectables/SchemaService.html":{}}}],["part",{"_index":943,"title":{},"body":{"license.html":{},"additional-documentation/introduction.html":{}}}],["particular",{"_index":988,"title":{},"body":{"license.html":{}}}],["pass",{"_index":545,"title":{},"body":{"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["passed",{"_index":478,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/introduction.html":{}}}],["path",{"_index":517,"title":{},"body":{"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{}}}],["per",{"_index":475,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["permission",{"_index":948,"title":{},"body":{"license.html":{}}}],["permit",{"_index":971,"title":{},"body":{"license.html":{}}}],["person",{"_index":953,"title":{},"body":{"license.html":{},"additional-documentation/introduction.html":{}}}],["person's",{"_index":1033,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["persons",{"_index":972,"title":{},"body":{"license.html":{}}}],["pertains",{"_index":593,"title":{},"body":{"classes/LayoutNode.html":{}}}],["pick",{"_index":588,"title":{},"body":{"classes/LayoutNode.html":{}}}],["pick(this.schema",{"_index":623,"title":{},"body":{"classes/LayoutNode.html":{}}}],["piggybacking",{"_index":121,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"miscellaneous/typealiases.html":{}}}],["placeholder",{"_index":768,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["play",{"_index":906,"title":{},"body":{"index.html":{}}}],["playground",{"_index":267,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["plugin",{"_index":124,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["plugin.service",{"_index":438,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["plugin.service.ts",{"_index":114,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"miscellaneous/typealiases.html":{}}}],["plugin.service.ts:22",{"_index":170,"title":{},"body":{"injectables/DataEventPluginService.html":{}}}],["plugin.service.ts:27",{"_index":172,"title":{},"body":{"injectables/DataEventPluginService.html":{}}}],["plugin.service.ts:32",{"_index":171,"title":{},"body":{"injectables/DataEventPluginService.html":{}}}],["pointer",{"_index":610,"title":{},"body":{"classes/LayoutNode.html":{},"injectables/SchemaService.html":{}}}],["pointer.charat(0",{"_index":612,"title":{},"body":{"classes/LayoutNode.html":{}}}],["pointer.replace(/\\./g",{"_index":613,"title":{},"body":{"classes/LayoutNode.html":{}}}],["pointers",{"_index":722,"title":{},"body":{"injectables/SchemaService.html":{}}}],["pointers.set(pointer.replace(/\\/properties/g",{"_index":738,"title":{},"body":{"injectables/SchemaService.html":{}}}],["populate",{"_index":817,"title":{},"body":{"classes/Widget.html":{}}}],["popup",{"_index":1142,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["portions",{"_index":937,"title":{},"body":{"license.html":{}}}],["post",{"_index":309,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["predecesor",{"_index":891,"title":{},"body":{"index.html":{}}}],["present",{"_index":129,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["presented",{"_index":561,"title":{},"body":{"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["primitive",{"_index":184,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["private",{"_index":220,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{}}}],["project",{"_index":887,"title":{},"body":{"index.html":{},"license.html":{}}}],["projects/.../data",{"_index":1015,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../index.ts",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/demo/src/assets/examples",{"_index":932,"title":{},"body":{"index.html":{}}}],["projects/ngx",{"_index":10,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["propagate",{"_index":813,"title":{},"body":{"classes/Widget.html":{}}}],["properties",{"_index":29,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"additional-documentation/introduction.html":{}}}],["property",{"_index":523,"title":{},"body":{"interfaces/LayoutItem.html":{},"additional-documentation/introduction.html":{}}}],["propley",{"_index":1152,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["protected",{"_index":812,"title":{},"body":{"classes/Widget.html":{}}}],["provide",{"_index":342,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{}}}],["provided",{"_index":979,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":132,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"injectables/WidgetLibraryService.html":{}}}],["providers",{"_index":278,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"overview.html":{}}}],["provides",{"_index":179,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{}}}],["proxy",{"_index":537,"title":{},"body":{"classes/LayoutNode.html":{}}}],["public",{"_index":547,"title":{},"body":{"classes/LayoutNode.html":{},"injectables/LayoutService.html":{}}}],["publish",{"_index":966,"title":{},"body":{"license.html":{}}}],["pulled",{"_index":91,"title":{},"body":{"components/ButtonComponent.html":{}}}],["purpose",{"_index":989,"title":{},"body":{"license.html":{}}}],["put",{"_index":524,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["question1",{"_index":1062,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["question2",{"_index":1065,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["react",{"_index":368,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["reactiveformsmodule",{"_index":834,"title":{},"body":{"modules/WidgetLibraryModule.html":{}}}],["read",{"_index":767,"title":{},"body":{"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["readonly",{"_index":137,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{}}}],["ready",{"_index":897,"title":{},"body":{"index.html":{}}}],["real",{"_index":343,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["recognized",{"_index":699,"title":{},"body":{"injectables/LayoutService.html":{}}}],["recursivereference",{"_index":633,"title":{},"body":{"classes/LayoutNode.html":{}}}],["redering",{"_index":1100,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["ref",{"_index":628,"title":{},"body":{"classes/LayoutNode.html":{}}}],["reference",{"_index":203,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"classes/LayoutNode.html":{},"injectables/SchemaService.html":{},"classes/Widget.html":{}}}],["referenced",{"_index":211,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["referencing",{"_index":195,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["related",{"_index":565,"title":{},"body":{"classes/LayoutNode.html":{},"injectables/SchemaService.html":{}}}],["relevant",{"_index":721,"title":{},"body":{"injectables/SchemaService.html":{}}}],["remove",{"_index":202,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["removed",{"_index":198,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["render",{"_index":459,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"additional-documentation/introduction.html":{}}}],["rendered",{"_index":308,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["rendering",{"_index":460,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["replace",{"_index":809,"title":{},"body":{"classes/Widget.html":{}}}],["represent",{"_index":527,"title":{},"body":{"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{}}}],["requirement",{"_index":1023,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["reset",{"_index":429,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"overview.html":{},"additional-documentation/introduction.html":{}}}],["respond",{"_index":1101,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["restriction",{"_index":960,"title":{},"body":{"license.html":{}}}],["result",{"_index":108,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["results",{"_index":110,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["return",{"_index":126,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"injectables/WidgetLibraryService.html":{}}}],["returned",{"_index":354,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["returns",{"_index":68,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["rewritten",{"_index":895,"title":{},"body":{"index.html":{}}}],["rights",{"_index":963,"title":{},"body":{"license.html":{}}}],["root",{"_index":133,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/WidgetLibraryService.html":{}}}],["run",{"_index":1106,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["running",{"_index":1143,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["runtime",{"_index":481,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["runtimecomponent",{"_index":483,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["runtimecomponentmodule",{"_index":486,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["rxjs",{"_index":328,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"dependencies.html":{}}}],["sample",{"_index":482,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["samples",{"_index":930,"title":{},"body":{"index.html":{}}}],["savethen",{"_index":914,"title":{},"body":{"index.html":{}}}],["scharett",{"_index":946,"title":{},"body":{"license.html":{}}}],["schema",{"_index":12,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["schema(value",{"_index":730,"title":{},"body":{"injectables/SchemaService.html":{}}}],["schema.json",{"_index":1027,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["schema.org/draft",{"_index":1030,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["schema.service",{"_index":334,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{}}}],["schema.type",{"_index":598,"title":{},"body":{"classes/LayoutNode.html":{},"injectables/SchemaService.html":{}}}],["schemapointers",{"_index":682,"title":{},"body":{"injectables/LayoutService.html":{}}}],["schemas",{"_index":927,"title":{},"body":{"index.html":{}}}],["schemaservice",{"_index":280,"title":{"injectables/SchemaService.html":{}},"body":{"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"overview.html":{}}}],["schemaservice.datapointermap.get(layoutnode.getpointer(item.key",{"_index":604,"title":{},"body":{"classes/LayoutNode.html":{}}}],["schnell",{"_index":940,"title":{},"body":{"license.html":{}}}],["second",{"_index":1107,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["see",{"_index":296,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["seems",{"_index":495,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["select",{"_index":105,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["selector",{"_index":21,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{}}}],["selectwidgetcomponent",{"_index":104,"title":{"components/SelectWidgetComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"modules/WidgetLibraryModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["sell",{"_index":969,"title":{},"body":{"license.html":{}}}],["service",{"_index":175,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"classes/LayoutNode.html":{}}}],["services",{"_index":663,"title":{},"body":{"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{}}}],["services.github.io/react",{"_index":373,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["services/react",{"_index":371,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["set",{"_index":205,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"classes/Widget.html":{},"additional-documentation/introduction.html":{}}}],["set(element",{"_index":217,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["setlayout",{"_index":666,"title":{},"body":{"injectables/LayoutService.html":{}}}],["setlayout(value",{"_index":668,"title":{},"body":{"injectables/LayoutService.html":{}}}],["sets",{"_index":293,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{}}}],["setschema(value",{"_index":715,"title":{},"body":{"injectables/SchemaService.html":{}}}],["setter",{"_index":726,"title":{},"body":{"injectables/SchemaService.html":{}}}],["setting",{"_index":653,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["shall",{"_index":976,"title":{},"body":{"license.html":{}}}],["shown",{"_index":1069,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["side",{"_index":249,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["silly",{"_index":496,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["similar",{"_index":177,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"components/JsonSchemaFormComponent.html":{},"index.html":{}}}],["similarly",{"_index":1133,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["simple",{"_index":1090,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["simplechanges",{"_index":326,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/Widget.html":{}}}],["simply",{"_index":922,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["sm",{"_index":1080,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["software",{"_index":955,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{}}}],["special",{"_index":1052,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["specific",{"_index":542,"title":{},"body":{"classes/LayoutNode.html":{}}}],["specifically",{"_index":1055,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["specified",{"_index":528,"title":{},"body":{"interfaces/LayoutItem.html":{},"additional-documentation/introduction.html":{}}}],["specify",{"_index":526,"title":{},"body":{"interfaces/LayoutItem.html":{},"additional-documentation/introduction.html":{}}}],["specifying",{"_index":1098,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["src",{"_index":659,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["standard",{"_index":1071,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["starindex",{"_index":685,"title":{},"body":{"injectables/LayoutService.html":{}}}],["started",{"_index":883,"title":{"index.html":{},"license.html":{}},"body":{}}],["static",{"_index":479,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{}}}],["still",{"_index":899,"title":{},"body":{"index.html":{}}}],["storage",{"_index":221,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["storage.service",{"_index":85,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["storage.service.ts",{"_index":174,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["storage.service.ts:21",{"_index":218,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["storage.service.ts:29",{"_index":213,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["storage.service.ts:36",{"_index":216,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["storage.service.ts:41",{"_index":208,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["store",{"_index":181,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["string",{"_index":75,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{}}}],["structured",{"_index":253,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["style",{"_index":640,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["styleurls",{"_index":24,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["subject",{"_index":327,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"license.html":{}}}],["sublicense",{"_index":968,"title":{},"body":{"license.html":{}}}],["submit",{"_index":92,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{}}}],["submitform",{"_index":282,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["submits",{"_index":321,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["submittal",{"_index":1156,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["submitted",{"_index":351,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["substantial",{"_index":978,"title":{},"body":{"license.html":{}}}],["such",{"_index":1103,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["super(jsf",{"_index":89,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["supply",{"_index":1024,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["support",{"_index":1004,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":146,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"additional-documentation/introduction.html":{}}}],["supports",{"_index":168,"title":{},"body":{"injectables/DataEventPluginService.html":{},"additional-documentation/introduction.html":{}}}],["supports(eventname",{"_index":140,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["sure",{"_index":353,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["svg",{"_index":1005,"title":{},"body":{"modules.html":{}}}],["system",{"_index":541,"title":{},"body":{"classes/LayoutNode.html":{}}}],["t",{"_index":123,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["tabindex",{"_index":641,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["tag",{"_index":1084,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["take",{"_index":889,"title":{},"body":{"index.html":{}}}],["target",{"_index":288,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{}}}],["tells",{"_index":1054,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["tempalte",{"_index":456,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["template.content",{"_index":493,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["template.innerhtml",{"_index":491,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["templateurl",{"_index":26,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/introduction.html":{}}}],["test",{"_index":931,"title":{},"body":{"index.html":{}}}],["text",{"_index":1078,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["text/plain",{"_index":304,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["therefore",{"_index":1147,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["therfore",{"_index":1158,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["this._layout",{"_index":679,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this._schema",{"_index":731,"title":{},"body":{"injectables/SchemaService.html":{}}}],["this.ajv.compile(this.schema",{"_index":749,"title":{},"body":{"injectables/SchemaService.html":{}}}],["this.ajv.removeschema(this.schema",{"_index":747,"title":{},"body":{"injectables/SchemaService.html":{}}}],["this.buildlayout(difference(availablepointers",{"_index":704,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.buildlayout(value",{"_index":680,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.compiler",{"_index":503,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["this.compileschema",{"_index":732,"title":{},"body":{"injectables/SchemaService.html":{}}}],["this.componentfactory.resolvecomponentfactory",{"_index":785,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.control",{"_index":823,"title":{},"body":{"classes/Widget.html":{}}}],["this.createcomponent",{"_index":776,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.datapointer.split('/').pop",{"_index":616,"title":{},"body":{"classes/LayoutNode.html":{}}}],["this.destroyed$.complete",{"_index":402,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.destroyed$.next",{"_index":401,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.elementdatastorage.get(event.target",{"_index":159,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["this.elementdatastorage.has(event.target",{"_index":158,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["this.elementdatastorage.set(this.control.nativeelement",{"_index":824,"title":{},"body":{"classes/Widget.html":{}}}],["this.forminitialized",{"_index":399,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.generatengcontent",{"_index":787,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.haswidget(type",{"_index":845,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["this.initializeform",{"_index":405,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.initializelayout",{"_index":408,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.initializeschema",{"_index":407,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.jsf.compiletemplate(this.layoutnode.content",{"_index":790,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.jsf.formoptions.disableinvalidsubmit",{"_index":93,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.jsf.initializecontrol(this",{"_index":818,"title":{},"body":{"classes/Widget.html":{}}}],["this.jsf.updatevalue(this",{"_index":826,"title":{},"body":{"classes/Widget.html":{}}}],["this.layoutitem",{"_index":601,"title":{},"body":{"classes/LayoutNode.html":{}}}],["this.layoutitem.content",{"_index":622,"title":{},"body":{"classes/LayoutNode.html":{}}}],["this.layoutitem.name",{"_index":615,"title":{},"body":{"classes/LayoutNode.html":{}}}],["this.layoutitem.type",{"_index":619,"title":{},"body":{"classes/LayoutNode.html":{}}}],["this.layoutnode",{"_index":782,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.layoutnode.content",{"_index":789,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.layoutnode.layoutdefinition",{"_index":825,"title":{},"body":{"classes/Widget.html":{}}}],["this.layoutnode.options",{"_index":791,"title":{},"body":{"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["this.layoutnode.type",{"_index":783,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.layoutservice.setlayout(clonedeep(this.layout",{"_index":411,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.manager.getzone",{"_index":154,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["this.moduleref",{"_index":508,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["this.newcomponent",{"_index":777,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.newcomponent.instance[input",{"_index":778,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.options",{"_index":819,"title":{},"body":{"classes/Widget.html":{}}}],["this.schema",{"_index":602,"title":{},"body":{"classes/LayoutNode.html":{}}}],["this.schemaservice",{"_index":693,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.schemaservice.datapointermap",{"_index":683,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.schemaservice.schema",{"_index":414,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.storage.delete(element",{"_index":236,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["this.storage.get(element",{"_index":224,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["this.storage.get(element).get(key",{"_index":229,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["this.storage.get(element).has(key",{"_index":231,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["this.storage.has(element",{"_index":228,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["this.storage.set(element",{"_index":225,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["this.updatecomponent",{"_index":773,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.updatedata",{"_index":815,"title":{},"body":{"classes/Widget.html":{}}}],["this.updateform",{"_index":396,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.validator",{"_index":748,"title":{},"body":{"injectables/SchemaService.html":{}}}],["this.validator(data",{"_index":745,"title":{},"body":{"injectables/SchemaService.html":{}}}],["this.widgetcontainer.createcomponent",{"_index":784,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.widgetlibraryservice.getwidget(this.layoutnode.type",{"_index":786,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.widgets[this.defaultwidget",{"_index":847,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["this.widgets[type",{"_index":846,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["this.x",{"_index":499,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["this[input",{"_index":779,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["throw",{"_index":595,"title":{},"body":{"classes/LayoutNode.html":{}}}],["throws",{"_index":594,"title":{},"body":{"classes/LayoutNode.html":{}}}],["thus",{"_index":190,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["time",{"_index":344,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{}}}],["title",{"_index":624,"title":{},"body":{"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["todo",{"_index":90,"title":{},"body":{"components/ButtonComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{}}}],["tort",{"_index":999,"title":{},"body":{"license.html":{}}}],["trackbyfn",{"_index":283,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["trackbyfn(index",{"_index":322,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["translates",{"_index":1050,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["traverse",{"_index":264,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{},"dependencies.html":{}}}],["traverse(this.schema",{"_index":733,"title":{},"body":{"injectables/SchemaService.html":{}}}],["traverse]{@link",{"_index":383,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["trigger",{"_index":1129,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["triggered",{"_index":1135,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["true",{"_index":409,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/SchemaService.html":{},"additional-documentation/introduction.html":{}}}],["try",{"_index":691,"title":{},"body":{"injectables/LayoutService.html":{}}}],["tslib",{"_index":878,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":472,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["type",{"_index":51,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["typealiases",{"_index":1013,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":844,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["types",{"_index":193,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["types/ace",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["types/json",{"_index":863,"title":{},"body":{"dependencies.html":{}}}],["types/lodash",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":675,"title":{},"body":{"injectables/LayoutService.html":{}}}],["undeclared",{"_index":522,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["undefined",{"_index":230,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"components/SelectWidgetComponent.html":{}}}],["underlying",{"_index":807,"title":{},"body":{"classes/Widget.html":{}}}],["unique",{"_index":557,"title":{},"body":{"classes/LayoutNode.html":{}}}],["uniqueid",{"_index":589,"title":{},"body":{"classes/LayoutNode.html":{}}}],["uniqueid('control",{"_index":556,"title":{},"body":{"classes/LayoutNode.html":{}}}],["unknownformats",{"_index":742,"title":{},"body":{"injectables/SchemaService.html":{}}}],["unsubscribe",{"_index":390,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["up",{"_index":564,"title":{},"body":{"classes/LayoutNode.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["update",{"_index":65,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["updatecomponent",{"_index":775,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["updatedata",{"_index":822,"title":{},"body":{"classes/Widget.html":{}}}],["updateform",{"_index":404,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["updatevalue",{"_index":36,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["updatevalue(ctx",{"_index":467,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["updatevalue(event",{"_index":62,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["upgrade",{"_index":727,"title":{},"body":{"injectables/SchemaService.html":{}}}],["upon",{"_index":392,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{}}}],["urlencoded",{"_index":302,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["us/docs/web/html/element/form#attributes",{"_index":298,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["us/docs/web/html/element/input#dirname",{"_index":644,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/element/input#disabled",{"_index":645,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/element/input#readonly",{"_index":647,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/element/input/image#alt",{"_index":654,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/element/input/image#height",{"_index":656,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/element/input/image#src",{"_index":658,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/element/input/image#width",{"_index":660,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/global_attributes/accesskey",{"_index":643,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/global_attributes/class",{"_index":646,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/global_attributes/style",{"_index":648,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/global_attributes/tabindex",{"_index":650,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/global_attributes/title",{"_index":651,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["use",{"_index":189,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["useclass",{"_index":441,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["used",{"_index":125,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"injectables/SchemaService.html":{},"additional-documentation/introduction.html":{}}}],["useful",{"_index":1058,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["user",{"_index":336,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{}}}],["using",{"_index":337,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/Widget.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["usually",{"_index":1144,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["utility",{"_index":260,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["valdiated",{"_index":712,"title":{},"body":{"injectables/SchemaService.html":{}}}],["valid",{"_index":356,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["validate",{"_index":314,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{}}}],["validate(data",{"_index":709,"title":{},"body":{"injectables/SchemaService.html":{}}}],["validates",{"_index":335,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{}}}],["validating",{"_index":348,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{}}}],["validation",{"_index":717,"title":{},"body":{"injectables/SchemaService.html":{}}}],["validator",{"_index":263,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{}}}],["validators",{"_index":339,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["value",{"_index":66,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":97,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["variable",{"_index":546,"title":{},"body":{"classes/LayoutNode.html":{}}}],["variables",{"_index":1016,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1092,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["version",{"_index":728,"title":{},"body":{"injectables/SchemaService.html":{}}}],["via",{"_index":196,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"additional-documentation/introduction.html":{}}}],["viewchild",{"_index":770,"title":{},"body":{"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["viewchild('control",{"_index":810,"title":{},"body":{"classes/Widget.html":{}}}],["viewchild('widgetcontainer",{"_index":766,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["viewcontainerref",{"_index":765,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["void",{"_index":69,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"additional-documentation/introduction.html":{}}}],["warranties",{"_index":985,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":980,"title":{},"body":{"license.html":{}}}],["weakmap",{"_index":197,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["whether",{"_index":997,"title":{},"body":{"license.html":{}}}],["widget",{"_index":19,"title":{"classes/Widget.html":{}},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["widget.component.css",{"_index":757,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["widget.component.html",{"_index":758,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["widget.component.ts",{"_index":752,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["widget.component.ts:25",{"_index":763,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["widget/select",{"_index":751,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["widget:11",{"_index":72,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["widget:13",{"_index":76,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["widget:15",{"_index":77,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["widget:17",{"_index":79,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["widget:19",{"_index":81,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["widget:22",{"_index":59,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["widget:24",{"_index":57,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["widget:26",{"_index":55,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["widget:64",{"_index":64,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["widgetcontainer",{"_index":759,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["widgetlibrarymodule",{"_index":427,"title":{"modules/WidgetLibraryModule.html":{}},"body":{"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"modules.html":{},"overview.html":{}}}],["widgetlibraryservice",{"_index":762,"title":{"injectables/WidgetLibraryService.html":{}},"body":{"components/SelectWidgetComponent.html":{},"injectables/WidgetLibraryService.html":{}}}],["widgets",{"_index":465,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{}}}],["width",{"_index":661,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["window.open('http://www.google.com",{"_index":1114,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["wire",{"_index":1048,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["within",{"_index":1026,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["without",{"_index":959,"title":{},"body":{"license.html":{}}}],["wont",{"_index":1154,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["work",{"_index":543,"title":{},"body":{"classes/LayoutNode.html":{}}}],["works",{"_index":183,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["wrapper",{"_index":120,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"miscellaneous/typealiases.html":{}}}],["www",{"_index":301,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["x",{"_index":476,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["years",{"_index":1037,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["yes",{"_index":555,"title":{},"body":{"classes/LayoutNode.html":{}}}],["yourself",{"_index":1149,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["z]+/.test(eventname",{"_index":144,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["z]+\\.data\\.[a",{"_index":142,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["za",{"_index":143,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["zero",{"_index":1040,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["zone",{"_index":153,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["zone.js",{"_index":880,"title":{},"body":{"dependencies.html":{}}}],["zone.runguarded",{"_index":161,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["zone.runoutsideangular",{"_index":163,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["zoom",{"_index":428,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-json-schema-form/src/lib/widget-library/input/button/button.component.ts\n\n\n    \n        Description\n    \n    \n        Displays a  control \n\n    \n\n    \n        Extends\n    \n    \n                Widget\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                jsf-button\n            \n\n            \n                styleUrls\n                ./button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                controlDisabled\n                            \n                            \n                                controlName\n                            \n                            \n                                controlValue\n                            \n                            \n                                formControl\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataIndex\n                            \n                            \n                                layoutIndex\n                            \n                            \n                                layoutNode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(jsf: JsonSchemaFormService, elementDataStorage: ElementDataStorageService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/widget-library/input/button/button.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jsf\n                                                  \n                                                        \n                                                                        JsonSchemaFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementDataStorage\n                                                  \n                                                        \n                                                                        ElementDataStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataIndex\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:26\n\n                            \n                        \n                \n                    \n                        Index of the data in data array \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutIndex\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:24\n\n                            \n                        \n                \n                    \n                        Index of the layout in the Layout array \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutNode\n                    \n                \n                \n                    \n                        Type :         LayoutNode\n\n                    \n                \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:22\n\n                            \n                        \n                \n                    \n                        Layout Node describing the control \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(event: Event)\n                \n            \n\n\n            \n                \n                    Inherited from         Widget\n\n                \n            \n            \n                \n                        Defined in         Widget:64\n\n                \n            \n\n\n            \n                \n                    Update the value of the control\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nChange event\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:11\n\n                            \n                        \n\n                \n                    \n                        Flag to disable the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:13\n\n                            \n                        \n\n                \n                    \n                        Name for the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:15\n\n                            \n                        \n\n                \n                    \n                        Value of the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AbstractControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:17\n\n                            \n                        \n\n                \n                    \n                        Associated FormControl for widget \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:19\n\n                            \n                        \n\n                \n                    \n                        Options for the control \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { ElementDataStorageService } from '../../../element-data-storage.service';\nimport { JsonSchemaFormService } from '../../../json-schema-form.service';\n\nimport { Widget } from '../../widget';\n\n/** Displays a  control */\n@Component({\n    selector: 'jsf-button',\n    styleUrls: ['./button.component.scss'],\n    templateUrl: './button.component.html'\n})\nexport class ButtonComponent extends Widget {\n    constructor(jsf: JsonSchemaFormService, elementDataStorage: ElementDataStorageService) {\n        super(jsf, elementDataStorage);\n    }\n\n\n    // TODO- pulled from submit\n    // this.jsf.formOptions.disableInvalidSubmit\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n\n    \n                \n                    ./button.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'jsf-button'},{'name': 'HiddenComponent', 'selector': 'jsf-hidden'},{'name': 'JsonSchemaFormComponent', 'selector': 'jsf-json-schema-form'},{'name': 'SelectWidgetComponent', 'selector': 'jsf-select-widget'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Data.html":{"url":"interfaces/Data.html","title":"interface - Data","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Data\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/data-event-plugin.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { EventManager } from '@angular/platform-browser';\n\nimport { ElementDataStorageService } from './element-data-storage.service';\n\nexport interface Data {\n    data: any;\n}\n/** Event wrapper for piggybacking data on an event */\nexport type DataEvent = Data & T;\n\n/**\n * Plugin used to return data, associated with an element, in the event.  Data must first be\n * \"associated\" with an element by means of the ElementDataStorageService.  If no data is\n * present, then the event handler will not be fired.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class DataEventPluginService {\n    /** Event manager used to get the ngZone */\n    manager: EventManager;\n\n    constructor(private readonly elementDataStorage: ElementDataStorageService) {}\n\n    /** Determine if the plugin should be applied to an event */\n    supports(eventName: string): boolean {\n        return  /[a-z]+\\.data\\.[a-zA-Z]+/.test(eventName);\n    }\n\n    /** Adds a supported event listener to a dom node */\n    addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n        const zone: NgZone = this.manager.getZone();\n        const [type, , dataName] = eventName.split('.');\n        const eventHandler = (event: DataEvent): void => {\n            if (this.elementDataStorage.has(event.target as HTMLElement, dataName)) {\n                const data = this.elementDataStorage.get(event.target as HTMLElement, dataName);\n                event.data = data;\n\n                zone.runGuarded(() => {\n                    handler(event);\n                });\n            }\n        };\n\n        zone.runOutsideAngular(() => {\n            element.addEventListener(type, eventHandler, false);\n        });\n\n        return () => {\n            element.removeEventListener(type, eventHandler, false);\n        };\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataEventPluginService.html":{"url":"injectables/DataEventPluginService.html","title":"injectable - DataEventPluginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataEventPluginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/data-event-plugin.service.ts\n        \n\n            \n                Description\n            \n            \n                Plugin used to return data, associated with an element, in the event.  Data must first be\n\"associated\" with an element by means of the ElementDataStorageService.  If no data is\npresent, then the event handler will not be fired.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                manager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEventListener\n                            \n                            \n                                supports\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementDataStorage: ElementDataStorageService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/data-event-plugin.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementDataStorage\n                                                  \n                                                        \n                                                                        ElementDataStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addEventListener\n                        \n                        \n                    \n                \n            \n            \n                \naddEventListener(element: HTMLElement, eventName: string, handler: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/data-event-plugin.service.ts:32\n                \n            \n\n\n            \n                \n                    Adds a supported event listener to a dom node \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handler\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            supports\n                        \n                        \n                    \n                \n            \n            \n                \nsupports(eventName: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/data-event-plugin.service.ts:27\n                \n            \n\n\n            \n                \n                    Determine if the plugin should be applied to an event \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventManager\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/data-event-plugin.service.ts:22\n                            \n                        \n\n                \n                    \n                        Event manager used to get the ngZone \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { EventManager } from '@angular/platform-browser';\n\nimport { ElementDataStorageService } from './element-data-storage.service';\n\nexport interface Data {\n    data: any;\n}\n/** Event wrapper for piggybacking data on an event */\nexport type DataEvent = Data & T;\n\n/**\n * Plugin used to return data, associated with an element, in the event.  Data must first be\n * \"associated\" with an element by means of the ElementDataStorageService.  If no data is\n * present, then the event handler will not be fired.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class DataEventPluginService {\n    /** Event manager used to get the ngZone */\n    manager: EventManager;\n\n    constructor(private readonly elementDataStorage: ElementDataStorageService) {}\n\n    /** Determine if the plugin should be applied to an event */\n    supports(eventName: string): boolean {\n        return  /[a-z]+\\.data\\.[a-zA-Z]+/.test(eventName);\n    }\n\n    /** Adds a supported event listener to a dom node */\n    addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n        const zone: NgZone = this.manager.getZone();\n        const [type, , dataName] = eventName.split('.');\n        const eventHandler = (event: DataEvent): void => {\n            if (this.elementDataStorage.has(event.target as HTMLElement, dataName)) {\n                const data = this.elementDataStorage.get(event.target as HTMLElement, dataName);\n                event.data = data;\n\n                zone.runGuarded(() => {\n                    handler(event);\n                });\n            }\n        };\n\n        zone.runOutsideAngular(() => {\n            element.addEventListener(type, eventHandler, false);\n        });\n\n        return () => {\n            element.removeEventListener(type, eventHandler, false);\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ElementDataStorageService.html":{"url":"injectables/ElementDataStorageService.html","title":"injectable - ElementDataStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ElementDataStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/element-data-storage.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to map data to an DOM element similar to jQuery $.data\nWhile HTML provides its data-* attributes to store data on the node\nitself, this only works for primitive data.  Objects and arrays would need\nto be converted to json for then to use data-* and thus would not\nbe able to contain non-json types like Function.  This service allows\nfor referencing data to a HTML element via a WeakMap so that when the element\nis removed from the DOM, the garbage collector can automatically remove the\nreference in the Service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                has\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(element: HTMLElement, key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/element-data-storage.service.ts:41\n                \n            \n\n\n            \n                \n                    Remove a key/value pairing from map referenced by element \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(element: HTMLElement, key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/element-data-storage.service.ts:29\n                \n            \n\n\n            \n                \n                    Return a key's value for an element \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            has\n                        \n                        \n                    \n                \n            \n            \n                \nhas(element: HTMLElement, key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/element-data-storage.service.ts:36\n                \n            \n\n\n            \n                \n                    Determine if an element has a key/value pairing referenced \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset(element: HTMLElement, key: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/element-data-storage.service.ts:21\n                \n            \n\n\n            \n                \n                    Add key/value pairing to map referenced by element \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ElementDataStorageService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Service to map data to an DOM element similar to jQuery $.data\n * While HTML provides its data-* attributes to store data on the node\n * itself, this only works for primitive data.  Objects and arrays would need\n * to be converted to json for then to use data-* and thus would not\n * be able to contain non-json types like Function.  This service allows\n * for referencing data to a HTML element via a WeakMap so that when the element\n * is removed from the DOM, the garbage collector can automatically remove the\n * reference in the Service.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ElementDataStorageService {\n    /** Map to reference data to an element */\n    private readonly storage: WeakMap> = new WeakMap>();\n\n    /** Add key/value pairing to map referenced by element */\n    set(element: HTMLElement, key: string, value: any): ElementDataStorageService {\n        const mappedData = this.storage.get(element) || this.storage.set(element, new Map()).get(element);\n        mappedData.set(key, value);\n\n        return this;\n    }\n\n    /** Return a key's value for an element */\n    get(element: HTMLElement, key: string): any {\n        return this.storage.has(element)\n            ? this.storage.get(element).get(key)\n            : undefined;\n    }\n\n    /** Determine if an element has a key/value pairing referenced */\n    has(element: HTMLElement, key: string): boolean {\n        return this.storage.has(element) && this.storage.get(element).has(key);\n    }\n\n    /** Remove a key/value pairing from map referenced by element */\n    delete(element: HTMLElement, key: string): boolean {\n        let deleted = this.storage.has(element);\n        if (deleted) {\n            const mappedData = this.storage.get(element);\n            deleted = mappedData.delete(key);\n            if (mappedData.size === 0) {\n                this.storage.delete(element);\n            }\n        }\n\n        return deleted;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HiddenComponent.html":{"url":"components/HiddenComponent.html","title":"component - HiddenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HiddenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-json-schema-form/src/lib/widget-library/input/hidden/hidden.component.ts\n\n\n    \n        Description\n    \n    \n        Displays an input[type='hidden']\n\n    \n\n    \n        Extends\n    \n    \n                Widget\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                jsf-hidden\n            \n\n            \n                styleUrls\n                ./hidden.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./hidden.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                controlDisabled\n                            \n                            \n                                controlName\n                            \n                            \n                                controlValue\n                            \n                            \n                                formControl\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataIndex\n                            \n                            \n                                layoutIndex\n                            \n                            \n                                layoutNode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(jsf: JsonSchemaFormService, elementDataStorage: ElementDataStorageService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/widget-library/input/hidden/hidden.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jsf\n                                                  \n                                                        \n                                                                        JsonSchemaFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementDataStorage\n                                                  \n                                                        \n                                                                        ElementDataStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataIndex\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:26\n\n                            \n                        \n                \n                    \n                        Index of the data in data array \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutIndex\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:24\n\n                            \n                        \n                \n                    \n                        Index of the layout in the Layout array \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutNode\n                    \n                \n                \n                    \n                        Type :         LayoutNode\n\n                    \n                \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:22\n\n                            \n                        \n                \n                    \n                        Layout Node describing the control \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(event: Event)\n                \n            \n\n\n            \n                \n                    Inherited from         Widget\n\n                \n            \n            \n                \n                        Defined in         Widget:64\n\n                \n            \n\n\n            \n                \n                    Update the value of the control\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nChange event\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:11\n\n                            \n                        \n\n                \n                    \n                        Flag to disable the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:13\n\n                            \n                        \n\n                \n                    \n                        Name for the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:15\n\n                            \n                        \n\n                \n                    \n                        Value of the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AbstractControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:17\n\n                            \n                        \n\n                \n                    \n                        Associated FormControl for widget \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:19\n\n                            \n                        \n\n                \n                    \n                        Options for the control \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { ElementDataStorageService } from '../../../element-data-storage.service';\nimport { JsonSchemaFormService } from '../../../json-schema-form.service';\n\nimport { Widget } from '../../widget';\n\n/**\n * Displays an input[type='hidden']\n */\n@Component({\n    selector: 'jsf-hidden',\n    styleUrls: ['./hidden.component.scss'],\n    templateUrl: './hidden.component.html'\n})\nexport class HiddenComponent extends Widget {\n    constructor(jsf: JsonSchemaFormService, elementDataStorage: ElementDataStorageService) {\n        super(jsf, elementDataStorage);\n    }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./hidden.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'jsf-button'},{'name': 'HiddenComponent', 'selector': 'jsf-hidden'},{'name': 'JsonSchemaFormComponent', 'selector': 'jsf-json-schema-form'},{'name': 'SelectWidgetComponent', 'selector': 'jsf-select-widget'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HiddenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/JsonSchemaFormComponent.html":{"url":"components/JsonSchemaFormComponent.html","title":"component - JsonSchemaFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  JsonSchemaFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-json-schema-form/src/lib/json-schema-form.component.ts\n\n\n    \n        Description\n    \n    \n        NGX JSON Schema Form\nRoot module of the NGX JSON Schema Form client-side library,\nan Angular library which generates an HTML form from a JSON schema\nstructured data model and/or a JSON Schema Form layout description.\nThis library depends on:\n\nAngular (obviously)\nlodash, JavaScript utility library\najv, Another JSON Schema validator\njson-schema-traverse, JSON Schema Traverse\n\nIn addition, the Example Playground also depends on:\n\nbrace, Browserified Ace editor\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnChanges\n                    OnDestroy\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                JsonSchemaFormService\n                                LayoutService\n                                SchemaService\n                \n            \n\n\n            \n                selector\n                jsf-json-schema-form\n            \n\n\n\n\n            \n                templateUrl\n                ./json-schema-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submitForm\n                            \n                            \n                                trackByFn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                autocomplete\n                            \n                            \n                                enctype\n                            \n                            \n                                layout\n                            \n                            \n                                method\n                            \n                            \n                                schema\n                            \n                            \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(schemaService: SchemaService, layoutService: LayoutService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.component.ts:94\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        schemaService\n                                                  \n                                                        \n                                                                        SchemaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        action\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.component.ts:70\n                            \n                        \n                \n                    \n                        Sets the action attribute of the internal form\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\" | null\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.component.ts:75\n                            \n                        \n                \n                    \n                        Sets the autocomplete attribute of the internal form\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enctype\n                    \n                \n                \n                    \n                        Type :     \"application/x-www-form-urlencoded\" | \"multipart/form-data\" | \"text/plain\" | null\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.component.ts:80\n                            \n                        \n                \n                    \n                        Sets the enctype attribute of the internal form\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layout\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.component.ts:65\n                            \n                        \n                \n                    \n                        Layout used to define how the form is rendered \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        method\n                    \n                \n                \n                    \n                        Type :     \"get\" | \"post\" | \"dialog\" | null\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.component.ts:85\n                            \n                        \n                \n                    \n                        Sets the method attribute of the internal form\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schema\n                    \n                \n                \n                    \n                        Type :     JSONSchema7\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.component.ts:63\n                            \n                        \n                \n                    \n                        JSON Schema used to validate form data \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        target\n                    \n                \n                \n                    \n                        Type :     \"_self\" | \"_blank\" | \"_parent\" | \"_top\" | string | null\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.component.ts:90\n                            \n                        \n                \n                    \n                        Sets the target attribute of the internal form\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitForm\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.component.ts:119\n                \n            \n\n\n            \n                \n                    Submits the form \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trackByFn\n                        \n                        \n                    \n                \n            \n            \n                \ntrackByFn(index)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n    ChangeDetectionStrategy, Component, Input,\n    OnChanges, OnDestroy, OnInit, SimpleChanges\n} from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\nimport { cloneDeep, isPlainObject } from 'lodash';\n\nimport { JSONSchema7 } from 'json-schema';\n\nimport { JsonSchemaFormService } from './json-schema-form.service';\nimport { LayoutItem } from './layout-item.data';\nimport { LayoutService } from './layout.service';\nimport { SchemaService } from './schema.service';\n\n// * This library also validates input data by the user, using both validators on\n// * individual controls to provide real-time feedback while the user is filling\n// * out the form, and then validating the entire input against the schema when\n// * the form is submitted to make sure the returned JSON data object is valid.\n// *\n// * This library is similar to, and mostly API compatible with:\n// *\n// * - JSON Schema Form's [Angular Schema Form]{@link http://schemaform.io} library for AngularJs\n// *   [(examples)]{@link http://schemaform.io/examples/bootstrap-example.html}\n// *\n// * - Mozilla's [react-jsonschema-form]{@link https://github.com/mozilla-services/react-jsonschema-form} library for React\n// *   [(examples)]{@link https://mozilla-services.github.io/react-jsonschema-form}\n// *\n// * - Joshfire's [JSON Form]{@link https://github.com/joshfire/jsonform} library for jQuery\n// *   [(examples)]{@link http://ulion.github.io/jsonform/playground}\n/**\n * NGX JSON Schema Form\n *\n * Root module of the NGX JSON Schema Form client-side library,\n * an Angular library which generates an HTML form from a JSON schema\n * structured data model and/or a JSON Schema Form layout description.\n *\n * This library depends on:\n *\n * - [Angular]{@link https://angular.io} (obviously)\n * - [lodash]{@link https://github.com/lodash/lodash}, JavaScript utility library\n * - [ajv]{@link https://github.com/epoberezkin/ajv}, Another JSON Schema validator\n * - [json-schema-traverse]{@link https://github.com/epoberezkin/json-schema-traverse}, JSON Schema Traverse\n *\n * In addition, the Example Playground also depends on:\n *\n * - [brace]{@link http://thlorenz.github.io/brace}, Browserified Ace editor\n */\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        JsonSchemaFormService,\n        LayoutService,\n        SchemaService\n    ],\n    selector: 'jsf-json-schema-form',\n    styles: [],\n    templateUrl: './json-schema-form.component.html'\n})\nexport class JsonSchemaFormComponent implements OnChanges, OnDestroy, OnInit {\n    /** JSON Schema used to validate form data */\n    @Input() schema: JSONSchema7;\n    /** Layout used to define how the form is rendered */\n    @Input() layout: Array;\n    /**\n     * Sets the action attribute of the internal form\n     * See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes}\n     */\n    @Input() action: string | null;\n    /**\n     * Sets the autocomplete attribute of the internal form\n     * See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes}\n     */\n    @Input() autocomplete: 'on' | 'off' | null;\n    /**\n     * Sets the enctype attribute of the internal form\n     * See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes}\n     */\n    @Input() enctype: 'application/x-www-form-urlencoded' | 'multipart/form-data' | 'text/plain' | null;\n    /**\n     * Sets the method attribute of the internal form\n     * See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes}\n     */\n    @Input() method: 'get' | 'post' | 'dialog' | null;\n    /**\n     * Sets the target attribute of the internal form\n     * See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes}\n     */\n    @Input() target: '_self' | '_blank' | '_parent' | '_top' | string | null;\n\n    private formInitialized = false;\n    /** Observable to used to unsubscribe listners upon ngDestroy */\n    private readonly destroyed$: Subject = new Subject();\n\n    constructor(\n        // private readonly jsf: JsonSchemaFormService,\n        private readonly schemaService: SchemaService,\n        readonly layoutService: LayoutService\n    ) {}\n\n    ngOnInit() {\n        this.updateForm();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.hasOwnProperty('schema')) {\n            this.formInitialized = false;\n        }\n        this.updateForm();\n    }\n\n    ngOnDestroy() {\n        this.destroyed$.next();\n        this.destroyed$.complete();\n    }\n\n    /** Submits the form */\n    submitForm(): void {\n        // TODO\n        console.warn(this);\n    }\n\n    trackByFn(index) {\n        return index;\n    }\n\n    private updateForm(): void {\n        if (!this.formInitialized) {\n            this.initializeForm();\n        }\n    }\n\n    private initializeForm(): void {\n        this.initializeSchema();\n        this.initializeLayout();\n        this.formInitialized = true;\n    }\n\n    private initializeLayout(): void {\n        this.layoutService.setLayout(cloneDeep(this.layout || ['*']));\n    }\n\n    private initializeSchema(): void {\n        if (isPlainObject(this.schema)) {\n            this.schemaService.schema = cloneDeep(this.schema);\n        }\n    }\n}\n\n    \n\n    \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'jsf-button'},{'name': 'HiddenComponent', 'selector': 'jsf-hidden'},{'name': 'JsonSchemaFormComponent', 'selector': 'jsf-json-schema-form'},{'name': 'SelectWidgetComponent', 'selector': 'jsf-select-widget'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'JsonSchemaFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JsonSchemaFormModule.html":{"url":"modules/JsonSchemaFormModule.html","title":"module - JsonSchemaFormModule","body":"\n                   \n\n\n\n\n    Modules\n    JsonSchemaFormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JsonSchemaFormModule\n\n\n\ncluster_JsonSchemaFormModule_declarations\n\n\n\ncluster_JsonSchemaFormModule_JsonSchemaFormComponent_providers\n\n\n\ncluster_JsonSchemaFormModule_imports\n\n\n\ncluster_JsonSchemaFormModule_exports\n\n\n\n\nJsonSchemaFormComponent\n\nJsonSchemaFormComponent\n\n\n\nJsonSchemaFormModule\n\nJsonSchemaFormModule\n\nJsonSchemaFormModule -->\n\nJsonSchemaFormComponent->JsonSchemaFormModule\n\n\n\n\n\nJsonSchemaFormComponent \n\nJsonSchemaFormComponent \n\nJsonSchemaFormComponent  -->\n\nJsonSchemaFormModule->JsonSchemaFormComponent \n\n\n\n\n\nWidgetLibraryModule \n\nWidgetLibraryModule \n\nWidgetLibraryModule  -->\n\nJsonSchemaFormModule->WidgetLibraryModule \n\n\n\n\n\nJsonSchemaFormService\n\nJsonSchemaFormService\n\nJsonSchemaFormComponent -->\n\nJsonSchemaFormService->JsonSchemaFormComponent\n\n\n\n\n\nLayoutService\n\nLayoutService\n\nJsonSchemaFormComponent -->\n\nLayoutService->JsonSchemaFormComponent\n\n\n\n\n\nSchemaService\n\nSchemaService\n\nJsonSchemaFormComponent -->\n\nSchemaService->JsonSchemaFormComponent\n\n\n\n\n\nWidgetLibraryModule\n\nWidgetLibraryModule\n\nJsonSchemaFormModule -->\n\nWidgetLibraryModule->JsonSchemaFormModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/json-schema-form.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            JsonSchemaFormComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            WidgetLibraryModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JsonSchemaFormComponent\n                        \n                        \n                            WidgetLibraryModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EVENT_MANAGER_PLUGINS } from '@angular/platform-browser';\n\nimport { WidgetLibraryModule } from './widget-library/widget-library.module';\n\nimport { DataEventPluginService } from './data-event-plugin.service';\nimport { JsonSchemaFormComponent } from './json-schema-form.component';\n\n@NgModule({\n    declarations: [ JsonSchemaFormComponent ],\n    exports: [ JsonSchemaFormComponent, WidgetLibraryModule ],\n    imports: [ CommonModule, WidgetLibraryModule ],\n    providers: [{\n        multi: true,\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: DataEventPluginService\n    }]\n})\nexport class JsonSchemaFormModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JsonSchemaFormService.html":{"url":"injectables/JsonSchemaFormService.html","title":"injectable - JsonSchemaFormService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JsonSchemaFormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/json-schema-form.service.ts\n        \n\n            \n                Description\n            \n            \n                TODO \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                compileTemplate\n                            \n                            \n                                initializeControl\n                            \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(compiler: Compiler, injector: Injector, moduleRef: NgModuleRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.service.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        compiler\n                                                  \n                                                        \n                                                                        Compiler\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    NgModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            compileTemplate\n                        \n                        \n                    \n                \n            \n            \n                \ncompileTemplate(template: string, context: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.service.ts:60\n                \n            \n\n\n            \n                \n                    Compiles an HTML tempalte and data into a document fragment\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    template\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nHTML template to render\n\n\n                                    \n                                \n                                \n                                    context\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                    \n                                        \noptions to use when rendering the template\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DocumentFragment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeControl\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeControl(control: Widget, bind)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.service.ts:44\n                \n            \n\n\n            \n                \n                    Sets a widgets properties upon Widget creation \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                Widget\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    bind\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(ctx: any, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.service.ts:50\n                \n            \n\n\n            \n                \n                    TODO \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n    Compiler, Component, ComponentRef, Injectable, Injector,\n    ModuleWithComponentFactories, NgModule, NgModuleRef\n} from '@angular/core';\n\nimport { Widget } from './widget-library';\n\n/* tslint:disable: max-classes-per-file */\n/** TODO */\n@Injectable()\nexport class JsonSchemaFormService {\n    private x = false;\n\n    /** Creates a component with passed in template and associated context */\n    private static createComponent(template: string, context: {[key: string]: any}): any {\n        return Component({\n            selector: `runtime-component-sample`,\n            template\n        })(class RuntimeComponent {\n            options: any = context;\n        });\n    }\n\n    /** Create a module for use with the RuntimeComponent */\n    private static createModule(component: any, compiler: Compiler): ModuleWithComponentFactories {\n        @NgModule({ imports: [CommonModule], declarations: [component] })\n        class RuntimeComponentModule { }\n\n        return compiler.compileModuleAndAllComponentsSync(RuntimeComponentModule);\n    }\n\n    /** Get a components innerHTML as a document Fragment */\n    private static getDocumentFragment(componentRef: ComponentRef): DocumentFragment {\n        const template = document.createElement('template');\n        template.innerHTML = (componentRef.location.nativeElement).innerHTML;\n\n        return template.content;\n    }\n\n    constructor(private readonly compiler: Compiler, private readonly injector: Injector, private readonly moduleRef: NgModuleRef) {}\n\n    /** Sets a widgets properties upon Widget creation */\n    initializeControl(control: Widget, bind = true): void {\n        // Do we even need to do this?  seems silly\n        control.controlName = control.layoutNode.name;\n    }\n\n    /** TODO */\n    updateValue(ctx: any, value: any): void {\n        // TODO\n        this.x = !this.x;\n    }\n\n    /**\n     * Compiles an HTML tempalte and data into a document fragment\n     * @param template - HTML template to render\n     * @param context - options to use when rendering the template\n     */\n    compileTemplate(template: string, context: {[key: string]: any} = {}): DocumentFragment {\n        const component: any = JsonSchemaFormService.createComponent(template, context);\n        const module = JsonSchemaFormService.createModule(component, this.compiler);\n        const factory = module.componentFactories.find((f) => f.componentType === component);\n        const componentRef: ComponentRef = factory.create(this.injector, undefined, undefined, this.moduleRef);\n\n        componentRef.hostView.detectChanges();\n        const fragment = JsonSchemaFormService.getDocumentFragment(componentRef);\n        componentRef.destroy();\n\n        return fragment;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LayoutItem.html":{"url":"interfaces/LayoutItem.html","title":"interface - LayoutItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LayoutItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/layout-item.data.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        key\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        options\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [others: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/layout-item.data.ts:16\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Object path to map this item to a data value \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name for the item.  Will be used as the input[name] \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Container for options to set on widgets.\nNOTE: this is optional as any undeclared property will automatically be put into an options contianer\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Specify what type of widget is used to represent the data.\nIf not is specified, the JSON Schema will be used to determine the most appropriate widget\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface LayoutItem {\n    /** Object path to map this item to a data value */\n    key?: string;\n    /** Name for the item.  Will be used as the input[name] */\n    name?: string;\n    /**\n     * Container for options to set on widgets.\n     * NOTE: this is optional as any undeclared property will automatically be put into an options contianer\n     */\n    options?: {[others: string]: any};\n    /**\n     * Specify what type of widget is used to represent the data.\n     * If not is specified, the JSON Schema will be used to determine the most appropriate widget\n     */\n    type?: string;\n\n    [others: string]: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LayoutNode.html":{"url":"classes/LayoutNode.html","title":"class - LayoutNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LayoutNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/layout-node.ts\n        \n\n            \n                Description\n            \n            \n                The LayoutNode contains the logic to parse a LayoutItem along with its Schema.\nA LayoutNode acts, to some degree, as a proxy of the LayoutItem, augmenting data\nas needed. This gives the system a specific api to work with while allowing the\nuser to pass in variable data, so a degree.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    layoutDefinition\n                                \n                                \n                                    name\n                                \n                                \n                                    dataPointer\n                                \n                                \n                                    type\n                                \n                                \n                                    content\n                                \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutItem: LayoutItem, schema?: JSONSchema7)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/layout-node.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        layoutItem\n                                                  \n                                                        \n                                                                        LayoutItem\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                    JSONSchema7\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : uniqueId('control')\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/layout-node.ts:22\n                            \n                        \n\n                \n                    \n                        Unique Identifier for the item \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(layoutItem: LayoutItem | string, schemaService: SchemaService)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/layout-node.ts:40\n                \n            \n\n\n            \n                \n                    Creates a LayoutNode\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    layoutItem\n                                    \n                                                LayoutItem | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nA LayoutItem presented by the user.  If a string is given, it is converted into a LayoutItem\n\n\n                                    \n                                \n                                \n                                    schemaService\n                                    \n                                                SchemaService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nService for looking up related Schema definition\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LayoutNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        layoutDefinition\n                    \n                \n\n                \n                    \n                        getlayoutDefinition()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/layout-node.ts:58\n                                \n                            \n                    \n                        \n                                Copy of the original layoutItem \n\n\n                                \n                                    Returns :         LayoutItem\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/layout-node.ts:62\n                                \n                            \n                    \n                        \n                                Name for the item.  Will be used as the input[name] \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        dataPointer\n                    \n                \n\n                \n                    \n                        getdataPointer()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/layout-node.ts:66\n                                \n                            \n                    \n                        \n                                JSON path for accessing data for this layout item \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/layout-node.ts:70\n                                \n                            \n                    \n                        \n                                Type of widget is used to represent the data \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n\n                \n                    \n                        getcontent()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/layout-node.ts:75\n                                \n                            \n                    \n                        \n                                HTML content to be rendered inside the widget \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/layout-node.ts:79\n                                \n                            \n                    \n                        \n                                Options for the widget \n\n\n                                \n                                    Returns :         LayoutOptions\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { JSONSchema7 } from 'json-schema';\nimport { cloneDeep, defaultTo, isString, mapKeys, omit, pick, uniqueId } from 'lodash';\nimport { Memoize } from 'lodash-decorators';\n\nimport { LayoutItem } from './layout-item.data';\nimport { LayoutOptions } from './layout-options.data';\nimport { SchemaService } from './schema.service';\n\n/**\n * The LayoutNode contains the logic to parse a LayoutItem along with its Schema.\n * A LayoutNode acts, to some degree, as a proxy of the LayoutItem, augmenting data\n * as needed. This gives the system a specific api to work with while allowing the\n * user to pass in variable data, so a degree.\n */\nexport class LayoutNode {\n    /** Reference to the user defined layout item */\n    private readonly layoutItem: LayoutItem;\n    /** Reference to the schema that pertains the layout */\n    private readonly schema: JSONSchema7;\n\n    /** Unique Identifier for the item */\n    public readonly id: string = uniqueId('control');\n\n    /**\n     * @throws Will throw an error if there is no layout.type or schema.type\n     */\n    constructor(layoutItem: LayoutItem, schema?: JSONSchema7) {\n        if (!layoutItem.type && !(schema && schema.type)) {\n            throw new Error('Missing \"type\"....');\n        }\n        this.layoutItem = layoutItem;\n        this.schema = schema;\n    }\n\n    /**\n     * Creates a LayoutNode\n     * @param layoutItem - A LayoutItem presented by the user.  If a string is given, it is converted into a LayoutItem\n     * @param schemaService - Service for looking up related Schema definition\n     */\n    public static create(layoutItem: LayoutItem | string, schemaService: SchemaService): LayoutNode {\n        const item: LayoutItem = isString(layoutItem)\n            ? {key: layoutItem}\n            : layoutItem;\n        const schema: JSONSchema7 = schemaService.dataPointerMap.get(LayoutNode.getPointer(item.key));\n\n        return new LayoutNode(item, schema);\n    }\n\n    /** Normalizes a key(object.path or json/path) to json path */\n    private static getPointer(key: string): string {\n        const pointer = defaultTo(key, '');\n\n        return pointer.charAt(0) === '/'\n            ? pointer\n            : `/${pointer.replace(/\\./g, '/')}`;\n    }\n    /** Copy of the original layoutItem */\n    @Memoize() get layoutDefinition(): LayoutItem {\n        return cloneDeep(this.layoutItem);\n    }\n    /** Name for the item.  Will be used as the input[name] */\n    @Memoize() get name(): string {\n        return this.layoutItem.name || this.dataPointer.split('/').pop();\n    }\n    /** JSON path for accessing data for this layout item */\n    @Memoize() get dataPointer(): string {\n        return LayoutNode.getPointer(this.layoutItem.key);\n    }\n    /** Type of widget is used to represent the data */\n    @Memoize() get type(): string {\n        // TODO: handle array of types\n        return this.layoutItem.type || defaultTo(this.schema, {}).type;\n    }\n    /** HTML content to be rendered inside the widget */\n    @Memoize() get content(): string {\n        return isString(this.layoutItem.content) ? this.layoutItem.content : undefined;\n    }\n    /** Options for the widget */\n    @Memoize() get options(): LayoutOptions {\n        return {\n            ...pick(this.schema, ['title', 'description']),\n            ...mapKeys(pick(this.schema, ['readOnly']), () => 'readonly'),\n            ...omit(this.layoutItem, ['key', 'type', 'name', 'content', 'options']),\n            ...defaultTo(this.layoutItem.options, {})\n        };\n    }\n\n    // $ref?: any;\n    // arrayItem?;\n    // arrayItemType?;\n    // dataType?;\n    // items?: Array;\n    // recursiveReference?;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LayoutOptions.html":{"url":"interfaces/LayoutOptions.html","title":"interface - LayoutOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LayoutOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/layout-options.data.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        accesskey\n                                \n                                \n                                            Optional\n                                        dirname\n                                \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        htmlClass\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        readonly\n                                \n                                \n                                            Optional\n                                        style\n                                \n                                \n                                            Optional\n                                        tabindex\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [others: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/layout-options.data.ts:32\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accesskey\n                                    \n                                \n                                \n                                    \n                                        accesskey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/accesskey \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dirname\n                                    \n                                \n                                \n                                    \n                                        dirname:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#dirname \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#disabled \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        htmlClass\n                                    \n                                \n                                \n                                    \n                                        htmlClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/class \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readonly\n                                    \n                                \n                                \n                                    \n                                        readonly:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#readonly \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                    \n                                \n                                \n                                    \n                                        style:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/style \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tabindex\n                                    \n                                \n                                \n                                    \n                                        tabindex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/title \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface LayoutOptions {\n    /* Global HTML attributes */\n    /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/accesskey} */\n    accesskey?: string;\n    /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/class} */\n    htmlClass?: string;\n    /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/style} */\n    style?: string;\n    /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex} */\n    tabindex?: number;\n    /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/title} */\n    title?: string;\n\n    /* Global HTML Input attributes */\n    /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#dirname} */\n    dirname?: boolean;\n    /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#disabled} */\n    disabled?: boolean;\n    /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#readonly} */\n    readonly?: boolean;\n\n    /* Attribute for setting a icon */\n    icon?: {\n        /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/image#alt} */\n        alt?: string;\n        /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/image#height} */\n        height?: number;\n        /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/image#src} */\n        src: string;\n        /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/image#width} */\n        width?: number;\n    };\n\n    [others: string]: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LayoutService.html":{"url":"injectables/LayoutService.html","title":"injectable - LayoutService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LayoutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/layout.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides services for handling layouts \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setLayout\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    layout\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(schemaService: SchemaService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/layout.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        schemaService\n                                                  \n                                                        \n                                                                        SchemaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLayout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLayout(value: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/layout.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        layout\n                    \n                \n\n                \n                    \n                        getlayout()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/layout.service.ts:18\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                        \n\n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nList of Layout Nodes to be displayed in the UI\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         Array\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { difference } from 'lodash';\n\nimport { JSONSchema7Definition } from 'json-schema';\n\nimport { LayoutItem } from './layout-item.data';\nimport { LayoutNode } from './layout-node';\nimport { SchemaService } from './schema.service';\n\n/** Provides services for handling layouts */\n@Injectable()\nexport class LayoutService {\n    private _layout: Array = [];\n    /**\n     * @param value - List of Layout Nodes to be displayed in the UI\n     */\n    get layout(): Array {\n        return this._layout;\n    }\n\n    constructor(private readonly schemaService: SchemaService) {}\n\n    public setLayout(value: Array): void {\n        this._layout = this.buildLayout(value);\n    }\n\n    private buildLayout(layout: Array): Array {\n        const schemaPointers: Map = this.schemaService.dataPointerMap;\n        const mappedPointers: Set = new Set();\n        let starIndex = -1;\n\n        const mappedLayout: Array =\n            layout.reduce((currentLayout: Array, layoutItem: LayoutItem | string, i: number): Array => {\n            let newLayout: Array = currentLayout;\n\n            if (layoutItem === '*') {\n                starIndex = i;\n            } else {\n                try {\n                    const layoutNode: LayoutNode = LayoutNode.create(layoutItem, this.schemaService);\n                    mappedPointers.add(layoutNode.dataPointer);\n                    newLayout = newLayout.concat(layoutNode);\n                } catch (err) {\n                    console.error('buildLayout error: Form layout element not recognized:');\n                    console.error(layoutItem);\n                }\n            }\n\n            return newLayout;\n        }, []);\n\n        if (starIndex !== -1) {\n            const availablePointers: Array = Array.from(schemaPointers.keys());\n            mappedLayout.splice(starIndex, 0, ...this.buildLayout(difference(availablePointers, Array.from(mappedPointers))));\n        }\n\n        return mappedLayout;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchemaService.html":{"url":"injectables/SchemaService.html","title":"injectable - SchemaService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SchemaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/schema.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides services for parsing JSON Schema and validating data \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    schema\n                                \n                                \n                                    dataPointerMap\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/schema.service.ts:49\n                \n            \n\n\n            \n                \n                    Validates data based on set JSON Schema\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ndata to be valdiated\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        schema\n                    \n                \n\n                \n                    \n                        getschema()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/schema.service.ts:21\n                                \n                            \n\n                \n                    \n                        setschema(value)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/schema.service.ts:17\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nJSON Schema to be used for validation\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        dataPointerMap\n                    \n                \n\n                \n                    \n                        getdataPointerMap()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/schema.service.ts:30\n                                \n                            \n                    \n                        \n                                Gets a map of all the relevant json data pointers\nand their related schema definitions.  This allows for\neasy lookup of a schema reference from a json pointer.\n\n\n                                \n                                    Returns :     Map\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport traverse from 'json-schema-traverse';\n\nimport Ajv from 'ajv';\n\nimport { JSONSchema7, JSONSchema7Definition } from 'json-schema';\n\n/** Provides services for parsing JSON Schema and validating data */\n@Injectable()\nexport class SchemaService {\n    // TODO: Setter function to automatically upgrade schema version?\n    private _schema: JSONSchema7 = {};\n    /**\n     * @param value - JSON Schema to be used for validation\n     */\n    set schema(value: JSONSchema7) {\n        this._schema = value;\n        this.compileSchema();\n    }\n    get schema(): JSONSchema7 {\n        return this._schema;\n    }\n\n    /**\n     * Gets a map of all the relevant json data pointers\n     * and their related schema definitions.  This allows for\n     * easy lookup of a schema reference from a json pointer.\n     */\n    get dataPointerMap(): Map {\n        const pointers: Map = new Map();\n        traverse(this.schema, {cb: (...args) => {\n            const [schema, pointer, , , , parentSchema] = args;\n            if (pointer && parentSchema && parentSchema.type !== 'array' && schema.type !== 'object') {\n                pointers.set(pointer.replace(/\\/properties/g, ''), schema);\n            }\n        }});\n\n        return pointers;\n    }\n\n    private readonly ajv: Ajv.Ajv = new Ajv({ allErrors: true, jsonPointers: true, unknownFormats: 'ignore' });\n    private validator: Ajv.ValidateFunction;\n\n    /**\n     * Validates data based on set JSON Schema\n     * @param data - data to be valdiated\n     */\n    validate(data: any): boolean {\n        return this.validator(data);\n    }\n\n    private compileSchema() {\n        this.ajv.removeSchema(this.schema);\n        this.validator = this.ajv.compile(this.schema);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectWidgetComponent.html":{"url":"components/SelectWidgetComponent.html","title":"component - SelectWidgetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectWidgetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-json-schema-form/src/lib/widget-library/container/select-widget/select-widget.component.ts\n\n\n    \n        Description\n    \n    \n        Dynamically creates a widget component based on a layout node.\nChanges in @Input attributes will be passed onto the created widget.\n\n    \n\n    \n        Extends\n    \n    \n                Widget\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                jsf-select-widget\n            \n\n            \n                styleUrls\n                ./select-widget.component.css\n            \n\n\n\n            \n                templateUrl\n                ./select-widget.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                widgetContainer\n                            \n                            \n                                controlDisabled\n                            \n                            \n                                controlName\n                            \n                            \n                                controlValue\n                            \n                            \n                                formControl\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataIndex\n                            \n                            \n                                layoutIndex\n                            \n                            \n                                layoutNode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactory: ComponentFactoryResolver, widgetLibraryService: WidgetLibraryService, jsf: JsonSchemaFormService, elementDataStorage: ElementDataStorageService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/widget-library/container/select-widget/select-widget.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactory\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        widgetLibraryService\n                                                  \n                                                        \n                                                                        WidgetLibraryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jsf\n                                                  \n                                                        \n                                                                        JsonSchemaFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementDataStorage\n                                                  \n                                                        \n                                                                        ElementDataStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataIndex\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:26\n\n                            \n                        \n                \n                    \n                        Index of the data in data array \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutIndex\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:24\n\n                            \n                        \n                \n                    \n                        Index of the layout in the Layout array \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutNode\n                    \n                \n                \n                    \n                        Type :         LayoutNode\n\n                    \n                \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:22\n\n                            \n                        \n                \n                    \n                        Layout Node describing the control \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(event: Event)\n                \n            \n\n\n            \n                \n                    Inherited from         Widget\n\n                \n            \n            \n                \n                        Defined in         Widget:64\n\n                \n            \n\n\n            \n                \n                    Update the value of the control\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nChange event\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            widgetContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ViewContainerRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('widgetContainer', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/container/select-widget/select-widget.component.ts:25\n                            \n                        \n\n                \n                    \n                        Placeholder for injecting widget \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:11\n\n                            \n                        \n\n                \n                    \n                        Flag to disable the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:13\n\n                            \n                        \n\n                \n                    \n                        Name for the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:15\n\n                            \n                        \n\n                \n                    \n                        Value of the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AbstractControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:17\n\n                            \n                        \n\n                \n                    \n                        Associated FormControl for widget \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:19\n\n                            \n                        \n\n                \n                    \n                        Options for the control \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n    Component, ComponentFactoryResolver, ComponentRef,\n    OnChanges, OnInit, ViewChild, ViewContainerRef\n} from '@angular/core';\n\nimport { ElementDataStorageService } from '../../../element-data-storage.service';\nimport { JsonSchemaFormService } from '../../../json-schema-form.service';\n\nimport { Widget } from '../../widget';\nimport { WidgetLibraryService } from '../../widget-library.service';\n\n/**\n * Dynamically creates a widget component based on a layout node.\n * Changes in @Input attributes will be passed onto the created widget.\n */\n@Component({\n    selector: 'jsf-select-widget',\n    styleUrls: ['./select-widget.component.css'],\n    templateUrl: './select-widget.component.html'\n})\nexport class SelectWidgetComponent extends Widget implements OnInit, OnChanges {\n    private newComponent: ComponentRef;\n\n    /** Placeholder for injecting widget */\n    @ViewChild('widgetContainer', { read: ViewContainerRef }) widgetContainer: ViewContainerRef;\n\n    constructor(private readonly componentFactory: ComponentFactoryResolver,\n        private readonly widgetLibraryService: WidgetLibraryService,\n        jsf: JsonSchemaFormService,\n        elementDataStorage: ElementDataStorageService) {\n            super(jsf, elementDataStorage);\n    }\n\n    ngOnInit() {\n        this.updateComponent();\n    }\n\n    ngOnChanges() {\n        this.updateComponent();\n    }\n\n    private updateComponent(): void {\n        this.createComponent();\n        if (this.newComponent) {\n            for (const input of ['layoutNode', 'layoutIndex', 'dataIndex']) {\n                this.newComponent.instance[input] = this[input];\n            }\n        }\n    }\n\n    private createComponent(): void {\n        // TODO: What if layoutNode were to change?  The form would be incorrect.\n        if (!this.newComponent && this.layoutNode && this.layoutNode.type) {\n            this.newComponent = this.widgetContainer.createComponent(\n                this.componentFactory.resolveComponentFactory(\n                    this.widgetLibraryService.getWidget(this.layoutNode.type) as any\n                ),\n                undefined,\n                undefined,\n                this.generateNgContent()\n            );\n        }\n    }\n\n    private generateNgContent(): Array> {\n        if (this.layoutNode.content) {\n            return [ [ this.jsf.compileTemplate(this.layoutNode.content, this.layoutNode.options) ] ];\n        }\n    }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./select-widget.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'jsf-button'},{'name': 'HiddenComponent', 'selector': 'jsf-hidden'},{'name': 'JsonSchemaFormComponent', 'selector': 'jsf-json-schema-form'},{'name': 'SelectWidgetComponent', 'selector': 'jsf-select-widget'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectWidgetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Widget.html":{"url":"classes/Widget.html","title":"class - Widget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Widget\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/widget-library/widget.ts\n        \n\n            \n                Description\n            \n            \n                Widget \n\n            \n\n\n            \n                Implements\n            \n            \n                            OnChanges\n                            OnInit\n                            AfterViewInit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                controlDisabled\n                            \n                            \n                                controlName\n                            \n                            \n                                controlValue\n                            \n                            \n                                formControl\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataIndex\n                            \n                            \n                                layoutIndex\n                            \n                            \n                                layoutNode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jsf: JsonSchemaFormService, elementDataStorage: ElementDataStorageService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget.ts:29\n                            \n                        \n\n                \n                    \n                            constructor \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jsf\n                                                  \n                                                        \n                                                                        JsonSchemaFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementDataStorage\n                                                  \n                                                        \n                                                                        ElementDataStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget.ts:11\n                            \n                        \n\n                \n                    \n                        Flag to disable the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget.ts:13\n                            \n                        \n\n                \n                    \n                        Name for the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget.ts:15\n                            \n                        \n\n                \n                    \n                        Value of the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AbstractControl\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget.ts:17\n                            \n                        \n\n                \n                    \n                        Associated FormControl for widget \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget.ts:19\n                            \n                        \n\n                \n                    \n                        Options for the control \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget.ts:64\n                \n            \n\n\n            \n                \n                    Update the value of the control\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nChange event\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataIndex\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget.ts:26\n                            \n                        \n                \n                    \n                        Index of the data in data array \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutIndex\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget.ts:24\n                            \n                        \n                \n                    \n                        Index of the layout in the Layout array \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutNode\n                    \n                \n                \n                    \n                        Type :         LayoutNode\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget.ts:22\n                            \n                        \n                \n                    \n                        Layout Node describing the control \n\n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { AfterViewInit, ElementRef, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { ElementDataStorageService } from '../element-data-storage.service';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\nimport { LayoutNode } from '../layout-node';\n\n/** Widget */\nexport abstract class Widget implements OnChanges, OnInit, AfterViewInit {\n    /** Flag to disable the control */\n    controlDisabled = false;\n    /** Name for the control */\n    controlName: string;\n    /** Value of the control */\n    controlValue: any;\n    /** Associated FormControl for widget */\n    formControl: AbstractControl;\n    /** Options for the control */\n    options: any;\n\n    /** Layout Node describing the control */\n    @Input() layoutNode: LayoutNode;\n    /** Index of the layout in the Layout array */\n    @Input() layoutIndex: Array;\n    /** Index of the data in data array */\n    @Input() dataIndex: Array;\n\n    /** Reference to the underlying control. Look to replace using FormControl */\n    @ViewChild('control', {read: ElementRef}) private readonly control: ElementRef;\n\n    /** constructor */\n    constructor(protected jsf: JsonSchemaFormService, protected elementDataStorage: ElementDataStorageService) {}\n\n    /** Propagate layoutNode changes to the ElementDataStorage */\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.layoutNode) {\n            this.updateData();\n        }\n    }\n    /**\n     * Initialize the control and populate the options\n     */\n    ngOnInit() {\n        this.jsf.initializeControl(this);\n        this.options = this.layoutNode.options || {};\n    }\n\n    /** Set the initial layout in the ElementDataStorage */\n    ngAfterViewInit() {\n        this.updateData();\n    }\n\n    /** Update the ElementDataStorage */\n    private updateData(): void {\n        if (this.control) {\n            this.elementDataStorage.set(this.control.nativeElement, 'layout', this.layoutNode.layoutDefinition);\n        }\n    }\n\n    /**\n     * Update the value of the control\n     * @param event - Change event\n     */\n    updateValue(event: Event) {\n        this.jsf.updateValue(this, (event.target).value);\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WidgetLibraryModule.html":{"url":"modules/WidgetLibraryModule.html","title":"module - WidgetLibraryModule","body":"\n                   \n\n\n\n\n    Modules\n    WidgetLibraryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WidgetLibraryModule\n\n\n\ncluster_WidgetLibraryModule_declarations\n\n\n\ncluster_WidgetLibraryModule_exports\n\n\n\n\nButtonComponent\n\nButtonComponent\n\n\n\nWidgetLibraryModule\n\nWidgetLibraryModule\n\nWidgetLibraryModule -->\n\nButtonComponent->WidgetLibraryModule\n\n\n\n\n\nHiddenComponent\n\nHiddenComponent\n\nWidgetLibraryModule -->\n\nHiddenComponent->WidgetLibraryModule\n\n\n\n\n\nSelectWidgetComponent\n\nSelectWidgetComponent\n\nWidgetLibraryModule -->\n\nSelectWidgetComponent->WidgetLibraryModule\n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nWidgetLibraryModule->ButtonComponent \n\n\n\n\n\nHiddenComponent \n\nHiddenComponent \n\nHiddenComponent  -->\n\nWidgetLibraryModule->HiddenComponent \n\n\n\n\n\nSelectWidgetComponent \n\nSelectWidgetComponent \n\nSelectWidgetComponent  -->\n\nWidgetLibraryModule->SelectWidgetComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/widget-library/widget-library.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ButtonComponent\n                        \n                        \n                            HiddenComponent\n                        \n                        \n                            SelectWidgetComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            BASIC_WIDGETS\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ButtonComponent\n                        \n                        \n                            HiddenComponent\n                        \n                        \n                            SelectWidgetComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { BASIC_WIDGETS } from '.';\n\n@NgModule({\n    declarations: [ ...BASIC_WIDGETS ],\n    entryComponents: [ ...BASIC_WIDGETS ],\n    exports: [ ...BASIC_WIDGETS ],\n    imports: [ CommonModule, ReactiveFormsModule ]\n})\nexport class WidgetLibraryModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WidgetLibraryService.html":{"url":"injectables/WidgetLibraryService.html","title":"injectable - WidgetLibraryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WidgetLibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/widget-library/widget-library.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides services for mapping a widget component to a layoutNode type\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWidget\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWidget\n                        \n                        \n                    \n                \n            \n            \n                \ngetWidget(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget-library.service.ts:28\n                \n            \n\n\n            \n                \n                    Gets a widget class from the type\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntype of component\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { ButtonComponent } from './input/button/button.component';\nimport { HiddenComponent } from './input/hidden/hidden.component';\nimport { Widget } from './widget';\n\n/**\n * Provides services for mapping a widget component to a layoutNode type\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class WidgetLibraryService {\n    private readonly defaultWidget = 'hidden';\n\n    private readonly widgets = {\n        button: ButtonComponent,\n        hidden: HiddenComponent,\n        image: ButtonComponent,\n        reset: ButtonComponent,\n        submit: ButtonComponent\n    };\n\n    /**\n     * Gets a widget class from the type\n     * @param type - type of component\n     */\n    getWidget(type: string): typeof Widget {\n        return this.hasWidget(type)\n            ? this.widgets[type]\n            : this.widgets[this.defaultWidget];\n    }\n\n    private hasWidget(type: string): boolean {\n        return !!this.widgets[type];\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.0\n        \n            @angular/cdk : ^7.2.0\n        \n            @angular/common : ~7.2.0\n        \n            @angular/compiler : ~7.2.0\n        \n            @angular/core : ~7.2.0\n        \n            @angular/flex-layout : 7.0.0-beta.24\n        \n            @angular/forms : ~7.2.0\n        \n            @angular/http : ~7.2.0\n        \n            @angular/material : ~7.2.0\n        \n            @angular/platform-browser : ~7.2.0\n        \n            @angular/platform-browser-dynamic : ~7.2.0\n        \n            @angular/router : ~7.2.0\n        \n            @types/ace : 0.0.36\n        \n            @types/json-schema : ^7.0.3\n        \n            @types/lodash : ^4.14.136\n        \n            ajv : ^6.10.0\n        \n            brace : ^0.11.0\n        \n            core-js : ^2.5.4\n        \n            json-schema-traverse : ^0.4.1\n        \n            lodash : ^4.17.14\n        \n            lodash-decorators : ^6.0.1\n        \n            ng2-ace-editor : 0.3.9\n        \n            rxjs : ~6.5.2\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n\nNgxJsonSchemaForm\nA JSON Schema Form builder for Angular 7+, similar to\n\nAngular JSON Schema Form's \n\nNote: This project attemtps to take over where its predecesor left off.\nIt's based off of the above project, but rewritten from the ground up.\nNote: This project is not ready for consumption.  There is still a lot to do to\nbring parity with Angular JSON Schema Form\nCheck out the live demo and play with the examples\nCheck out some examples here.\nUsing Angular JSON Schema Form\nBasic use\nBegin by installing the library in your project\nnpm install ngx-json-schema-form --saveThen import JsonSchemaFormModule in your main application module:\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { JsonSchemaFormModule } from 'ngx-json-schema-form';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n    declarations: [ AppComponent ],\n    imports: [\n        BrowserModule,\n        JsonSchemaFormModule\n    ],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule { }To display a form in your Angular component, simply add the following to your component's template:\nWhere schema is a valid JSON schema object. If you don't already have your own schemas, you can find a bunch of samples to test with in the projects/demo/src/assets/examples folder.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License\nCopyright for portions of project NGX-Json-Schema-Form are held by [David Schnell-Davis, 2014]\nas part of project Angular2-Json-Schema-Form. All other copyright for project NGX-Json-Schema-Form\nare held by [James Scharett, 2019]\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        JsonSchemaFormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WidgetLibraryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JsonSchemaFormModule\n\n\n\ncluster_JsonSchemaFormModule_declarations\n\n\n\ncluster_JsonSchemaFormModule_JsonSchemaFormComponent_providers\n\n\n\ncluster_JsonSchemaFormModule_imports\n\n\n\ncluster_JsonSchemaFormModule_exports\n\n\n\ncluster_WidgetLibraryModule\n\n\n\ncluster_WidgetLibraryModule_declarations\n\n\n\ncluster_WidgetLibraryModule_exports\n\n\n\n\nJsonSchemaFormComponent\n\nJsonSchemaFormComponent\n\n\n\nJsonSchemaFormModule\n\nJsonSchemaFormModule\n\nJsonSchemaFormModule -->\n\nJsonSchemaFormComponent->JsonSchemaFormModule\n\n\n\n\n\nJsonSchemaFormComponent \n\nJsonSchemaFormComponent \n\nJsonSchemaFormComponent  -->\n\nJsonSchemaFormModule->JsonSchemaFormComponent \n\n\n\n\n\nWidgetLibraryModule \n\nWidgetLibraryModule \n\nWidgetLibraryModule  -->\n\nJsonSchemaFormModule->WidgetLibraryModule \n\n\n\n\n\nJsonSchemaFormService\n\nJsonSchemaFormService\n\nJsonSchemaFormComponent -->\n\nJsonSchemaFormService->JsonSchemaFormComponent\n\n\n\n\n\nLayoutService\n\nLayoutService\n\nJsonSchemaFormComponent -->\n\nLayoutService->JsonSchemaFormComponent\n\n\n\n\n\nSchemaService\n\nSchemaService\n\nJsonSchemaFormComponent -->\n\nSchemaService->JsonSchemaFormComponent\n\n\n\n\n\nWidgetLibraryModule\n\nWidgetLibraryModule\n\nJsonSchemaFormModule -->\n\nWidgetLibraryModule->JsonSchemaFormModule\n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nWidgetLibraryModule->ButtonComponent \n\n\n\n\n\nHiddenComponent \n\nHiddenComponent \n\nHiddenComponent  -->\n\nWidgetLibraryModule->HiddenComponent \n\n\n\n\n\nSelectWidgetComponent \n\nSelectWidgetComponent \n\nSelectWidgetComponent  -->\n\nWidgetLibraryModule->SelectWidgetComponent \n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nWidgetLibraryModule -->\n\nButtonComponent->WidgetLibraryModule\n\n\n\n\n\nHiddenComponent\n\nHiddenComponent\n\nWidgetLibraryModule -->\n\nHiddenComponent->WidgetLibraryModule\n\n\n\n\n\nSelectWidgetComponent\n\nSelectWidgetComponent\n\nWidgetLibraryModule -->\n\nSelectWidgetComponent->WidgetLibraryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DataEvent   (projects/.../data-event-plugin.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-json-schema-form/src/lib/data-event-plugin.service.ts\n    \n    \n        \n            \n                \n                    \n                    DataEvent\n                \n            \n            \n                \n                    Event wrapper for piggybacking data on an event \n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BASIC_WIDGETS   (projects/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-json-schema-form/src/lib/widget-library/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BASIC_WIDGETS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    ButtonComponent, HiddenComponent,\n    SelectWidgetComponent\n]\n                        \n                    \n\n                \n                    \n                        List of all Widget Components for ease of use. \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/introduction.html":{"url":"additional-documentation/introduction.html","title":"additional-page - Introduction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n\n\n\nJson Schema\nThe only requirement to using the component is to supply a valid JSON Schema.  The component will parse the schema and display all properties in the order they\nare presented within the schema.\n\nschema.json\n\n{\n    \"$id\": \"https://example.com/person.schema.json\",\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"Person\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"firstName\": {\n            \"type\": \"string\",\n            \"description\": \"The person's first name.\"\n        },\n        \"lastName\": {\n            \"type\": \"string\",\n            \"description\": \"The person's last name.\"\n        },\n        \"age\": {\n            \"description\": \"Age in years which must be equal to or greater than zero.\",\n            \"type\": \"integer\",\n            \"minimum\": 0\n        }\n    }\n}\n\nIn this example, the form will display 3 fields; firstName, lastName and age.  The order is determined by the order of the fields in the schema.  Once you have your schema set, all you need to do is pass it to the component\n\nbasic.component.ts\n\nimport { JSONSchema7 } from 'json-schema';\nimport schema from './schema.json';\n\n@Component({\n    template: ``,\n    ...\n})\nexport class BasicComponent {\n    schema: JSONSchema7 = schema as JSONSchema7;\n    ...\n}\n\nHere we import the schema json and set it as a property on our component.  Then you wire up the schema in the template and\nLayout\nThe deault layout is simply ['*'].  This translates to display everything in the the schema.  The * key is a special command that tells the component to display everything that has not specifically been laid out.  This can become useful when you only care about a few fields and their location.  For example:\n\nschema.json\n\n{\n    \"$id\": \"https://example.com/person.schema.json\",\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"Person\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"question1\": {\n            \"type\": \"boolean\"\n        },\n        \"age\": {\n            \"description\": \"Are you 18 or older?\",\n            \"type\": \"boolean\"\n        },\n        \"question2\": {\n            \"type\": \"boolean\"\n        }\n    }\n}\n\nlayout.json\n\n[\n    \"age\",\n    '*'\n]\n\nlayout.component.ts\n\nimport { JSONSchema7 } from 'json-schema';\nimport schema from './schema.json';\nimport layout from './layout.json';\n\n@Component({\n    template: ``,\n    ...\n})\nexport class LayoutComponent {\n    schema: JSONSchema7 = schema as JSONSchema7;\n    layout: Array = layout;\n    ...\n}\n\nAs you can see, we only care that age is presented first.  All the other properties in the schema are shown after age.\nForm Options\nJust like a native form, you can set the standard form attributes (action, autocomplete, enctype, method, target) on the jsf component.  Most of the time you will not need to set these, but there may be instances in which you need your form to do an actual submit and need these set. For more info on these see Form Attributes.\n\nlogin.component.html\n\n\n\nWidgets\nOptions\nThere are numerous attributes that can be set on a widget which are set via the layout.  The following are currently supported\n\naccesskey\ndirname\ndisabled\nhtmlClass\nname\nreadonly\nstyle\ntabindex\ntitle\n\n\nlayout.json\n\n[{\n    \"type\": \"text\",\n    \"accesskey\": \"n\",\n    \"dirname\": true,\n    \"disabled\": false,\n    \"htmlClass\": \"input-sm\",\n    \"name\": \"name\",\n    \"readonly\": true,\n    \"style\": \"color: #333;\",\n    \"tabindex\": 2,\n    \"title\": \"Name\"\n}]\n\nButton\nThere are 4 types of buttons that jsf supports, button, image, reset and submit.  By default, these will all use the  tag for display.  However, with the exception of image, you can specify custom html via the content option.  This will result in the  being used for display and the content being inserted.  Content can contain simple angular bindings so that you can bind to various properties of the layout.  For example:\n\nbutton-layout.json\n\n[{\n    \"type\": \"submit\",\n    \"title\": \"Submit\",\n    \"content\": \"{{ options.title }}\",\n    \"icon\": {\n        \"src\": \"/assets/submit.png\",\n        \"width\": 30,\n        \"height\": 30,\n        \"alt\": \"Checkmark\"\n    }\n}]\n\nwill result in\n\nbutton.html\n\n\n    \n    Submit\n\n\nHere you can see we are specifying that the button should contain an image via the content options.  The template binds to the properties of the icon option which results in an image tag being rendered.  The icon option is also used when redering a simple button of type image.\nWe can also respond to events such as a click.  To do this, we must first bind an event handler to the jsf component\n\nform.component.html\n\n\n\nThen we add a layout with a couple of buttons.  The first button will run an internal command where as the second will run a command specified by layout.onClick.\n\nbuttons-layout.json\n\n[{\n    \"type\": \"button\",\n    \"id\": \"button1\",\n    \"title\": \"Open dialog\"\n}, {\n    \"type\": \"button\",\n    \"id\": \"button2\",\n    \"title\": \"Open Google\",\n    \"onClick\": \"window.open('http://www.google.com/');\"\n}]\n\nLastly, we specify our onClick handler in our component.\n\nform.component.ts\n\nimport layout from './buttons-layout.json';\nimport { DataEvent } from 'ngx-json-schema-form';\n\n@Component({\n    templateUrl: './form.component.html',\n    ...\n})\nexport class LayoutComponent {\n    layout: Array = layout;\n\n    onClick(event: DataEvent): void {\n        if (event.data.id === 'button1') {\n            openDialog(event);\n        } else if (event.data.id === 'button2') {\n            // Run some external code\n            const fn = new Function('event', event.data.onClick);\n            fn(event);\n        }\n    }\n    ...\n}\n\nWhen a button is clicked, the event will bubble up to the jsf form component to which we bound our onClick handler.  Using event metadata (click.data.layout), we can specify that only events in which a target that has an associated data property of layout will trigger the event.  This association is handled internally when a widget is created and acts similarly to jQuery's $.data.  When the event handler is triggered, the layout is passed down with the event via event.data , allowing us to inspect which layout item triggered the event and act accordingly.  In the case of \"button1\", we run and internal method openDialog in order to open an angular dialog component.  With \"button2\" however, we run the external javascript passed in via the onClick property in the layout in order to open a popup dialog to Google.\nNote: running external javascript is usually not a good choice, therefore the jsf library does not internally run the onClick handler.  You will need to handle the conversion from text to javascript yourself and run the code.\nHidden\nHidden widgets are as you expect, then render an .  This is the default for any layout item that can't be propley matched.  For the most part, hidden widgets wont be needed as you simply don't need to render them, their data never changes.  However, in the event that you need to do an actual form submittal, hidden inputs may be necessary and are therfore included.\n\n\n\n\n\nJSON Schema\nLayout\nForm Options\nWidgets\nOptions\nButton\nHidden\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
