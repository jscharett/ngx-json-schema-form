var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/ButtonComponent.html",[0,0.766,1,1.053]],["body/components/ButtonComponent.html",[0,1.142,1,1.693,2,1.691,3,0.335,4,0.39,5,1.224,6,1.727,7,1.101,8,1.727,9,0.335,10,0.391,11,0.17,12,0.17,13,1.691,14,2.809,15,0.892,16,3.186,17,2.961,18,2.728,19,1.332,20,1.53,21,2.834,22,2.593,23,2.728,24,2.728,25,4.447,26,2.113,27,3.881,28,0.53,29,1.11,30,2.386,31,2.386,32,2.386,33,2.734,34,1.743,35,0.996,36,2.113,37,1.886,38,2.386,39,2.386,40,1.743,41,1.101,42,2.728,43,1.693,44,2.331,45,1.88,46,1.144,47,2.809,48,0.996,49,0.041,50,1.03,51,0.658,52,0.794,53,1.693,54,3.88,55,1.975,56,0.709,57,1.975,58,1.569,59,1.975,60,1.101,61,1.727,62,1.727,63,1.524,64,1.975,65,1.727,66,1.272,67,1.727,68,0.803,69,0.803,70,1.101,71,0.991,72,1.975,73,1.727,74,1.727,75,0.509,76,1.975,77,1.975,78,1.727,79,1.975,80,0.991,81,1.975,82,0.666,83,0.448,84,1.569,85,1.365,86,1.53,87,0.283,88,0.283,89,1.975,90,1.365,91,2.809,92,1.975,93,2.809,94,1.224,95,1.37,96,1.727,97,2.949,98,1.727,99,1.727,100,0.991,101,1.727,102,1.224,103,1.727,104,1.101,105,1.727,106,1.727,107,1.727,108,0.019,109,0.026,110,0.019]],["title/interfaces/Data.html",[56,0.476,111,1.3]],["body/interfaces/Data.html",[3,0.385,4,0.448,7,1.264,9,0.385,10,0.325,11,0.114,12,0.114,28,0.385,29,1.218,44,1.567,45,1.87,49,0.042,51,0.569,56,0.937,60,1.264,63,1.805,69,0.922,71,1.504,75,0.773,80,1.504,82,0.662,83,0.514,84,1.684,85,1.567,87,0.481,88,0.325,108,0.022,109,0.029,110,0.022,111,1.406,112,1.983,113,2.267,114,2.267,115,0.979,116,3.917,117,3.498,118,1.756,119,1.567,120,2.267,121,2.267,122,2.62,123,2.648,124,3.498,125,1.857,126,1.517,127,2.267,128,2.648,129,2.648,130,2.995,131,2.648,132,1.983,133,1.756,134,1.983,135,3.498,136,1.756,137,0.741,138,1.983,139,2.648,140,2.648,141,1.406,142,2.648,143,2.648,144,2.648,145,2.648,146,2.267,147,2.648,148,2.648,149,3.354,150,2.648,151,2.62,152,1.791,153,2.648,154,2.648,155,3.917,156,2.648,157,3.917,158,2.648,159,2.648,160,2.267,161,2.648,162,2.648,163,2.648,164,2.648,165,2.648]],["title/injectables/DataEventPluginService.html",[115,0.685,134,1.834]],["body/injectables/DataEventPluginService.html",[3,0.325,4,0.378,7,1.488,9,0.325,10,0.502,11,0.176,12,0.176,15,0.625,28,0.325,29,1.085,35,0.974,41,1.066,44,1.845,45,2.02,46,0.968,48,1.122,49,0.042,50,0.895,51,0.615,52,0.895,56,0.909,60,1.488,63,1.86,68,1.085,69,0.778,71,1.34,75,0.934,80,1.669,82,0.607,83,0.434,84,1.819,85,1.322,87,0.441,88,0.274,108,0.019,109,0.026,110,0.019,111,1.186,113,3.498,114,1.912,115,0.872,116,3.883,117,3.589,118,1.481,119,1.322,120,1.912,121,1.912,122,2.334,123,2.233,124,3.883,125,2.061,126,1.504,127,2.668,128,3.116,129,3.116,130,3.498,131,3.116,132,1.673,133,1.481,134,2.334,135,4.084,136,1.481,137,0.625,138,2.334,139,3.116,140,3.116,141,1.654,142,2.233,143,2.233,144,2.233,145,3.116,146,2.668,147,3.116,148,3.116,149,3.498,150,3.883,151,3.059,152,1.669,153,2.233,154,2.233,155,3.589,156,2.233,157,3.589,158,2.233,159,2.233,160,1.912,161,2.233,162,2.233,163,2.233,164,2.233,165,2.233,166,1.186,167,3.796,168,3.116,169,2.72,170,3.796,171,2.72,172,2.72]],["title/injectables/ElementDataStorageService.html",[45,1.169,115,0.685]],["body/injectables/ElementDataStorageService.html",[3,0.294,4,0.342,7,1.773,9,0.294,10,0.483,11,0.19,12,0.17,15,0.566,28,0.294,35,0.908,45,1.773,46,0.926,48,1.162,49,0.042,50,0.926,51,0.54,52,0.926,56,0.929,60,1.386,66,1.426,68,1.294,75,1.008,82,0.342,83,0.393,84,2.048,87,0.248,88,0.248,95,1.597,108,0.017,109,0.024,110,0.017,115,0.813,126,1.586,132,1.514,133,1.341,137,0.566,138,2.175,141,1.972,149,3.907,151,2.175,152,1.248,166,1.073,173,4.792,174,2.462,175,4.095,176,3.16,177,2.486,178,2.904,179,2.175,180,2.175,181,3.537,182,3.537,183,3.537,184,3.537,185,3.537,186,3.537,187,2.486,188,2.904,189,1.719,190,3.537,191,2.904,192,3.537,193,2.486,194,2.904,195,3.537,196,2.904,197,4.524,198,3.537,199,3.537,200,3.537,201,2.486,202,4.524,203,2.545,204,3.537,205,1.719,206,3.537,207,3.027,208,2.462,209,4.988,210,4.988,211,4.988,212,3.537,213,2.462,214,3.537,215,3.537,216,2.462,217,3.537,218,2.462,219,2.486,220,0.869,221,2.462,222,1.719,223,3.537,224,3.537,225,2.462,226,2.462,227,2.462,228,4.139,229,2.462,230,1.514,231,2.462,232,4.524,233,2.462,234,2.462,235,1.731,236,2.462]],["title/components/HiddenComponent.html",[0,0.766,100,1.053]],["body/components/HiddenComponent.html",[0,1.147,1,1,2,1.702,3,0.338,4,0.393,5,1.235,6,1.743,7,1.111,8,1.743,9,0.338,10,0.394,11,0.171,12,0.171,13,1.702,15,0.897,16,3.206,17,2.842,18,2.745,19,1.334,20,1.543,21,2.842,22,2.599,24,2.745,26,2.126,28,0.533,29,1.117,30,2.401,31,2.401,32,2.401,33,2.747,34,1.751,35,1.003,36,2.126,37,1.898,38,2.401,39,2.401,40,1.751,41,1.111,42,2.745,43,1.699,44,2.34,45,1.887,46,1.146,48,1.003,49,0.041,50,1.034,51,0.66,52,0.799,53,1.699,54,3.887,55,1.992,56,0.712,57,1.992,58,1.577,59,1.992,60,1.111,61,1.743,62,1.743,63,1.53,64,1.992,65,1.743,66,1.278,67,1.743,68,0.811,69,0.811,70,1.111,71,1,72,1.992,73,1.743,74,1.743,75,0.514,76,1.992,77,1.992,78,1.743,79,1.992,80,1,81,1.992,82,0.668,83,0.452,84,1.577,85,1.377,86,1.543,87,0.286,88,0.286,89,1.992,94,1.235,95,1.378,96,1.743,97,2.96,98,1.743,99,1.743,100,1.699,101,1.743,102,1.235,103,1.743,104,1.111,105,1.743,106,1.743,107,1.743,108,0.019,109,0.027,110,0.019,237,2.834,238,3.905,239,2.745,240,4.468,241,3.905,242,2.834]],["title/components/JsonSchemaFormComponent.html",[0,0.766,102,1.3]],["body/components/JsonSchemaFormComponent.html",[0,0.784,1,0.532,2,1.059,3,0.18,4,0.209,5,0.657,6,0.926,7,0.591,8,0.926,9,0.18,10,0.491,11,0.205,12,0.21,15,0.702,19,0.346,20,0.82,21,2.237,22,2.1,26,1.323,28,0.364,35,0.624,37,1.181,41,0.952,43,1.237,46,0.976,48,0.624,49,0.042,50,0.717,51,0.536,52,0.497,53,0.858,56,0.717,58,1.587,68,0.695,69,1.175,71,0.858,75,0.635,82,0.624,83,0.24,84,0.858,86,0.82,87,0.152,88,0.152,90,0.732,94,0.657,95,1.237,96,0.926,97,2.154,98,0.926,99,0.926,100,0.532,101,0.926,102,1.527,103,0.926,104,0.591,105,0.926,106,0.926,107,0.926,108,0.01,109,0.017,110,0.01,125,1.675,126,0.479,133,1.323,137,0.805,177,1.059,178,1.237,220,1.587,222,0.732,243,3.426,244,1.237,245,2.154,246,2.775,247,0.952,248,2.43,249,2.43,250,3.103,251,2.463,252,2.43,253,2.43,254,2.43,255,1.995,256,3.504,257,2.43,258,1.494,259,1.995,260,2.43,261,1.059,262,2.43,263,1.995,264,2.463,265,2.43,266,1.995,267,2.43,268,1.237,269,2.43,270,1.995,271,1.995,272,1.708,273,2.147,274,3.054,275,2.147,276,2.43,277,2.43,278,1.494,279,2.528,280,1.96,281,1.995,282,3.504,283,2.43,284,2.702,285,3.155,286,3.155,287,3.155,288,3.155,289,1.237,290,1.507,291,4.767,292,1.507,293,3.913,294,3.913,295,3.913,296,3.351,297,3.913,298,4.767,299,1.507,300,2.43,301,2.43,302,2.43,303,2.43,304,2.43,305,1.507,306,1.507,307,2.43,308,1.708,309,2.43,310,1.995,311,1.507,312,1.878,313,1.507,314,1.995,315,2.43,316,2.43,317,2.43,318,2.43,319,1.507,320,1.507,321,2.43,322,2.43,323,1.507,324,1.507,325,2.596,326,1.995,327,2.507,328,1.237,329,1.237,330,1.507,331,0.82,332,1.059,333,1.507,334,1.059,335,1.237,336,1.995,337,0.926,338,1.507,339,1.507,340,1.507,341,1.507,342,1.237,343,1.507,344,1.237,345,1.507,346,1.507,347,0.657,348,1.237,349,1.507,350,1.507,351,1.507,352,1.507,353,1.507,354,1.507,355,0.82,356,1.059,357,1.507,358,1.237,359,1.507,360,1.237,361,3.054,362,1.507,363,1.507,364,3.054,365,1.507,366,1.507,367,1.507,368,2.43,369,3.054,370,1.507,371,1.507,372,1.507,373,1.507,374,1.507,375,1.507,376,1.507,377,1.507,378,1.507,379,1.507,380,1.507,381,1.507,382,1.507,383,1.507,384,1.507,385,1.507,386,1.507,387,3.155,388,1.507,389,1.507,390,1.507,391,1.507,392,1.237,393,1.507,394,1.507,395,1.059,396,2.43,397,1.237,398,1.507,399,3.054,400,1.507,401,1.507,402,1.507,403,1.507,404,1.507,405,1.507,406,1.507,407,1.507,408,1.507,409,0.82,410,1.507,411,1.507,412,1.507,413,1.507,414,1.507,415,1.507]],["title/modules/JsonSchemaFormModule.html",[247,1.169,416,1.625]],["body/modules/JsonSchemaFormModule.html",[3,0.416,4,0.484,9,0.416,10,0.352,11,0.159,12,0.176,19,0.801,43,1.749,49,0.042,56,0.556,63,1.108,82,0.768,83,0.556,87,0.352,88,0.352,94,1.519,102,2.619,108,0.024,109,0.031,110,0.024,118,1.898,119,1.694,134,2.756,243,2.451,247,1.366,278,2.756,279,2.698,280,2.159,342,2.862,347,1.519,409,1.898,416,3.164,417,1.898,418,1.898,419,2.698,420,2.144,421,3.483,422,2.862,423,2.862,424,2.862,425,2.862,426,2.862,427,3.204,428,3.151,429,1.898,430,3.486,431,2.756,432,3.151,433,2.451,434,2.756,435,4.482,436,2.451,437,3.486,438,3.486,439,3.486,440,3.486,441,3.486]],["title/injectables/JsonSchemaFormService.html",[43,1.053,115,0.685]],["body/injectables/JsonSchemaFormService.html",[0,1.321,2,0.992,3,0.272,4,0.316,5,2.409,9,0.399,10,0.44,11,0.155,12,0.182,15,0.767,17,1.239,19,1.115,21,1.239,28,0.272,29,0.651,34,1.709,35,0.858,36,1.819,43,1.179,46,0.81,48,1.016,49,0.042,50,0.81,51,0.554,52,0.81,56,0.631,66,1.328,68,1.132,69,1.247,70,1.309,71,0.803,75,0.933,80,1.179,82,0.605,83,0.533,87,0.23,88,0.399,90,2.257,95,1.713,108,0.015,109,0.023,110,0.015,115,0.909,126,1.476,136,1.239,137,0.909,152,1.77,166,0.992,187,1.6,189,2.119,207,2.155,220,1.639,230,2.054,243,3.065,247,1.309,250,1.399,293,1.868,392,1.868,409,1.819,419,1.239,431,1.399,432,1.6,434,2.054,442,2.276,443,3.341,444,3.341,445,3.958,446,5.474,447,2.348,448,2.276,449,3.958,450,3.958,451,4.36,452,4.854,453,3.249,454,3.958,455,4.36,456,3.341,457,3.249,458,2.276,459,2.348,460,2.348,461,3.341,462,2.276,463,2.276,464,3.579,465,3.579,466,3.958,467,3.341,468,3.341,469,1.6,470,2.276,471,2.276,472,2.276,473,1.399,474,2.276,475,2.276,476,3.249,477,2.276,478,2.276,479,2.276,480,3.341,481,1.868,482,2.276,483,2.276,484,2.276,485,2.276,486,2.276,487,3.341,488,2.276,489,2.276,490,2.276,491,2.276,492,2.276,493,1.399,494,2.276,495,2.276,496,2.276,497,2.276,498,2.276,499,2.276,500,3.341,501,2.119,502,2.276,503,2.276,504,2.276,505,2.276,506,2.276,507,2.276,508,2.276,509,2.276,510,2.276,511,2.276,512,2.276,513,2.276,514,2.276,515,2.276,516,2.276]],["title/interfaces/LayoutItem.html",[111,1.3,331,1.625]],["body/interfaces/LayoutItem.html",[3,0.406,4,0.473,9,0.406,10,0.445,11,0.184,12,0.184,19,1.191,28,0.406,29,1.262,34,2.225,46,0.697,49,0.041,50,1.126,51,0.7,52,1.185,56,0.826,66,1.262,75,1.063,87,0.343,108,0.023,109,0.03,110,0.023,111,1.484,112,2.094,125,2.398,138,2.714,176,2.714,201,3.103,205,2.145,207,2.822,331,2.404,355,2.404,447,3.103,493,2.714,517,3.103,518,3.405,519,2.795,520,4.022,521,3.405,522,3.624,523,3.644,524,3.624,525,4.415,526,3.103,527,4.415,528,3.624,529,4.415,530,4.415,531,3.624,532,3.624,533,3.624,534,4.415]],["title/classes/LayoutNode.html",[40,1.169,88,0.301]],["body/classes/LayoutNode.html",[3,0.232,4,0.27,9,0.232,10,0.518,11,0.192,12,0.204,15,0.828,19,1.052,28,0.232,29,0.85,34,1.794,35,0.763,40,2.012,41,0.763,46,1.051,48,0.763,49,0.042,50,1.005,51,0.623,52,0.608,53,1.049,56,0.783,58,1.616,66,0.557,68,1.362,70,0.763,75,1.006,82,0.635,87,0.196,88,0.196,90,0.946,95,1.049,108,0.013,109,0.02,110,0.013,125,1.758,126,1.561,137,1.094,152,1.272,175,2.439,188,2.439,193,1.368,203,1.827,207,1.618,220,1.272,222,1.444,230,1.197,258,1.827,280,2.14,308,2.089,312,2.815,329,1.598,331,3.166,332,1.368,334,1.368,336,3.566,358,2.439,459,2.089,473,1.197,476,3.311,481,2.439,501,1.444,517,3.609,522,2.958,523,3.452,524,2.439,532,2.439,535,1.946,536,2.971,537,2.971,538,2.439,539,2.971,540,2.439,541,4.033,542,2.971,543,2.971,544,2.439,545,2.971,546,2.971,547,2.971,548,2.971,549,2.439,550,2.439,551,2.971,552,3.311,553,2.958,554,2.089,555,3.604,556,3.604,557,3.759,558,2.971,559,2.971,560,1.946,561,2.971,562,2.971,563,2.971,564,2.971,565,1.946,566,2.439,567,2.971,568,2.971,569,2.089,570,2.439,571,2.971,572,1.946,573,1.946,574,2.439,575,2.971,576,1.946,577,1.946,578,1.946,579,1.946,580,2.971,581,1.946,582,1.946,583,1.946,584,1.946,585,2.971,586,1.946,587,1.946,588,2.533,589,1.946,590,1.946,591,1.946,592,1.946,593,1.946,594,1.946,595,4.762,596,1.368,597,1.946,598,1.946,599,1.946,600,2.971,601,1.598,602,1.946,603,2.439,604,1.946,605,1.946,606,1.946,607,1.946,608,1.946,609,1.946,610,1.946,611,1.946,612,1.946,613,1.946,614,1.946,615,2.439,616,1.946,617,1.946,618,1.946,619,1.946,620,1.946,621,1.946,622,1.946,623,1.598,624,1.946,625,1.946,626,1.946,627,1.946,628,1.946,629,1.368,630,1.946,631,1.946,632,1.946,633,1.946,634,1.946,635,1.946,636,1.946,637,1.946,638,1.946]],["title/interfaces/LayoutOptions.html",[111,1.3,588,2.097]],["body/interfaces/LayoutOptions.html",[3,0.348,4,0.405,9,0.348,10,0.402,11,0.141,12,0.141,28,0.348,29,1.139,46,0.597,49,0.042,51,0.678,52,1.207,75,1.062,87,0.294,95,1.406,108,0.02,109,0.027,110,0.02,111,1.271,112,1.794,137,1.12,141,2.425,180,2.449,294,2.395,296,4.172,297,4.872,325,1.589,387,4.701,447,2.8,517,2.8,519,2.395,520,3.27,588,2.8,629,3.426,639,2.917,640,4.001,641,4.001,642,4.001,643,4.001,644,4.188,645,4.001,646,4.001,647,2.917,648,3.983,649,3.983,650,3.983,651,3.983,652,3.983,653,3.983,654,4.188,655,3.983,656,3.983,657,3.983,658,2.917,659,2.917,660,2.395,661,2.917,662,2.395,663,2.917,664,2.395,665,2.917,666,2.395]],["title/injectables/LayoutService.html",[115,0.685,279,1.625]],["body/injectables/LayoutService.html",[3,0.35,4,0.407,9,0.35,10,0.492,11,0.181,12,0.181,15,0.918,28,0.35,35,1.026,40,1.782,41,1.149,46,0.931,48,1.167,49,0.042,50,0.931,51,0.477,52,0.931,53,2.036,58,1.938,60,1.149,66,1.3,68,1.143,69,1.143,75,0.531,82,0.732,83,0.467,84,1.034,87,0.296,88,0.296,108,0.02,109,0.027,110,0.02,115,0.918,126,1.445,136,1.596,137,0.673,152,1.803,166,1.277,176,1.802,179,2.457,205,1.942,220,1.41,222,1.424,235,2.06,246,1.424,258,1.802,279,2.176,280,2.298,289,2.406,331,2.659,332,2.06,334,2.06,501,1.424,552,3.732,554,2.809,601,2.406,654,2.406,667,2.931,668,2.809,669,3.996,670,3.996,671,3.996,672,2.931,673,3.996,674,2.931,675,2.931,676,2.931,677,3.28,678,3.996,679,3.996,680,3.996,681,2.931,682,2.406,683,2.931,684,3.996,685,2.931,686,2.931,687,2.931,688,2.931,689,2.931,690,4.546,691,3.996,692,3.996,693,2.931,694,4.546,695,2.931,696,2.931,697,2.931,698,2.931,699,2.931,700,2.931,701,2.931,702,2.931,703,2.931,704,2.931,705,2.931,706,2.931,707,2.931,708,2.931,709,2.931,710,2.931]],["title/injectables/SchemaService.html",[115,0.685,280,1.3]],["body/injectables/SchemaService.html",[3,0.332,4,0.386,9,0.332,10,0.506,11,0.207,12,0.211,15,1.016,28,0.332,35,0.989,46,0.977,48,0.989,49,0.042,50,0.789,51,0.332,52,0.789,53,0.981,56,0.889,66,1.265,68,1.265,69,0.795,82,0.663,83,0.443,87,0.28,88,0.28,90,1.351,108,0.019,109,0.026,110,0.019,115,0.885,125,1.679,126,1.406,137,0.639,141,1.679,151,1.71,152,1.36,166,1.212,176,3.19,179,2.369,194,3.163,201,1.954,203,2.369,205,2.149,220,1.685,222,1.873,261,3.357,263,2.282,264,2.709,280,1.679,312,2.936,314,3.163,335,3.163,348,3.163,355,1.514,409,2.098,501,1.873,554,2.709,570,3.163,603,2.282,615,3.92,668,2.709,682,2.282,711,2.78,712,3.853,713,4.422,714,3.853,715,2.78,716,2.709,717,3.853,718,2.78,719,2.78,720,2.78,721,2.78,722,3.853,723,2.78,724,2.78,725,3.163,726,3.853,727,4.775,728,3.853,729,3.853,730,3.853,731,2.78,732,2.78,733,2.78,734,2.78,735,2.78,736,3.853,737,2.78,738,2.78,739,2.78,740,3.853,741,3.853,742,2.78,743,2.78,744,2.78,745,2.78,746,2.78,747,2.78,748,2.78,749,2.78,750,2.78,751,2.78,752,2.78,753,2.78,754,2.78]],["title/components/SelectWidgetComponent.html",[0,0.766,104,1.169]],["body/components/SelectWidgetComponent.html",[0,1.185,1,0.792,2,1.441,3,0.268,4,0.311,5,0.978,6,1.38,7,0.879,8,1.38,9,0.268,10,0.396,11,0.164,12,0.164,13,1.71,15,0.759,17,2.63,18,2.324,19,1.341,20,1.222,21,2.63,22,2.542,24,2.324,26,1.8,28,0.468,29,0.945,30,2.033,31,2.033,32,2.033,33,2.413,34,1.538,35,0.849,36,1.8,37,1.606,38,2.413,39,2.413,40,1.809,41,0.879,43,1.528,44,2.104,45,1.697,46,1.104,48,0.849,49,0.042,50,0.945,51,0.635,52,0.677,53,1.629,54,3.677,55,1.577,56,0.626,57,1.577,58,1.629,59,1.577,60,1.538,61,1.38,62,1.38,63,1.376,64,1.577,65,1.38,66,1.122,67,2.033,68,0.642,69,1.122,70,0.879,71,0.792,72,1.577,73,1.38,74,1.38,75,0.407,76,1.577,77,1.577,78,1.38,79,1.577,80,0.792,81,1.577,82,0.641,83,0.358,84,1.385,85,1.09,86,1.222,87,0.226,88,0.226,89,1.577,90,1.09,94,0.978,95,1.167,96,1.38,97,2.663,98,1.38,99,1.38,100,0.792,101,1.38,102,0.978,103,1.38,104,1.697,105,3.151,106,1.38,107,1.38,108,0.015,109,0.023,110,0.015,126,0.713,136,1.222,137,0.759,152,0.792,180,2.033,220,1.629,230,2.033,246,1.09,272,2.324,273,2.759,275,2.759,325,2.137,395,1.577,459,2.324,460,2.324,465,2.714,596,1.577,716,2.324,755,3.925,756,3.925,757,2.244,758,3.306,759,2.324,760,3.306,761,2.714,762,3.925,763,3.306,764,3.925,765,2.244,766,4.33,767,3.51,768,3.306,769,3.306,770,4.616,771,3.306,772,2.714,773,3.306,774,3.306,775,1.842,776,2.244,777,2.244,778,3.306,779,2.244,780,2.244,781,2.244,782,3.925,783,2.244,784,2.244,785,2.244,786,2.244,787,2.244,788,2.244,789,2.244,790,2.244,791,2.244,792,2.244,793,2.244,794,2.244,795,2.244,796,1.842]],["title/classes/Widget.html",[19,0.685,88,0.301]],["body/classes/Widget.html",[3,0.288,4,0.335,9,0.288,10,0.553,11,0.196,12,0.196,13,2.388,15,0.801,17,3.088,19,1.139,22,1.695,28,0.567,29,0.997,30,2.518,31,2.518,32,2.518,33,3.047,34,1.942,35,0.896,36,1.899,37,1.695,38,2.518,39,2.518,40,2.002,41,1.605,42,1.698,43,1.583,44,2.408,45,1.757,46,1.108,48,0.896,49,0.042,50,0.918,51,0.636,52,0.714,53,1.846,56,0.758,58,1.881,60,1.605,61,2.145,62,2.145,63,1.624,65,2.518,66,1.36,67,2.145,68,0.691,69,0.997,70,0.947,71,1.231,73,2.145,74,2.145,75,0.632,78,2.518,80,1.231,82,0.66,83,0.385,84,0.852,85,1.174,86,1.315,87,0.244,88,0.244,108,0.016,109,0.024,110,0.016,137,0.555,203,1.485,205,1.174,220,1.231,272,2.452,273,2.878,275,2.878,325,2.442,326,2.863,337,1.485,395,1.698,397,1.983,473,1.485,501,1.174,759,1.698,772,1.983,775,1.983,796,1.983,797,2.415,798,4.094,799,2.415,800,2.415,801,2.415,802,2.415,803,2.415,804,2.415,805,2.415,806,2.415,807,2.415,808,2.415,809,4.094,810,1.698,811,2.415,812,2.415,813,2.415,814,2.415,815,2.415,816,2.415,817,2.415,818,2.415,819,2.415,820,3.488,821,2.415,822,2.415,823,2.415,824,2.415,825,2.415,826,2.415,827,2.415,828,2.415,829,2.415,830,2.415,831,2.415,832,2.415]],["title/modules/WidgetLibraryModule.html",[247,1.169,427,1.625]],["body/modules/WidgetLibraryModule.html",[1,2.054,3,0.439,4,0.51,9,0.439,10,0.371,11,0.13,12,0.13,13,1.602,49,0.042,82,0.74,83,0.586,87,0.371,88,0.371,94,1.602,100,2.054,104,2.28,108,0.025,109,0.032,110,0.025,247,1.441,278,2.26,347,1.602,417,2.001,418,2.001,419,2.765,420,2.26,421,3.57,427,3.241,428,3.259,429,2.001,431,2.26,432,3.259,433,2.584,434,2.851,436,2.584,810,2.584,833,3.017,834,3.017,835,3.017,836,3.676,837,4.636,838,4.513,839,4.636]],["title/injectables/WidgetLibraryService.html",[115,0.685,767,2.097]],["body/injectables/WidgetLibraryService.html",[0,1.348,1,1.916,3,0.421,4,0.489,9,0.421,10,0.455,11,0.16,12,0.16,13,1.967,15,1.037,19,1.297,23,2.478,28,0.421,35,1.159,40,1.769,46,0.722,48,0.905,49,0.042,50,0.722,51,0.689,52,0.722,75,0.952,82,0.729,83,0.562,87,0.356,88,0.502,92,2.478,100,1.593,108,0.024,109,0.031,110,0.024,115,1.037,126,1.435,132,2.168,133,1.92,137,1.037,141,1.536,166,1.536,179,2.776,220,1.758,239,3.174,429,1.92,436,3.174,493,2.168,501,1.713,668,3.174,725,3.706,767,3.174,840,3.525,841,4.515,842,4.515,843,4.515,844,3.525,845,3.525,846,3.525,847,3.525,848,2.894,849,3.525,850,3.525,851,4.515,852,3.525,853,3.525]],["title/dependencies.html",[418,1.95,854,2.505]],["body/dependencies.html",[11,0.137,12,0.17,49,0.042,58,1.366,83,0.617,108,0.026,109,0.033,110,0.026,118,2.607,119,2.327,258,2.944,261,2.721,264,2.721,268,3.178,270,3.178,271,3.178,328,3.178,418,2.108,433,2.721,469,2.721,596,2.721,810,2.721,855,3.871,856,5.94,857,3.871,858,3.871,859,3.871,860,3.871,861,3.871,862,3.871,863,3.871,864,3.871,865,3.871,866,3.871,867,3.871,868,3.871,869,3.871,870,3.871,871,3.871,872,3.871,873,3.871,874,3.871,875,3.871,876,3.871,877,3.871,878,3.871,879,3.871,880,3.871,881,3.871,882,3.871,883,3.871,884,3.871,885,3.871,886,3.871,887,3.871]],["title/index.html",[28,0.299,888,2.056,889,2.056]],["body/index.html",[0,0.908,5,1.542,11,0.2,12,0.203,49,0.041,82,0.754,83,0.564,87,0.357,88,0.357,108,0.024,109,0.031,110,0.024,118,1.927,119,1.72,177,2.487,189,1.72,219,2.487,245,2.783,246,2.702,247,1.387,250,2.176,251,3.821,337,2.176,347,1.972,355,1.927,356,2.487,360,2.905,416,2.717,419,1.927,420,2.176,431,2.176,434,2.783,526,3.181,569,2.487,716,2.487,890,3.538,891,3.538,892,3.538,893,4.317,894,3.538,895,3.538,896,3.538,897,3.538,898,3.538,899,3.538,900,2.905,901,3.538,902,3.538,903,3.538,904,3.538,905,3.538,906,3.538,907,3.538,908,3.538,909,4.525,910,3.538,911,3.538,912,3.538,913,4.525,914,2.905,915,3.538,916,3.538,917,3.538,918,3.538,919,3.538,920,3.538,921,3.538,922,3.538,923,4.525,924,4.989,925,3.538,926,3.538,927,2.905,928,2.905,929,2.487,930,3.538,931,2.905,932,3.538,933,3.538,934,3.538,935,3.538,936,3.538,937,3.538,938,3.538,939,3.538]],["title/license.html",[888,2.056,889,2.056,940,2.056]],["body/license.html",[11,0.18,12,0.18,49,0.032,63,1.171,80,1.3,108,0.025,109,0.032,110,0.025,189,2.256,245,2.854,246,2.47,255,3.023,284,2.589,327,3.023,347,1.605,574,3.811,893,4.173,900,3.023,929,2.589,940,3.023,941,3.683,942,5.336,943,4.642,944,4.642,945,3.683,946,3.683,947,3.683,948,3.683,949,3.023,950,3.683,951,3.683,952,3.683,953,3.683,954,4.642,955,3.683,956,3.683,957,3.683,958,3.683,959,3.023,960,3.683,961,5.82,962,3.683,963,3.683,964,3.683,965,5.083,966,3.683,967,4.642,968,3.023,969,3.683,970,3.683,971,3.683,972,3.683,973,3.683,974,3.683,975,3.683,976,4.642,977,3.683,978,3.683,979,3.683,980,3.683,981,4.642,982,4.642,983,3.023,984,3.683,985,3.683,986,3.683,987,3.683,988,3.683,989,3.683,990,3.683,991,3.683,992,3.683,993,3.683,994,3.683,995,3.683,996,3.683,997,3.683,998,3.683,999,3.683,1000,3.683,1001,3.683,1002,3.683,1003,3.683,1004,3.683,1005,3.683,1006,3.683,1007,3.683,1008,3.683,1009,3.683]],["title/modules.html",[417,2.202]],["body/modules.html",[49,0.036,108,0.031,109,0.036,110,0.031,119,2.589,416,2.52,417,2.52,427,2.52,1010,5.327,1011,5.327,1012,5.327]],["title/overview.html",[1013,3.32]],["body/overview.html",[1,2.018,2,1.624,43,1.804,49,0.041,94,1.624,100,2.018,102,2.598,104,2.241,108,0.025,109,0.032,110,0.025,112,2.291,166,1.624,247,1.46,278,2.291,279,2.783,280,2.227,347,1.624,416,3.148,417,2.029,418,2.029,419,2.029,420,2.291,421,2.619,422,3.059,423,3.059,424,3.059,425,3.059,426,3.059,427,3.277,428,3.287,429,2.029,473,2.291,833,3.059,834,3.059,835,3.059,1013,3.059,1014,3.839,1015,3.059,1016,3.726,1017,3.059]],["title/miscellaneous/typealiases.html",[1018,1.54,1019,3.581]],["body/miscellaneous/typealiases.html",[10,0.457,11,0.16,12,0.16,28,0.54,49,0.036,51,0.54,56,0.722,63,1.819,108,0.031,109,0.036,110,0.031,113,3.183,114,3.698,120,3.183,121,3.183,122,3.234,1018,2.784,1020,4.528,1021,4.528]],["title/miscellaneous/variables.html",[1018,1.54,1022,2.939]],["body/miscellaneous/variables.html",[1,1.572,2,1.941,10,0.449,11,0.158,12,0.158,13,1.941,19,1.023,28,0.531,49,0.04,51,0.531,66,1.273,70,1.745,100,1.572,104,1.745,108,0.03,109,0.035,110,0.03,189,2.164,677,3.656,838,4.277,1018,2.738,1022,3.656,1023,4.453,1024,4.453,1025,4.453]],["title/additional-documentation/introduction.html",[1026,2.505,1027,2.505,1028,2.505]],["body/additional-documentation/introduction.html",[0,1.343,3,0.208,5,1.66,7,1.071,9,0.208,11,0.162,12,0.199,15,0.875,19,0.628,20,0.951,22,2.009,23,3.504,26,0.951,29,1.253,34,1.62,37,0.849,49,0.041,50,0.897,51,0.624,53,0.965,56,0.537,58,1.922,63,1.507,69,0.5,70,1.071,71,0.617,75,0.61,80,0.617,82,0.658,87,0.34,88,0.34,92,2.905,95,1.188,108,0.023,109,0.019,110,0.019,122,1.681,125,1.191,127,2.677,130,2.905,137,0.628,141,1.467,146,1.228,152,0.617,160,1.228,168,1.434,180,2.07,187,3.22,189,1.328,191,2.244,193,1.228,196,3.393,205,2.226,207,0.951,219,1.228,222,0.849,235,1.228,239,2.905,244,1.434,245,1.074,246,2.422,250,1.074,251,2.677,259,2.764,266,2.764,281,2.244,284,1.228,285,1.434,286,1.434,287,2.244,288,2.244,295,2.244,296,2.367,308,1.228,310,2.764,312,2.695,325,0.951,337,1.681,344,2.244,347,0.761,355,1.488,356,1.228,409,1.488,429,0.951,453,2.244,457,2.244,460,1.921,464,1.434,469,1.228,493,2.342,523,1.921,526,1.921,528,2.764,531,2.764,533,1.434,538,1.434,540,1.434,544,1.434,549,1.434,550,1.434,553,3.126,557,3.76,566,2.244,569,1.921,623,2.244,629,3.22,640,2.244,641,2.244,642,2.244,643,2.244,644,2.764,645,2.244,646,2.244,660,1.434,662,1.434,664,1.434,666,1.434,759,1.921,761,1.434,848,3.393,914,2.244,927,3.598,928,2.244,929,1.228,931,1.434,949,1.434,959,2.244,968,1.434,983,1.434,1014,1.434,1015,1.434,1017,1.434,1029,1.747,1030,1.747,1031,4.133,1032,1.747,1033,3.808,1034,2.733,1035,2.733,1036,2.733,1037,2.733,1038,2.733,1039,2.733,1040,2.733,1041,1.747,1042,4.58,1043,1.747,1044,1.747,1045,1.747,1046,1.747,1047,1.747,1048,1.747,1049,3.367,1050,1.747,1051,1.747,1052,1.747,1053,1.747,1054,1.747,1055,1.747,1056,1.747,1057,2.733,1058,1.747,1059,3.367,1060,1.747,1061,1.747,1062,1.747,1063,1.747,1064,1.747,1065,2.733,1066,1.747,1067,1.747,1068,1.747,1069,1.747,1070,1.747,1071,1.747,1072,4.383,1073,1.747,1074,2.733,1075,1.747,1076,1.747,1077,1.747,1078,1.747,1079,2.733,1080,1.747,1081,1.747,1082,1.747,1083,2.733,1084,2.733,1085,1.747,1086,1.747,1087,1.747,1088,1.747,1089,3.808,1090,2.733,1091,1.747,1092,1.747,1093,3.367,1094,3.808,1095,1.747,1096,2.733,1097,1.747,1098,1.747,1099,1.747,1100,1.747,1101,2.733,1102,1.747,1103,1.747,1104,1.747,1105,1.747,1106,1.747,1107,1.747,1108,1.747,1109,2.733,1110,2.733,1111,1.747,1112,1.747,1113,1.747,1114,1.747,1115,1.747,1116,1.747,1117,1.747,1118,1.747,1119,1.747,1120,1.747,1121,1.747,1122,1.747,1123,2.733,1124,1.747,1125,1.747,1126,2.733,1127,1.747,1128,1.747,1129,1.747,1130,4.58,1131,1.747,1132,1.747,1133,3.367,1134,3.808,1135,3.367,1136,2.733,1137,4.133,1138,1.747,1139,1.747,1140,1.747,1141,2.733,1142,1.747,1143,3.367,1144,2.733,1145,1.747,1146,1.747,1147,1.747,1148,1.747,1149,1.747,1150,1.747,1151,1.747,1152,1.747,1153,1.747,1154,1.747,1155,1.747,1156,2.733,1157,1.747,1158,1.747,1159,2.733,1160,1.747,1161,1.747,1162,1.747,1163,1.747,1164,1.747,1165,1.747,1166,1.747,1167,1.747,1168,1.747,1169,1.747,1170,1.747,1171,1.747,1172,1.747,1173,1.747,1174,1.747,1175,1.747,1176,1.747,1177,1.747,1178,1.747,1179,1.747,1180,1.747,1181,1.747]]],"invertedIndex":[["",{"_index":49,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["0",{"_index":235,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"injectables/LayoutService.html":{},"additional-documentation/introduction.html":{}}}],["0.0.36",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["0.11.0",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["0.3.9",{"_index":882,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":878,"title":{},"body":{"dependencies.html":{}}}],["0.9.1",{"_index":887,"title":{},"body":{"dependencies.html":{}}}],["07/schema",{"_index":1037,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["1",{"_index":691,"title":{},"body":{"injectables/LayoutService.html":{}}}],["1.9.0",{"_index":885,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":1069,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["2",{"_index":1014,"title":{},"body":{"overview.html":{},"additional-documentation/introduction.html":{}}}],["2.5.4",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["2014",{"_index":948,"title":{},"body":{"license.html":{}}}],["2019",{"_index":953,"title":{},"body":{"license.html":{}}}],["3",{"_index":1017,"title":{},"body":{"overview.html":{},"additional-documentation/introduction.html":{}}}],["30",{"_index":1101,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["333",{"_index":1088,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["4",{"_index":1015,"title":{},"body":{"overview.html":{},"additional-documentation/introduction.html":{}}}],["4.1.2",{"_index":877,"title":{},"body":{"dependencies.html":{}}}],["4.14.136",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["4.17.14",{"_index":879,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":1016,"title":{},"body":{"overview.html":{}}}],["6.0.1",{"_index":880,"title":{},"body":{"dependencies.html":{}}}],["6.10.0",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["6.5.2",{"_index":883,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":892,"title":{},"body":{"index.html":{}}}],["7.0.0",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["7.0.3",{"_index":869,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["_blank",{"_index":316,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["_layout",{"_index":683,"title":{},"body":{"injectables/LayoutService.html":{}}}],["_parent",{"_index":317,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["_schema",{"_index":734,"title":{},"body":{"injectables/SchemaService.html":{}}}],["_self",{"_index":315,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["_top",{"_index":318,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["above",{"_index":900,"title":{},"body":{"index.html":{},"license.html":{}}}],["abstract",{"_index":811,"title":{},"body":{"classes/Widget.html":{}}}],["abstractcontrol",{"_index":78,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["accessing",{"_index":580,"title":{},"body":{"classes/LayoutNode.html":{}}}],["accesskey",{"_index":640,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["accessors",{"_index":554,"title":{},"body":{"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{}}}],["accordingly",{"_index":1163,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["ace",{"_index":270,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"dependencies.html":{}}}],["act",{"_index":1162,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["action",{"_index":284,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"license.html":{},"additional-documentation/introduction.html":{}}}],["acts",{"_index":540,"title":{},"body":{"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["actual",{"_index":1079,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["actual_component",{"_index":107,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["add",{"_index":219,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["addeventlistener",{"_index":167,"title":{},"body":{"injectables/DataEventPluginService.html":{}}}],["addeventlistener(element",{"_index":148,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["addition",{"_index":265,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["additional",{"_index":1026,"title":{"additional-documentation/introduction.html":{}},"body":{}}],["adds",{"_index":145,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["afterviewinit",{"_index":798,"title":{},"body":{"classes/Widget.html":{}}}],["against",{"_index":350,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["age",{"_index":1042,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["ajv",{"_index":261,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{},"dependencies.html":{}}}],["ajv.ajv",{"_index":744,"title":{},"body":{"injectables/SchemaService.html":{}}}],["ajv.validatefunction",{"_index":749,"title":{},"body":{"injectables/SchemaService.html":{}}}],["ajv]{@link",{"_index":381,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["aliases",{"_index":1020,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allerrors",{"_index":745,"title":{},"body":{"injectables/SchemaService.html":{}}}],["allowing",{"_index":549,"title":{},"body":{"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["allows",{"_index":194,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"injectables/SchemaService.html":{}}}],["along",{"_index":539,"title":{},"body":{"classes/LayoutNode.html":{}}}],["already",{"_index":932,"title":{},"body":{"index.html":{}}}],["alt",{"_index":660,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["and/or",{"_index":255,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"license.html":{}}}],["angular",{"_index":251,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["angular/animations",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":433,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":83,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/flex",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":810,"title":{},"body":{"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":863,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":118,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"modules/JsonSchemaFormModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/router",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["angular2",{"_index":950,"title":{},"body":{"license.html":{}}}],["angular]{@link",{"_index":377,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["angularjs",{"_index":363,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["another",{"_index":262,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["aot",{"_index":1109,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["api",{"_index":358,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{}}}],["app.component",{"_index":925,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":924,"title":{},"body":{"index.html":{}}}],["application",{"_index":922,"title":{},"body":{"index.html":{}}}],["application/x",{"_index":300,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["applied",{"_index":139,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["appmodule",{"_index":926,"title":{},"body":{"index.html":{}}}],["appropriate",{"_index":534,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["args",{"_index":740,"title":{},"body":{"injectables/SchemaService.html":{}}}],["arising",{"_index":1007,"title":{},"body":{"license.html":{}}}],["array",{"_index":53,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"additional-documentation/introduction.html":{}}}],["array.from(mappedpointers",{"_index":710,"title":{},"body":{"injectables/LayoutService.html":{}}}],["array.from(schemapointers.keys",{"_index":707,"title":{},"body":{"injectables/LayoutService.html":{}}}],["arrayitem",{"_index":634,"title":{},"body":{"classes/LayoutNode.html":{}}}],["arrayitemtype",{"_index":635,"title":{},"body":{"classes/LayoutNode.html":{}}}],["arrays",{"_index":186,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["assets/submit.png",{"_index":1100,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["associated",{"_index":80,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"license.html":{},"additional-documentation/introduction.html":{}}}],["association",{"_index":1154,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["attemtps",{"_index":894,"title":{},"body":{"index.html":{}}}],["attribute",{"_index":294,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutOptions.html":{}}}],["attributes",{"_index":180,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"interfaces/LayoutOptions.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/introduction.html":{}}}],["augmenting",{"_index":543,"title":{},"body":{"classes/LayoutNode.html":{}}}],["authors",{"_index":997,"title":{},"body":{"license.html":{}}}],["autocomplete",{"_index":285,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{}}}],["automatically",{"_index":201,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"interfaces/LayoutItem.html":{},"injectables/SchemaService.html":{}}}],["availablepointers",{"_index":706,"title":{},"body":{"injectables/LayoutService.html":{}}}],["based",{"_index":716,"title":{},"body":{"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"index.html":{}}}],["basic",{"_index":915,"title":{},"body":{"index.html":{}}}],["basic.component.ts",{"_index":1052,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["basic_widgets",{"_index":838,"title":{},"body":{"modules/WidgetLibraryModule.html":{},"miscellaneous/variables.html":{}}}],["basiccomponent",{"_index":1053,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["become",{"_index":1063,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["begin",{"_index":916,"title":{},"body":{"index.html":{}}}],["being",{"_index":1094,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["beta.24",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["bind",{"_index":457,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"additional-documentation/introduction.html":{}}}],["bindings",{"_index":1097,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["binds",{"_index":1105,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["boolean",{"_index":141,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"interfaces/LayoutOptions.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{}}}],["bootstrap",{"_index":420,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"index.html":{},"overview.html":{}}}],["both",{"_index":338,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["bound",{"_index":1151,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["brace",{"_index":268,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"dependencies.html":{}}}],["brace]{@link",{"_index":385,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["bring",{"_index":907,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1012,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":119,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"modules/JsonSchemaFormModule.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browserified",{"_index":269,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["browsermodule",{"_index":923,"title":{},"body":{"index.html":{}}}],["bubble",{"_index":1150,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["builder",{"_index":891,"title":{},"body":{"index.html":{}}}],["buildlayout(layout",{"_index":686,"title":{},"body":{"injectables/LayoutService.html":{}}}],["bunch",{"_index":935,"title":{},"body":{"index.html":{}}}],["button",{"_index":23,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{}}}],["button'},{'name",{"_index":99,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["button.component.html",{"_index":27,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button.component.scss",{"_index":25,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button.html",{"_index":1103,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["button1",{"_index":1133,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["button2",{"_index":1135,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["buttoncomponent",{"_index":1,"title":{"components/ButtonComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["buttons",{"_index":1089,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["can't",{"_index":1174,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["care",{"_index":1065,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["case",{"_index":1164,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["catch",{"_index":701,"title":{},"body":{"injectables/LayoutService.html":{}}}],["cb",{"_index":739,"title":{},"body":{"injectables/SchemaService.html":{}}}],["change",{"_index":67,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["changedetection",{"_index":276,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["changedetectionstrategy",{"_index":324,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":277,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["changes",{"_index":759,"title":{},"body":{"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"additional-documentation/introduction.html":{}}}],["changes.hasownproperty('schema",{"_index":398,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["changes.layoutnode",{"_index":819,"title":{},"body":{"classes/Widget.html":{}}}],["charge",{"_index":958,"title":{},"body":{"license.html":{}}}],["check",{"_index":909,"title":{},"body":{"index.html":{}}}],["checkmark",{"_index":1102,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["choice",{"_index":1170,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["claim",{"_index":1000,"title":{},"body":{"license.html":{}}}],["class",{"_index":88,"title":{"classes/LayoutNode.html":{},"classes/Widget.html":{}},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["classes",{"_index":473,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"classes/Widget.html":{},"overview.html":{}}}],["click",{"_index":1128,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["click.data.layout",{"_index":1152,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["clicked",{"_index":1149,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["client",{"_index":248,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["clonedeep",{"_index":329,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{}}}],["clonedeep(this.layoutitem",{"_index":619,"title":{},"body":{"classes/LayoutNode.html":{}}}],["clonedeep(this.schema",{"_index":415,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["cluster_jsonschemaformmodule",{"_index":422,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"overview.html":{}}}],["cluster_jsonschemaformmodule_declarations",{"_index":423,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"overview.html":{}}}],["cluster_jsonschemaformmodule_exports",{"_index":426,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"overview.html":{}}}],["cluster_jsonschemaformmodule_imports",{"_index":425,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"overview.html":{}}}],["cluster_jsonschemaformmodule_jsonschemaformcomponent_providers",{"_index":424,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"overview.html":{}}}],["cluster_widgetlibrarymodule",{"_index":833,"title":{},"body":{"modules/WidgetLibraryModule.html":{},"overview.html":{}}}],["cluster_widgetlibrarymodule_declarations",{"_index":834,"title":{},"body":{"modules/WidgetLibraryModule.html":{},"overview.html":{}}}],["cluster_widgetlibrarymodule_exports",{"_index":835,"title":{},"body":{"modules/WidgetLibraryModule.html":{},"overview.html":{}}}],["code",{"_index":1144,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["collector",{"_index":200,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["color",{"_index":1087,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["command",{"_index":1059,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["commonmodule",{"_index":432,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"modules/WidgetLibraryModule.html":{}}}],["compatible",{"_index":359,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["compilation",{"_index":1110,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["compile",{"_index":1111,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["compiler",{"_index":464,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"additional-documentation/introduction.html":{}}}],["compiler,private",{"_index":491,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["compiler.compilemoduleandallcomponentssync(runtimecomponentmodule",{"_index":484,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["compiles",{"_index":449,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["compileschema",{"_index":751,"title":{},"body":{"injectables/SchemaService.html":{}}}],["compiletemplate",{"_index":443,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["compiletemplate(template",{"_index":445,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["component",{"_index":0,"title":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"injectables/WidgetLibraryService.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["component's",{"_index":930,"title":{},"body":{"index.html":{}}}],["component_template",{"_index":98,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["componentfactory",{"_index":769,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["componentfactoryresolver",{"_index":766,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["componentref",{"_index":465,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{}}}],["componentref.destroy",{"_index":516,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["componentref.hostview.detectchanges",{"_index":514,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["componentref.location.nativeelement).innerhtml",{"_index":489,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["conditions",{"_index":980,"title":{},"body":{"license.html":{}}}],["connection",{"_index":1008,"title":{},"body":{"license.html":{}}}],["console.error('buildlayout",{"_index":703,"title":{},"body":{"injectables/LayoutService.html":{}}}],["console.error(layoutitem",{"_index":705,"title":{},"body":{"injectables/LayoutService.html":{}}}],["console.warn(this",{"_index":403,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["const",{"_index":152,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/introduction.html":{}}}],["constructor",{"_index":41,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/DataEventPluginService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["constructor(componentfactory",{"_index":765,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["constructor(elementdatastorage",{"_index":169,"title":{},"body":{"injectables/DataEventPluginService.html":{}}}],["constructor(jsf",{"_index":42,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"classes/Widget.html":{}}}],["constructor(layoutitem",{"_index":558,"title":{},"body":{"classes/LayoutNode.html":{}}}],["constructor(private",{"_index":136,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{}}}],["constructor(protected",{"_index":816,"title":{},"body":{"classes/Widget.html":{}}}],["constructor(schemaservice",{"_index":289,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/LayoutService.html":{}}}],["consumption",{"_index":904,"title":{},"body":{"index.html":{}}}],["contain",{"_index":191,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"additional-documentation/introduction.html":{}}}],["container",{"_index":525,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["contains",{"_index":536,"title":{},"body":{"classes/LayoutNode.html":{}}}],["content",{"_index":557,"title":{},"body":{"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["context",{"_index":446,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["contianer",{"_index":530,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["contract",{"_index":1004,"title":{},"body":{"license.html":{}}}],["control",{"_index":17,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["control.controlname",{"_index":498,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["control.layoutnode.name",{"_index":499,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["controldisabled",{"_index":30,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["controlname",{"_index":31,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["controls",{"_index":341,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["controlvalue",{"_index":32,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["conversion",{"_index":1171,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["converted",{"_index":188,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"classes/LayoutNode.html":{}}}],["copies",{"_index":976,"title":{},"body":{"license.html":{}}}],["copy",{"_index":574,"title":{},"body":{"classes/LayoutNode.html":{},"license.html":{}}}],["copyright",{"_index":942,"title":{},"body":{"license.html":{}}}],["core",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["couple",{"_index":1129,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["create",{"_index":481,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{}}}],["create(layoutitem",{"_index":564,"title":{},"body":{"classes/LayoutNode.html":{}}}],["createcomponent",{"_index":785,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["createcomponent(template",{"_index":477,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["created",{"_index":761,"title":{},"body":{"components/SelectWidgetComponent.html":{},"additional-documentation/introduction.html":{}}}],["createmodule(component",{"_index":482,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["creates",{"_index":459,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"components/SelectWidgetComponent.html":{}}}],["creation",{"_index":494,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["ctx",{"_index":463,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["current",{"_index":1108,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["currentlayout",{"_index":695,"title":{},"body":{"injectables/LayoutService.html":{}}}],["currently",{"_index":1083,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["custom",{"_index":1092,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["damages",{"_index":1001,"title":{},"body":{"license.html":{}}}],["data",{"_index":56,"title":{"interfaces/Data.html":{}},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/introduction.html":{}}}],["dataevent",{"_index":122,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/introduction.html":{}}}],["dataeventpluginservice",{"_index":134,"title":{"injectables/DataEventPluginService.html":{}},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"modules/JsonSchemaFormModule.html":{}}}],["dataindex",{"_index":38,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["dataname",{"_index":155,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["datapointer",{"_index":556,"title":{},"body":{"classes/LayoutNode.html":{}}}],["datapointermap",{"_index":713,"title":{},"body":{"injectables/SchemaService.html":{}}}],["datatype",{"_index":636,"title":{},"body":{"classes/LayoutNode.html":{}}}],["david",{"_index":945,"title":{},"body":{"license.html":{}}}],["davis",{"_index":947,"title":{},"body":{"license.html":{}}}],["deal",{"_index":964,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1009,"title":{},"body":{"license.html":{}}}],["deault",{"_index":1055,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["declarations",{"_index":419,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"modules/WidgetLibraryModule.html":{},"index.html":{},"overview.html":{}}}],["decorators",{"_index":596,"title":{},"body":{"classes/LayoutNode.html":{},"components/SelectWidgetComponent.html":{},"dependencies.html":{}}}],["default",{"_index":70,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["defaultto",{"_index":589,"title":{},"body":{"classes/LayoutNode.html":{}}}],["defaultto(key",{"_index":616,"title":{},"body":{"classes/LayoutNode.html":{}}}],["defaultto(this.layoutitem.options",{"_index":632,"title":{},"body":{"classes/LayoutNode.html":{}}}],["defaultto(this.schema",{"_index":625,"title":{},"body":{"classes/LayoutNode.html":{}}}],["defaultwidget",{"_index":847,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["define",{"_index":307,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["defined",{"_index":46,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{}}}],["definition",{"_index":571,"title":{},"body":{"classes/LayoutNode.html":{}}}],["definitions",{"_index":728,"title":{},"body":{"injectables/SchemaService.html":{}}}],["degree",{"_index":541,"title":{},"body":{"classes/LayoutNode.html":{}}}],["delete",{"_index":204,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["delete(element",{"_index":206,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["deleted",{"_index":232,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["demo",{"_index":911,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":418,"title":{"dependencies.html":{}},"body":{"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depends",{"_index":256,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["describing",{"_index":61,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["description",{"_index":15,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{}}}],["destroyed",{"_index":394,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["determine",{"_index":138,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"interfaces/LayoutItem.html":{}}}],["determined",{"_index":1050,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["dialog",{"_index":310,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{}}}],["difference",{"_index":681,"title":{},"body":{"injectables/LayoutService.html":{}}}],["directive",{"_index":96,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["directives",{"_index":106,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["dirname",{"_index":641,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["disable",{"_index":74,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["disabled",{"_index":642,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["display",{"_index":927,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["displayed",{"_index":679,"title":{},"body":{"injectables/LayoutService.html":{}}}],["displays",{"_index":16,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{}}}],["distribute",{"_index":973,"title":{},"body":{"license.html":{}}}],["document",{"_index":451,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["document.createelement('template",{"_index":487,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["documentation",{"_index":962,"title":{},"body":{"license.html":{}}}],["documentfragment",{"_index":455,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/introduction.html":{}}}],["don't",{"_index":931,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["down",{"_index":1160,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["due",{"_index":1107,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["dynamic",{"_index":864,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":758,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["ease",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["easy",{"_index":729,"title":{},"body":{"injectables/SchemaService.html":{}}}],["editor",{"_index":271,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"dependencies.html":{}}}],["element",{"_index":84,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["element.addeventlistener(type",{"_index":164,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["element.removeeventlistener(type",{"_index":165,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["elementdatastorage",{"_index":44,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["elementdatastorageservice",{"_index":45,"title":{"injectables/ElementDataStorageService.html":{}},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["elementref",{"_index":809,"title":{},"body":{"classes/Widget.html":{}}}],["enctype",{"_index":286,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{}}}],["entire",{"_index":349,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["entrycomponents",{"_index":837,"title":{},"body":{"modules/WidgetLibraryModule.html":{}}}],["equal",{"_index":1044,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["err",{"_index":702,"title":{},"body":{"injectables/LayoutService.html":{}}}],["error",{"_index":601,"title":{},"body":{"classes/LayoutNode.html":{},"injectables/LayoutService.html":{}}}],["error('missing",{"_index":605,"title":{},"body":{"classes/LayoutNode.html":{}}}],["even",{"_index":495,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["event",{"_index":63,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/HiddenComponent.html":{},"modules/JsonSchemaFormModule.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/introduction.html":{}}}],["event.data",{"_index":160,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"additional-documentation/introduction.html":{}}}],["event.data.id",{"_index":1141,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["event.data.onclick",{"_index":1147,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["event.target).value",{"_index":832,"title":{},"body":{"classes/Widget.html":{}}}],["event_manager_plugins",{"_index":435,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["eventhandler",{"_index":157,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["eventmanager",{"_index":117,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["eventname",{"_index":150,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["eventname.split",{"_index":156,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["events",{"_index":1126,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["everything",{"_index":1057,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["example",{"_index":266,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{}}}],["example.html",{"_index":366,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["examples",{"_index":913,"title":{},"body":{"index.html":{}}}],["examples)]{@link",{"_index":364,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["exception",{"_index":1091,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["expect",{"_index":1173,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["export",{"_index":87,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["exports",{"_index":421,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"overview.html":{}}}],["express",{"_index":988,"title":{},"body":{"license.html":{}}}],["extends",{"_index":18,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["external",{"_index":1143,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["f.componenttype",{"_index":511,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["factory",{"_index":509,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["factory.create(this.injector",{"_index":512,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["false",{"_index":71,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"additional-documentation/introduction.html":{}}}],["favor",{"_index":1118,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["feedback",{"_index":345,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["few",{"_index":1066,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["fields",{"_index":1049,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{}}}],["files",{"_index":963,"title":{},"body":{"license.html":{}}}],["filling",{"_index":346,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["find",{"_index":934,"title":{},"body":{"index.html":{}}}],["fired",{"_index":131,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["first",{"_index":127,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"additional-documentation/introduction.html":{}}}],["firstname",{"_index":1038,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["fitness",{"_index":993,"title":{},"body":{"license.html":{}}}],["flag",{"_index":73,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["fn",{"_index":1145,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["fn(event",{"_index":1148,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["folder",{"_index":939,"title":{},"body":{"index.html":{}}}],["following",{"_index":929,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/introduction.html":{}}}],["form",{"_index":246,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{},"index.html":{},"license.html":{},"additional-documentation/introduction.html":{}}}],["form's",{"_index":360,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"index.html":{}}}],["form'},{'name",{"_index":103,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["form.component",{"_index":439,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["form.component.html",{"_index":281,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{}}}],["form.component.ts",{"_index":244,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{}}}],["form.component.ts:119",{"_index":320,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:124",{"_index":323,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:63",{"_index":313,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:65",{"_index":306,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:70",{"_index":292,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:75",{"_index":299,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:80",{"_index":305,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:85",{"_index":311,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:90",{"_index":319,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:94",{"_index":290,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.module.ts",{"_index":430,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["form.service",{"_index":86,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["form.service.ts",{"_index":442,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["form.service.ts:47",{"_index":458,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["form.service.ts:53",{"_index":462,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["form.service.ts:63",{"_index":448,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["form/src/lib/data",{"_index":113,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"miscellaneous/typealiases.html":{}}}],["form/src/lib/element",{"_index":173,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["form/src/lib/json",{"_index":243,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{}}}],["form/src/lib/layout",{"_index":517,"title":{},"body":{"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{}}}],["form/src/lib/layout.service.ts",{"_index":667,"title":{},"body":{"injectables/LayoutService.html":{}}}],["form/src/lib/layout.service.ts:18",{"_index":676,"title":{},"body":{"injectables/LayoutService.html":{}}}],["form/src/lib/layout.service.ts:20",{"_index":672,"title":{},"body":{"injectables/LayoutService.html":{}}}],["form/src/lib/layout.service.ts:24",{"_index":674,"title":{},"body":{"injectables/LayoutService.html":{}}}],["form/src/lib/schema.service.ts",{"_index":711,"title":{},"body":{"injectables/SchemaService.html":{}}}],["form/src/lib/schema.service.ts:17",{"_index":721,"title":{},"body":{"injectables/SchemaService.html":{}}}],["form/src/lib/schema.service.ts:21",{"_index":719,"title":{},"body":{"injectables/SchemaService.html":{}}}],["form/src/lib/schema.service.ts:30",{"_index":724,"title":{},"body":{"injectables/SchemaService.html":{}}}],["form/src/lib/schema.service.ts:49",{"_index":715,"title":{},"body":{"injectables/SchemaService.html":{}}}],["form/src/lib/widget",{"_index":13,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{}}}],["form]{@link",{"_index":361,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["formcontrol",{"_index":33,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["forminitialized",{"_index":388,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["fragment",{"_index":452,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["free",{"_index":957,"title":{},"body":{"license.html":{}}}],["function",{"_index":151,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"injectables/SchemaService.html":{}}}],["function('event",{"_index":1146,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["furnished",{"_index":979,"title":{},"body":{"license.html":{}}}],["garbage",{"_index":199,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["generatengcontent",{"_index":793,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["generates",{"_index":252,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["get(element",{"_index":212,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["getcontent",{"_index":583,"title":{},"body":{"classes/LayoutNode.html":{}}}],["getdatapointer",{"_index":578,"title":{},"body":{"classes/LayoutNode.html":{}}}],["getdatapointermap",{"_index":723,"title":{},"body":{"injectables/SchemaService.html":{}}}],["getdocumentfragment(componentref",{"_index":486,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["getlayout",{"_index":675,"title":{},"body":{"injectables/LayoutService.html":{}}}],["getlayoutdefinition",{"_index":572,"title":{},"body":{"classes/LayoutNode.html":{}}}],["getname",{"_index":576,"title":{},"body":{"classes/LayoutNode.html":{}}}],["getoptions",{"_index":586,"title":{},"body":{"classes/LayoutNode.html":{}}}],["getpointer(key",{"_index":614,"title":{},"body":{"classes/LayoutNode.html":{}}}],["gets",{"_index":725,"title":{},"body":{"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{}}}],["getschema",{"_index":718,"title":{},"body":{"injectables/SchemaService.html":{}}}],["getting",{"_index":888,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettype",{"_index":581,"title":{},"body":{"classes/LayoutNode.html":{}}}],["getwidget",{"_index":842,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["getwidget(type",{"_index":843,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["given",{"_index":567,"title":{},"body":{"classes/LayoutNode.html":{}}}],["gives",{"_index":545,"title":{},"body":{"classes/LayoutNode.html":{}}}],["global",{"_index":657,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["good",{"_index":1169,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["google",{"_index":1136,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["granted",{"_index":956,"title":{},"body":{"license.html":{}}}],["greater",{"_index":1045,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["ground",{"_index":902,"title":{},"body":{"index.html":{}}}],["handle",{"_index":623,"title":{},"body":{"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["handlebars",{"_index":469,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"dependencies.html":{},"additional-documentation/introduction.html":{}}}],["handlebars.compile(template)({options",{"_index":504,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["handlebars/dist/cjs/handlebars",{"_index":470,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["handled",{"_index":1155,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["handler",{"_index":130,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"additional-documentation/introduction.html":{}}}],["handler(event",{"_index":162,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["handling",{"_index":669,"title":{},"body":{"injectables/LayoutService.html":{}}}],["has(element",{"_index":215,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["haswidget(type",{"_index":853,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["height",{"_index":662,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["held",{"_index":944,"title":{},"body":{"license.html":{}}}],["here",{"_index":914,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["hereby",{"_index":955,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":239,"title":{},"body":{"components/HiddenComponent.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{}}}],["hidden'},{'name",{"_index":101,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["hidden.component.html",{"_index":241,"title":{},"body":{"components/HiddenComponent.html":{}}}],["hidden.component.scss",{"_index":240,"title":{},"body":{"components/HiddenComponent.html":{}}}],["hiddencomponent",{"_index":100,"title":{"components/HiddenComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["holders",{"_index":998,"title":{},"body":{"license.html":{}}}],["html",{"_index":95,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/introduction.html":{}}}],["htmlclass",{"_index":643,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["htmlelement",{"_index":149,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{}}}],["http://json",{"_index":1035,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["http://schemaform.io",{"_index":362,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["http://schemaform.io/examples/bootstrap",{"_index":365,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["http://thlorenz.github.io/brace",{"_index":386,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["http://ulion.github.io/jsonform/playground",{"_index":376,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["https://angular.io",{"_index":378,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["https://developer.mozilla.org/en",{"_index":297,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutOptions.html":{}}}],["https://example.com/person.schema.json",{"_index":1034,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["https://github.com/epoberezkin/ajv",{"_index":382,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["https://github.com/epoberezkin/json",{"_index":384,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["https://github.com/joshfire/jsonform",{"_index":375,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["https://github.com/lodash/lodash",{"_index":380,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["https://github.com/mozilla",{"_index":370,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["https://mozilla",{"_index":372,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["icon",{"_index":644,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["id",{"_index":553,"title":{},"body":{"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["identifier",{"_index":563,"title":{},"body":{"classes/LayoutNode.html":{}}}],["ignore",{"_index":748,"title":{},"body":{"injectables/SchemaService.html":{}}}],["image",{"_index":848,"title":{},"body":{"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{}}}],["implements",{"_index":272,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["implied",{"_index":989,"title":{},"body":{"license.html":{}}}],["import",{"_index":82,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["imported",{"_index":1124,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["imports",{"_index":431,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"modules/WidgetLibraryModule.html":{},"index.html":{}}}],["included",{"_index":983,"title":{},"body":{"license.html":{},"additional-documentation/introduction.html":{}}}],["including",{"_index":967,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":1117,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["incorrect",{"_index":786,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["index",{"_index":28,"title":{"index.html":{}},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":519,"title":{},"body":{"interfaces/LayoutItem.html":{},"interfaces/LayoutOptions.html":{}}}],["individual",{"_index":340,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{}}}],["inherited",{"_index":54,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["initial",{"_index":825,"title":{},"body":{"classes/Widget.html":{}}}],["initialize",{"_index":821,"title":{},"body":{"classes/Widget.html":{}}}],["initializecontrol",{"_index":444,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["initializecontrol(control",{"_index":456,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["initializeform",{"_index":406,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["initializelayout",{"_index":410,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["initializeschema",{"_index":412,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["injectable",{"_index":115,"title":{"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{}},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{}}}],["injectables",{"_index":166,"title":{},"body":{"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{},"overview.html":{}}}],["injecting",{"_index":774,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["injector",{"_index":466,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["innerhtml",{"_index":485,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["input",{"_index":325,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutOptions.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"additional-documentation/introduction.html":{}}}],["input/button/button.component",{"_index":845,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["input/hidden/hidden.component",{"_index":846,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["input[name",{"_index":524,"title":{},"body":{"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{}}}],["input[type='hidden",{"_index":238,"title":{},"body":{"components/HiddenComponent.html":{}}}],["inputs",{"_index":37,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"additional-documentation/introduction.html":{}}}],["inserted",{"_index":1095,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["inside",{"_index":585,"title":{},"body":{"classes/LayoutNode.html":{}}}],["inspect",{"_index":1161,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["install",{"_index":919,"title":{},"body":{"index.html":{}}}],["installing",{"_index":917,"title":{},"body":{"index.html":{}}}],["instances",{"_index":1078,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["integer",{"_index":1047,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["interface",{"_index":111,"title":{"interfaces/Data.html":{},"interfaces/LayoutItem.html":{},"interfaces/LayoutOptions.html":{}},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"interfaces/LayoutItem.html":{},"interfaces/LayoutOptions.html":{}}}],["interfaces",{"_index":112,"title":{},"body":{"interfaces/Data.html":{},"interfaces/LayoutItem.html":{},"interfaces/LayoutOptions.html":{},"overview.html":{}}}],["internal",{"_index":295,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{}}}],["internally",{"_index":1156,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["introduction",{"_index":1028,"title":{"additional-documentation/introduction.html":{}},"body":{}}],["isplainobject",{"_index":330,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["isplainobject(this.schema",{"_index":413,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["isstring",{"_index":590,"title":{},"body":{"classes/LayoutNode.html":{}}}],["isstring(layoutitem",{"_index":608,"title":{},"body":{"classes/LayoutNode.html":{}}}],["isstring(this.layoutitem.content",{"_index":626,"title":{},"body":{"classes/LayoutNode.html":{}}}],["it's",{"_index":899,"title":{},"body":{"index.html":{}}}],["item",{"_index":523,"title":{},"body":{"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["item.data",{"_index":332,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{}}}],["item.data.ts",{"_index":518,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["item.data.ts:16",{"_index":521,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["items",{"_index":637,"title":{},"body":{"classes/LayoutNode.html":{}}}],["itself",{"_index":182,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["james",{"_index":951,"title":{},"body":{"license.html":{}}}],["javascript",{"_index":259,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{}}}],["joshfire's",{"_index":374,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["jquery",{"_index":178,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"components/JsonSchemaFormComponent.html":{}}}],["jquery's",{"_index":1158,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["js",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["jsf",{"_index":22,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"additional-documentation/introduction.html":{}}}],["json",{"_index":11,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["json/path",{"_index":613,"title":{},"body":{"classes/LayoutNode.html":{}}}],["jsonpointers",{"_index":746,"title":{},"body":{"injectables/SchemaService.html":{}}}],["jsonschema",{"_index":369,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["jsonschema7",{"_index":312,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"injectables/SchemaService.html":{},"additional-documentation/introduction.html":{}}}],["jsonschema7definition",{"_index":682,"title":{},"body":{"injectables/LayoutService.html":{},"injectables/SchemaService.html":{}}}],["jsonschemaformcomponent",{"_index":102,"title":{"components/JsonSchemaFormComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"components/SelectWidgetComponent.html":{},"overview.html":{}}}],["jsonschemaformmodule",{"_index":416,"title":{"modules/JsonSchemaFormModule.html":{}},"body":{"modules/JsonSchemaFormModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["jsonschemaformservice",{"_index":43,"title":{"injectables/JsonSchemaFormService.html":{}},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"overview.html":{}}}],["jsonschemaformservice.createcomponent(template",{"_index":506,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["jsonschemaformservice.createmodule(component",{"_index":507,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["jsonschemaformservice.getdocumentfragment(componentref",{"_index":515,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["key",{"_index":207,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["key's",{"_index":214,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["key(object.path",{"_index":612,"title":{},"body":{"classes/LayoutNode.html":{}}}],["key/value",{"_index":209,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["kind",{"_index":987,"title":{},"body":{"license.html":{}}}],["laid",{"_index":1062,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["last",{"_index":1041,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["lastly",{"_index":1139,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["lastname",{"_index":1040,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["layout",{"_index":58,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"dependencies.html":{},"additional-documentation/introduction.html":{}}}],["layout.component.ts",{"_index":1073,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["layout.json",{"_index":1072,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["layout.onclick",{"_index":1132,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["layout.reduce((currentlayout",{"_index":693,"title":{},"body":{"injectables/LayoutService.html":{}}}],["layout.service",{"_index":333,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["layout.type",{"_index":602,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layoutcomponent",{"_index":1074,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["layoutdefinition",{"_index":555,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layoutindex",{"_index":39,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["layoutitem",{"_index":331,"title":{"interfaces/LayoutItem.html":{}},"body":{"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{}}}],["layoutitem.type",{"_index":604,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layoutnode",{"_index":40,"title":{"classes/LayoutNode.html":{}},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{}}}],["layoutnode(item",{"_index":610,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layoutnode.create(layoutitem",{"_index":697,"title":{},"body":{"injectables/LayoutService.html":{}}}],["layoutnode.getpointer(this.layoutitem.key",{"_index":622,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layoutoptions",{"_index":588,"title":{"interfaces/LayoutOptions.html":{}},"body":{"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{}}}],["layouts",{"_index":670,"title":{},"body":{"injectables/LayoutService.html":{}}}],["layoutservice",{"_index":279,"title":{"injectables/LayoutService.html":{}},"body":{"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/LayoutService.html":{},"overview.html":{}}}],["left",{"_index":898,"title":{},"body":{"index.html":{}}}],["legend",{"_index":94,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"components/SelectWidgetComponent.html":{},"modules/WidgetLibraryModule.html":{},"overview.html":{}}}],["liability",{"_index":1002,"title":{},"body":{"license.html":{}}}],["liable",{"_index":999,"title":{},"body":{"license.html":{}}}],["library",{"_index":250,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["library.module",{"_index":437,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["library.module.ts",{"_index":836,"title":{},"body":{"modules/WidgetLibraryModule.html":{}}}],["library.service",{"_index":776,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["library.service.ts",{"_index":840,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["library.service.ts:28",{"_index":844,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["library/container/select",{"_index":755,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["library/index.ts",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["library/input/button/button.component.ts",{"_index":14,"title":{},"body":{"components/ButtonComponent.html":{}}}],["library/input/button/button.component.ts:14",{"_index":47,"title":{},"body":{"components/ButtonComponent.html":{}}}],["library/input/hidden/hidden.component.ts",{"_index":237,"title":{},"body":{"components/HiddenComponent.html":{}}}],["library/input/hidden/hidden.component.ts:16",{"_index":242,"title":{},"body":{"components/HiddenComponent.html":{}}}],["library/widget",{"_index":436,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{}}}],["library/widget.ts",{"_index":797,"title":{},"body":{"classes/Widget.html":{}}}],["library/widget.ts:11",{"_index":800,"title":{},"body":{"classes/Widget.html":{}}}],["library/widget.ts:13",{"_index":801,"title":{},"body":{"classes/Widget.html":{}}}],["library/widget.ts:15",{"_index":802,"title":{},"body":{"classes/Widget.html":{}}}],["library/widget.ts:17",{"_index":803,"title":{},"body":{"classes/Widget.html":{}}}],["library/widget.ts:19",{"_index":804,"title":{},"body":{"classes/Widget.html":{}}}],["library/widget.ts:22",{"_index":808,"title":{},"body":{"classes/Widget.html":{}}}],["library/widget.ts:24",{"_index":807,"title":{},"body":{"classes/Widget.html":{}}}],["library/widget.ts:26",{"_index":806,"title":{},"body":{"classes/Widget.html":{}}}],["library/widget.ts:29",{"_index":799,"title":{},"body":{"classes/Widget.html":{}}}],["library/widget.ts:64",{"_index":805,"title":{},"body":{"classes/Widget.html":{}}}],["license",{"_index":940,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":968,"title":{},"body":{"license.html":{},"additional-documentation/introduction.html":{}}}],["limited",{"_index":990,"title":{},"body":{"license.html":{}}}],["link",{"_index":387,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutOptions.html":{}}}],["list",{"_index":677,"title":{},"body":{"injectables/LayoutService.html":{},"miscellaneous/variables.html":{}}}],["listener",{"_index":147,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["listners",{"_index":391,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["literal",{"_index":447,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"interfaces/LayoutOptions.html":{}}}],["live",{"_index":910,"title":{},"body":{"index.html":{}}}],["load",{"_index":1121,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["location",{"_index":1067,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["lodash",{"_index":258,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"dependencies.html":{}}}],["lodash]{@link",{"_index":379,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["logic",{"_index":537,"title":{},"body":{"classes/LayoutNode.html":{}}}],["login.component.html",{"_index":1081,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["look",{"_index":813,"title":{},"body":{"classes/Widget.html":{}}}],["looking",{"_index":568,"title":{},"body":{"classes/LayoutNode.html":{}}}],["lookup",{"_index":730,"title":{},"body":{"injectables/SchemaService.html":{}}}],["lot",{"_index":906,"title":{},"body":{"index.html":{}}}],["main",{"_index":921,"title":{},"body":{"index.html":{}}}],["make",{"_index":352,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["manager",{"_index":135,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["map",{"_index":176,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{}}}],["map()).get(element",{"_index":226,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["mapkeys",{"_index":591,"title":{},"body":{"classes/LayoutNode.html":{}}}],["mapkeys(pick(this.schema",{"_index":630,"title":{},"body":{"classes/LayoutNode.html":{}}}],["mappeddata",{"_index":223,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["mappeddata.delete(key",{"_index":233,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["mappeddata.set(key",{"_index":227,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["mappeddata.size",{"_index":234,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["mappedlayout",{"_index":692,"title":{},"body":{"injectables/LayoutService.html":{}}}],["mappedlayout.splice(starindex",{"_index":708,"title":{},"body":{"injectables/LayoutService.html":{}}}],["mappedpointers",{"_index":689,"title":{},"body":{"injectables/LayoutService.html":{}}}],["mappedpointers.add(layoutnode.datapointer",{"_index":699,"title":{},"body":{"injectables/LayoutService.html":{}}}],["mapping",{"_index":841,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["matched",{"_index":1176,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["matching",{"_index":109,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["max",{"_index":472,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["means",{"_index":128,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["memoize",{"_index":595,"title":{},"body":{"classes/LayoutNode.html":{}}}],["merchantability",{"_index":992,"title":{},"body":{"license.html":{}}}],["merge",{"_index":971,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":20,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/introduction.html":{}}}],["method",{"_index":287,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{}}}],["methods",{"_index":35,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{}}}],["minimum",{"_index":1048,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["miscellaneous",{"_index":1018,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":941,"title":{},"body":{"license.html":{}}}],["mode",{"_index":1122,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["model",{"_index":254,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["modify",{"_index":970,"title":{},"body":{"license.html":{}}}],["module",{"_index":247,"title":{"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{}},"body":{"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"modules/WidgetLibraryModule.html":{},"index.html":{},"overview.html":{}}}],["module.componentfactories.find((f",{"_index":510,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["moduleref",{"_index":492,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["modules",{"_index":417,"title":{"modules.html":{}},"body":{"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithcomponentfactories",{"_index":467,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["more",{"_index":1080,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["mostly",{"_index":357,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["mozilla's",{"_index":367,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["multi",{"_index":440,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["multipart/form",{"_index":303,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["n",{"_index":1085,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["name",{"_index":50,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{}}}],["native",{"_index":1076,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["necessary",{"_index":1180,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["need",{"_index":187,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"additional-documentation/introduction.html":{}}}],["needed",{"_index":544,"title":{},"body":{"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["never",{"_index":1178,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["new",{"_index":222,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"additional-documentation/introduction.html":{}}}],["newcomponent",{"_index":777,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["newlayout",{"_index":694,"title":{},"body":{"injectables/LayoutService.html":{}}}],["newlayout.concat(layoutnode",{"_index":700,"title":{},"body":{"injectables/LayoutService.html":{}}}],["ng2",{"_index":881,"title":{},"body":{"dependencies.html":{}}}],["ngafterviewinit",{"_index":826,"title":{},"body":{"classes/Widget.html":{}}}],["ngdestroy",{"_index":393,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["ngmodule",{"_index":434,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"modules/WidgetLibraryModule.html":{},"index.html":{}}}],["ngmoduleref",{"_index":468,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["ngonchanges",{"_index":779,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["ngonchanges(changes",{"_index":397,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/Widget.html":{}}}],["ngondestroy",{"_index":400,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["ngoninit",{"_index":395,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["ngx",{"_index":245,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"index.html":{},"license.html":{},"additional-documentation/introduction.html":{}}}],["ngxjsonschemaform",{"_index":890,"title":{},"body":{"index.html":{}}}],["ngzone",{"_index":116,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["node",{"_index":60,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["node.ts",{"_index":535,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:22",{"_index":559,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:40",{"_index":565,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:58",{"_index":573,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:62",{"_index":577,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:66",{"_index":579,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:70",{"_index":582,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:75",{"_index":584,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:79",{"_index":587,"title":{},"body":{"classes/LayoutNode.html":{}}}],["nodes",{"_index":678,"title":{},"body":{"injectables/LayoutService.html":{}}}],["non",{"_index":192,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["noninfringement",{"_index":996,"title":{},"body":{"license.html":{}}}],["normalizes",{"_index":611,"title":{},"body":{"classes/LayoutNode.html":{}}}],["note",{"_index":526,"title":{},"body":{"interfaces/LayoutItem.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["notice",{"_index":981,"title":{},"body":{"license.html":{}}}],["npm",{"_index":918,"title":{},"body":{"index.html":{}}}],["null",{"_index":291,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["number",{"_index":654,"title":{},"body":{"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{}}}],["numerous",{"_index":1082,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["object",{"_index":355,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutItem.html":{},"injectables/SchemaService.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["objects",{"_index":185,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["observable",{"_index":389,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["obtaining",{"_index":960,"title":{},"body":{"license.html":{}}}],["obviously",{"_index":257,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["older",{"_index":1070,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["omit",{"_index":592,"title":{},"body":{"classes/LayoutNode.html":{}}}],["omit(this.layoutitem",{"_index":631,"title":{},"body":{"classes/LayoutNode.html":{}}}],["once",{"_index":1051,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["onchanges",{"_index":273,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["onclick",{"_index":1137,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["onclick(event",{"_index":1140,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["ondestroy",{"_index":274,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["oninit",{"_index":275,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["onto",{"_index":760,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["open",{"_index":1134,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["opendialog",{"_index":1165,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["opendialog(event",{"_index":1142,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["option",{"_index":1093,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["optional",{"_index":52,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{}}}],["options",{"_index":34,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"additional-documentation/introduction.html":{}}}],["options.data",{"_index":597,"title":{},"body":{"classes/LayoutNode.html":{}}}],["options.data.ts",{"_index":639,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["options.data.ts:32",{"_index":647,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["options.title",{"_index":1099,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["order",{"_index":1031,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["original",{"_index":575,"title":{},"body":{"classes/LayoutNode.html":{}}}],["others",{"_index":520,"title":{},"body":{"interfaces/LayoutItem.html":{},"interfaces/LayoutOptions.html":{}}}],["otherwise",{"_index":1006,"title":{},"body":{"license.html":{}}}],["out",{"_index":347,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"index.html":{},"license.html":{},"overview.html":{},"additional-documentation/introduction.html":{}}}],["over",{"_index":896,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1013,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":854,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":1027,"title":{"additional-documentation/introduction.html":{}},"body":{}}],["pairing",{"_index":210,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["param",{"_index":501,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{}}}],["parameters",{"_index":48,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{}}}],["parentschema",{"_index":741,"title":{},"body":{"injectables/SchemaService.html":{}}}],["parentschema.type",{"_index":742,"title":{},"body":{"injectables/SchemaService.html":{}}}],["parity",{"_index":908,"title":{},"body":{"index.html":{}}}],["parse",{"_index":538,"title":{},"body":{"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["parsing",{"_index":712,"title":{},"body":{"injectables/SchemaService.html":{}}}],["part",{"_index":949,"title":{},"body":{"license.html":{},"additional-documentation/introduction.html":{}}}],["particular",{"_index":994,"title":{},"body":{"license.html":{}}}],["pass",{"_index":550,"title":{},"body":{"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["passed",{"_index":460,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/introduction.html":{}}}],["path",{"_index":522,"title":{},"body":{"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{}}}],["per",{"_index":474,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["permission",{"_index":954,"title":{},"body":{"license.html":{}}}],["permit",{"_index":977,"title":{},"body":{"license.html":{}}}],["person",{"_index":959,"title":{},"body":{"license.html":{},"additional-documentation/introduction.html":{}}}],["person's",{"_index":1039,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["persons",{"_index":978,"title":{},"body":{"license.html":{}}}],["pertains",{"_index":598,"title":{},"body":{"classes/LayoutNode.html":{}}}],["pick",{"_index":593,"title":{},"body":{"classes/LayoutNode.html":{}}}],["pick(this.schema",{"_index":628,"title":{},"body":{"classes/LayoutNode.html":{}}}],["piggybacking",{"_index":121,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"miscellaneous/typealiases.html":{}}}],["placeholder",{"_index":773,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["play",{"_index":912,"title":{},"body":{"index.html":{}}}],["playground",{"_index":267,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["plugin",{"_index":124,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["plugin.service",{"_index":438,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["plugin.service.ts",{"_index":114,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"miscellaneous/typealiases.html":{}}}],["plugin.service.ts:22",{"_index":170,"title":{},"body":{"injectables/DataEventPluginService.html":{}}}],["plugin.service.ts:27",{"_index":172,"title":{},"body":{"injectables/DataEventPluginService.html":{}}}],["plugin.service.ts:32",{"_index":171,"title":{},"body":{"injectables/DataEventPluginService.html":{}}}],["pointer",{"_index":615,"title":{},"body":{"classes/LayoutNode.html":{},"injectables/SchemaService.html":{}}}],["pointer.charat(0",{"_index":617,"title":{},"body":{"classes/LayoutNode.html":{}}}],["pointer.replace(/\\./g",{"_index":618,"title":{},"body":{"classes/LayoutNode.html":{}}}],["pointers",{"_index":727,"title":{},"body":{"injectables/SchemaService.html":{}}}],["pointers.set(pointer.replace(/\\/properties/g",{"_index":743,"title":{},"body":{"injectables/SchemaService.html":{}}}],["populate",{"_index":822,"title":{},"body":{"classes/Widget.html":{}}}],["popup",{"_index":1166,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["portions",{"_index":943,"title":{},"body":{"license.html":{}}}],["possible",{"_index":1114,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["post",{"_index":309,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["predecesor",{"_index":897,"title":{},"body":{"index.html":{}}}],["present",{"_index":129,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["presented",{"_index":566,"title":{},"body":{"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["primitive",{"_index":184,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["private",{"_index":220,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{}}}],["project",{"_index":893,"title":{},"body":{"index.html":{},"license.html":{}}}],["projects/.../data",{"_index":1021,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../index.ts",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/demo/src/assets/examples",{"_index":938,"title":{},"body":{"index.html":{}}}],["projects/ngx",{"_index":10,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["propagate",{"_index":818,"title":{},"body":{"classes/Widget.html":{}}}],["properties",{"_index":29,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"additional-documentation/introduction.html":{}}}],["property",{"_index":528,"title":{},"body":{"interfaces/LayoutItem.html":{},"additional-documentation/introduction.html":{}}}],["propley",{"_index":1175,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["protected",{"_index":817,"title":{},"body":{"classes/Widget.html":{}}}],["provide",{"_index":342,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{}}}],["provided",{"_index":985,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":132,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"injectables/WidgetLibraryService.html":{}}}],["providers",{"_index":278,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"overview.html":{}}}],["provides",{"_index":179,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{}}}],["proxy",{"_index":542,"title":{},"body":{"classes/LayoutNode.html":{}}}],["public",{"_index":552,"title":{},"body":{"classes/LayoutNode.html":{},"injectables/LayoutService.html":{}}}],["publish",{"_index":972,"title":{},"body":{"license.html":{}}}],["pulled",{"_index":91,"title":{},"body":{"components/ButtonComponent.html":{}}}],["purpose",{"_index":995,"title":{},"body":{"license.html":{}}}],["put",{"_index":529,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["question1",{"_index":1068,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["question2",{"_index":1071,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["react",{"_index":368,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["reactiveformsmodule",{"_index":839,"title":{},"body":{"modules/WidgetLibraryModule.html":{}}}],["read",{"_index":772,"title":{},"body":{"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["readonly",{"_index":137,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{}}}],["ready",{"_index":903,"title":{},"body":{"index.html":{}}}],["real",{"_index":343,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["recent",{"_index":1115,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["recognized",{"_index":704,"title":{},"body":{"injectables/LayoutService.html":{}}}],["recursivereference",{"_index":638,"title":{},"body":{"classes/LayoutNode.html":{}}}],["redering",{"_index":1106,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["reducing",{"_index":1119,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["ref",{"_index":633,"title":{},"body":{"classes/LayoutNode.html":{}}}],["reference",{"_index":203,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"classes/LayoutNode.html":{},"injectables/SchemaService.html":{},"classes/Widget.html":{}}}],["referenced",{"_index":211,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["referencing",{"_index":195,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["related",{"_index":570,"title":{},"body":{"classes/LayoutNode.html":{},"injectables/SchemaService.html":{}}}],["relevant",{"_index":726,"title":{},"body":{"injectables/SchemaService.html":{}}}],["remove",{"_index":202,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["removed",{"_index":198,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["render",{"_index":453,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"additional-documentation/introduction.html":{}}}],["rendered",{"_index":308,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["rendering",{"_index":454,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["replace",{"_index":814,"title":{},"body":{"classes/Widget.html":{}}}],["represent",{"_index":532,"title":{},"body":{"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{}}}],["requirement",{"_index":1029,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["reset",{"_index":429,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"overview.html":{},"additional-documentation/introduction.html":{}}}],["respond",{"_index":1125,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["restricted",{"_index":1116,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["restriction",{"_index":966,"title":{},"body":{"license.html":{}}}],["result",{"_index":108,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["results",{"_index":110,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["return",{"_index":126,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"injectables/WidgetLibraryService.html":{}}}],["returned",{"_index":354,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["returns",{"_index":68,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["rewritten",{"_index":901,"title":{},"body":{"index.html":{}}}],["rights",{"_index":969,"title":{},"body":{"license.html":{}}}],["root",{"_index":133,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/WidgetLibraryService.html":{}}}],["run",{"_index":1130,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["running",{"_index":1167,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["runtime",{"_index":478,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["runtimecomponent",{"_index":480,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["runtimecomponentmodule",{"_index":483,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["rxjs",{"_index":328,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"dependencies.html":{}}}],["sample",{"_index":479,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["samples",{"_index":936,"title":{},"body":{"index.html":{}}}],["savethen",{"_index":920,"title":{},"body":{"index.html":{}}}],["scharett",{"_index":952,"title":{},"body":{"license.html":{}}}],["schema",{"_index":12,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["schema(value",{"_index":735,"title":{},"body":{"injectables/SchemaService.html":{}}}],["schema.json",{"_index":1033,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["schema.org/draft",{"_index":1036,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["schema.service",{"_index":334,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{}}}],["schema.type",{"_index":603,"title":{},"body":{"classes/LayoutNode.html":{},"injectables/SchemaService.html":{}}}],["schemapointers",{"_index":687,"title":{},"body":{"injectables/LayoutService.html":{}}}],["schemas",{"_index":933,"title":{},"body":{"index.html":{}}}],["schemaservice",{"_index":280,"title":{"injectables/SchemaService.html":{}},"body":{"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"overview.html":{}}}],["schemaservice.datapointermap.get(layoutnode.getpointer(item.key",{"_index":609,"title":{},"body":{"classes/LayoutNode.html":{}}}],["schnell",{"_index":946,"title":{},"body":{"license.html":{}}}],["second",{"_index":1131,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["see",{"_index":296,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["seems",{"_index":496,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["select",{"_index":105,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["selector",{"_index":21,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{}}}],["selectwidgetcomponent",{"_index":104,"title":{"components/SelectWidgetComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"modules/WidgetLibraryModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["sell",{"_index":975,"title":{},"body":{"license.html":{}}}],["service",{"_index":175,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"classes/LayoutNode.html":{}}}],["services",{"_index":668,"title":{},"body":{"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{}}}],["services.github.io/react",{"_index":373,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["services/react",{"_index":371,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["set",{"_index":205,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"classes/Widget.html":{},"additional-documentation/introduction.html":{}}}],["set(element",{"_index":217,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["setlayout",{"_index":671,"title":{},"body":{"injectables/LayoutService.html":{}}}],["setlayout(value",{"_index":673,"title":{},"body":{"injectables/LayoutService.html":{}}}],["sets",{"_index":293,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{}}}],["setschema(value",{"_index":720,"title":{},"body":{"injectables/SchemaService.html":{}}}],["setter",{"_index":731,"title":{},"body":{"injectables/SchemaService.html":{}}}],["setting",{"_index":658,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["shall",{"_index":982,"title":{},"body":{"license.html":{}}}],["shown",{"_index":1075,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["side",{"_index":249,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["silly",{"_index":497,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["similar",{"_index":177,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"components/JsonSchemaFormComponent.html":{},"index.html":{}}}],["similarly",{"_index":1157,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["simple",{"_index":1096,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["simplechanges",{"_index":326,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/Widget.html":{}}}],["simply",{"_index":928,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["size",{"_index":1120,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["sm",{"_index":1086,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["software",{"_index":961,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{}}}],["special",{"_index":1058,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["specific",{"_index":547,"title":{},"body":{"classes/LayoutNode.html":{}}}],["specifically",{"_index":1061,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["specified",{"_index":533,"title":{},"body":{"interfaces/LayoutItem.html":{},"additional-documentation/introduction.html":{}}}],["specify",{"_index":531,"title":{},"body":{"interfaces/LayoutItem.html":{},"additional-documentation/introduction.html":{}}}],["specifying",{"_index":1104,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["src",{"_index":664,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["standard",{"_index":1077,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["starindex",{"_index":690,"title":{},"body":{"injectables/LayoutService.html":{}}}],["started",{"_index":889,"title":{"index.html":{},"license.html":{}},"body":{}}],["static",{"_index":476,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{}}}],["still",{"_index":905,"title":{},"body":{"index.html":{}}}],["storage",{"_index":221,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["storage.service",{"_index":85,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["storage.service.ts",{"_index":174,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["storage.service.ts:21",{"_index":218,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["storage.service.ts:29",{"_index":213,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["storage.service.ts:36",{"_index":216,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["storage.service.ts:41",{"_index":208,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["store",{"_index":181,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["string",{"_index":75,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{}}}],["strings",{"_index":1113,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["structured",{"_index":253,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["style",{"_index":645,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["styleurls",{"_index":24,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["subject",{"_index":327,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"license.html":{}}}],["sublicense",{"_index":974,"title":{},"body":{"license.html":{}}}],["submit",{"_index":92,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{}}}],["submitform",{"_index":282,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["submits",{"_index":321,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["submittal",{"_index":1179,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["submitted",{"_index":351,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["substantial",{"_index":984,"title":{},"body":{"license.html":{}}}],["such",{"_index":1127,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["super(jsf",{"_index":89,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["supply",{"_index":1030,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["support",{"_index":1010,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":146,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"additional-documentation/introduction.html":{}}}],["supports",{"_index":168,"title":{},"body":{"injectables/DataEventPluginService.html":{},"additional-documentation/introduction.html":{}}}],["supports(eventname",{"_index":140,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["sure",{"_index":353,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["svg",{"_index":1011,"title":{},"body":{"modules.html":{}}}],["system",{"_index":546,"title":{},"body":{"classes/LayoutNode.html":{}}}],["t",{"_index":123,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["tabindex",{"_index":646,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["tag",{"_index":1090,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["take",{"_index":895,"title":{},"body":{"index.html":{}}}],["target",{"_index":288,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{}}}],["tells",{"_index":1060,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["tempalte",{"_index":450,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["template.content",{"_index":490,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["template.innerhtml",{"_index":488,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["templatetag",{"_index":502,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["templatetag.content",{"_index":505,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["templatetag.innerhtml",{"_index":503,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["templateurl",{"_index":26,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/introduction.html":{}}}],["test",{"_index":937,"title":{},"body":{"index.html":{}}}],["text",{"_index":1084,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["text/plain",{"_index":304,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["therefore",{"_index":1123,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["therfore",{"_index":1181,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["this._layout",{"_index":684,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this._schema",{"_index":736,"title":{},"body":{"injectables/SchemaService.html":{}}}],["this.ajv.compile(this.schema",{"_index":754,"title":{},"body":{"injectables/SchemaService.html":{}}}],["this.ajv.removeschema(this.schema",{"_index":752,"title":{},"body":{"injectables/SchemaService.html":{}}}],["this.buildlayout(difference(availablepointers",{"_index":709,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.buildlayout(value",{"_index":685,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.compiler",{"_index":508,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["this.compileschema",{"_index":737,"title":{},"body":{"injectables/SchemaService.html":{}}}],["this.componentfactory.resolvecomponentfactory",{"_index":790,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.control",{"_index":828,"title":{},"body":{"classes/Widget.html":{}}}],["this.createcomponent",{"_index":781,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.datapointer.split('/').pop",{"_index":621,"title":{},"body":{"classes/LayoutNode.html":{}}}],["this.destroyed$.complete",{"_index":402,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.destroyed$.next",{"_index":401,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.elementdatastorage.get(event.target",{"_index":159,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["this.elementdatastorage.has(event.target",{"_index":158,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["this.elementdatastorage.set(this.control.nativeelement",{"_index":829,"title":{},"body":{"classes/Widget.html":{}}}],["this.forminitialized",{"_index":399,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.generatengcontent",{"_index":792,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.haswidget(type",{"_index":850,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["this.initializeform",{"_index":405,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.initializelayout",{"_index":408,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.initializeschema",{"_index":407,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.jsf.compiletemplate(this.layoutnode.content",{"_index":795,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.jsf.formoptions.disableinvalidsubmit",{"_index":93,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.jsf.initializecontrol(this",{"_index":823,"title":{},"body":{"classes/Widget.html":{}}}],["this.jsf.updatevalue(this",{"_index":831,"title":{},"body":{"classes/Widget.html":{}}}],["this.layoutitem",{"_index":606,"title":{},"body":{"classes/LayoutNode.html":{}}}],["this.layoutitem.content",{"_index":627,"title":{},"body":{"classes/LayoutNode.html":{}}}],["this.layoutitem.name",{"_index":620,"title":{},"body":{"classes/LayoutNode.html":{}}}],["this.layoutitem.type",{"_index":624,"title":{},"body":{"classes/LayoutNode.html":{}}}],["this.layoutnode",{"_index":787,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.layoutnode.content",{"_index":794,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.layoutnode.layoutdefinition",{"_index":830,"title":{},"body":{"classes/Widget.html":{}}}],["this.layoutnode.options",{"_index":796,"title":{},"body":{"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["this.layoutnode.type",{"_index":788,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.layoutservice.setlayout(clonedeep(this.layout",{"_index":411,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.manager.getzone",{"_index":154,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["this.moduleref",{"_index":513,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["this.newcomponent",{"_index":782,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.newcomponent.instance[input",{"_index":783,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.options",{"_index":824,"title":{},"body":{"classes/Widget.html":{}}}],["this.schema",{"_index":607,"title":{},"body":{"classes/LayoutNode.html":{}}}],["this.schemaservice",{"_index":698,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.schemaservice.datapointermap",{"_index":688,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.schemaservice.schema",{"_index":414,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.storage.delete(element",{"_index":236,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["this.storage.get(element",{"_index":224,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["this.storage.get(element).get(key",{"_index":229,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["this.storage.get(element).has(key",{"_index":231,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["this.storage.has(element",{"_index":228,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["this.storage.set(element",{"_index":225,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["this.updatecomponent",{"_index":778,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.updatedata",{"_index":820,"title":{},"body":{"classes/Widget.html":{}}}],["this.updateform",{"_index":396,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.validator",{"_index":753,"title":{},"body":{"injectables/SchemaService.html":{}}}],["this.validator(data",{"_index":750,"title":{},"body":{"injectables/SchemaService.html":{}}}],["this.widgetcontainer.createcomponent",{"_index":789,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.widgetlibraryservice.getwidget(this.layoutnode.type",{"_index":791,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.widgets[this.defaultwidget",{"_index":852,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["this.widgets[type",{"_index":851,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["this.x",{"_index":500,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["this[input",{"_index":784,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["throw",{"_index":600,"title":{},"body":{"classes/LayoutNode.html":{}}}],["throws",{"_index":599,"title":{},"body":{"classes/LayoutNode.html":{}}}],["thus",{"_index":190,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["time",{"_index":344,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{}}}],["title",{"_index":629,"title":{},"body":{"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["todo",{"_index":90,"title":{},"body":{"components/ButtonComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{}}}],["tort",{"_index":1005,"title":{},"body":{"license.html":{}}}],["trackbyfn",{"_index":283,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["trackbyfn(index",{"_index":322,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["translates",{"_index":1056,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["transpile",{"_index":1112,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["traverse",{"_index":264,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{},"dependencies.html":{}}}],["traverse(this.schema",{"_index":738,"title":{},"body":{"injectables/SchemaService.html":{}}}],["traverse]{@link",{"_index":383,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["trigger",{"_index":1153,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["triggered",{"_index":1159,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["true",{"_index":409,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/SchemaService.html":{},"additional-documentation/introduction.html":{}}}],["try",{"_index":696,"title":{},"body":{"injectables/LayoutService.html":{}}}],["tslib",{"_index":884,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":471,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["type",{"_index":51,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["typealiases",{"_index":1019,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":849,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["types",{"_index":193,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["types/ace",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["types/json",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["types/lodash",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":680,"title":{},"body":{"injectables/LayoutService.html":{}}}],["undeclared",{"_index":527,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["undefined",{"_index":230,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"components/SelectWidgetComponent.html":{}}}],["underlying",{"_index":812,"title":{},"body":{"classes/Widget.html":{}}}],["unique",{"_index":562,"title":{},"body":{"classes/LayoutNode.html":{}}}],["uniqueid",{"_index":594,"title":{},"body":{"classes/LayoutNode.html":{}}}],["uniqueid('control",{"_index":561,"title":{},"body":{"classes/LayoutNode.html":{}}}],["unknownformats",{"_index":747,"title":{},"body":{"injectables/SchemaService.html":{}}}],["unsubscribe",{"_index":390,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["up",{"_index":569,"title":{},"body":{"classes/LayoutNode.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["update",{"_index":65,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["updatecomponent",{"_index":780,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["updatedata",{"_index":827,"title":{},"body":{"classes/Widget.html":{}}}],["updateform",{"_index":404,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["updatevalue",{"_index":36,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["updatevalue(ctx",{"_index":461,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["updatevalue(event",{"_index":62,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["upgrade",{"_index":732,"title":{},"body":{"injectables/SchemaService.html":{}}}],["upon",{"_index":392,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{}}}],["urlencoded",{"_index":302,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["us/docs/web/html/element/form#attributes",{"_index":298,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["us/docs/web/html/element/input#dirname",{"_index":649,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/element/input#disabled",{"_index":650,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/element/input#readonly",{"_index":652,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/element/input/image#alt",{"_index":659,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/element/input/image#height",{"_index":661,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/element/input/image#src",{"_index":663,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/element/input/image#width",{"_index":665,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/global_attributes/accesskey",{"_index":648,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/global_attributes/class",{"_index":651,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/global_attributes/style",{"_index":653,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/global_attributes/tabindex",{"_index":655,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/global_attributes/title",{"_index":656,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["use",{"_index":189,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["useclass",{"_index":441,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["used",{"_index":125,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"injectables/SchemaService.html":{},"additional-documentation/introduction.html":{}}}],["useful",{"_index":1064,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["user",{"_index":336,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{}}}],["using",{"_index":337,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/Widget.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["usually",{"_index":1168,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["utility",{"_index":260,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["valdiated",{"_index":717,"title":{},"body":{"injectables/SchemaService.html":{}}}],["valid",{"_index":356,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["validate",{"_index":314,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{}}}],["validate(data",{"_index":714,"title":{},"body":{"injectables/SchemaService.html":{}}}],["validates",{"_index":335,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{}}}],["validating",{"_index":348,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{}}}],["validation",{"_index":722,"title":{},"body":{"injectables/SchemaService.html":{}}}],["validator",{"_index":263,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{}}}],["validators",{"_index":339,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["value",{"_index":66,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":97,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["variable",{"_index":551,"title":{},"body":{"classes/LayoutNode.html":{}}}],["variables",{"_index":1022,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1098,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["version",{"_index":733,"title":{},"body":{"injectables/SchemaService.html":{}}}],["via",{"_index":196,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"additional-documentation/introduction.html":{}}}],["viewchild",{"_index":775,"title":{},"body":{"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["viewchild('control",{"_index":815,"title":{},"body":{"classes/Widget.html":{}}}],["viewchild('widgetcontainer",{"_index":771,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["viewcontainerref",{"_index":770,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["void",{"_index":69,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"additional-documentation/introduction.html":{}}}],["warranties",{"_index":991,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":986,"title":{},"body":{"license.html":{}}}],["weakmap",{"_index":197,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["whether",{"_index":1003,"title":{},"body":{"license.html":{}}}],["widget",{"_index":19,"title":{"classes/Widget.html":{}},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["widget.component.css",{"_index":762,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["widget.component.html",{"_index":763,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["widget.component.ts",{"_index":757,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["widget.component.ts:25",{"_index":768,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["widget/select",{"_index":756,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["widget:11",{"_index":72,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["widget:13",{"_index":76,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["widget:15",{"_index":77,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["widget:17",{"_index":79,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["widget:19",{"_index":81,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["widget:22",{"_index":59,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["widget:24",{"_index":57,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["widget:26",{"_index":55,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["widget:64",{"_index":64,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["widgetcontainer",{"_index":764,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["widgetlibrarymodule",{"_index":427,"title":{"modules/WidgetLibraryModule.html":{}},"body":{"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"modules.html":{},"overview.html":{}}}],["widgetlibraryservice",{"_index":767,"title":{"injectables/WidgetLibraryService.html":{}},"body":{"components/SelectWidgetComponent.html":{},"injectables/WidgetLibraryService.html":{}}}],["widgets",{"_index":493,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{}}}],["width",{"_index":666,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["window.open('http://www.google.com",{"_index":1138,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["wire",{"_index":1054,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["within",{"_index":1032,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["without",{"_index":965,"title":{},"body":{"license.html":{}}}],["wont",{"_index":1177,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["work",{"_index":548,"title":{},"body":{"classes/LayoutNode.html":{}}}],["works",{"_index":183,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["wrapper",{"_index":120,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"miscellaneous/typealiases.html":{}}}],["www",{"_index":301,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["x",{"_index":475,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["years",{"_index":1043,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["yes",{"_index":560,"title":{},"body":{"classes/LayoutNode.html":{}}}],["yourself",{"_index":1172,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["z]+/.test(eventname",{"_index":144,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["z]+\\.data\\.[a",{"_index":142,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["za",{"_index":143,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["zero",{"_index":1046,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["zone",{"_index":153,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["zone.js",{"_index":886,"title":{},"body":{"dependencies.html":{}}}],["zone.runguarded",{"_index":161,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["zone.runoutsideangular",{"_index":163,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["zoom",{"_index":428,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-json-schema-form/src/lib/widget-library/input/button/button.component.ts\n\n\n    \n        Description\n    \n    \n        Displays a  control \n\n    \n\n    \n        Extends\n    \n    \n                Widget\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                jsf-button\n            \n\n            \n                styleUrls\n                ./button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                controlDisabled\n                            \n                            \n                                controlName\n                            \n                            \n                                controlValue\n                            \n                            \n                                formControl\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataIndex\n                            \n                            \n                                layoutIndex\n                            \n                            \n                                layoutNode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(jsf: JsonSchemaFormService, elementDataStorage: ElementDataStorageService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/widget-library/input/button/button.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jsf\n                                                  \n                                                        \n                                                                        JsonSchemaFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementDataStorage\n                                                  \n                                                        \n                                                                        ElementDataStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataIndex\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:26\n\n                            \n                        \n                \n                    \n                        Index of the data in data array \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutIndex\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:24\n\n                            \n                        \n                \n                    \n                        Index of the layout in the Layout array \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutNode\n                    \n                \n                \n                    \n                        Type :         LayoutNode\n\n                    \n                \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:22\n\n                            \n                        \n                \n                    \n                        Layout Node describing the control \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(event: Event)\n                \n            \n\n\n            \n                \n                    Inherited from         Widget\n\n                \n            \n            \n                \n                        Defined in         Widget:64\n\n                \n            \n\n\n            \n                \n                    Update the value of the control\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nChange event\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:11\n\n                            \n                        \n\n                \n                    \n                        Flag to disable the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:13\n\n                            \n                        \n\n                \n                    \n                        Name for the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:15\n\n                            \n                        \n\n                \n                    \n                        Value of the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AbstractControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:17\n\n                            \n                        \n\n                \n                    \n                        Associated FormControl for widget \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:19\n\n                            \n                        \n\n                \n                    \n                        Options for the control \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { ElementDataStorageService } from '../../../element-data-storage.service';\nimport { JsonSchemaFormService } from '../../../json-schema-form.service';\n\nimport { Widget } from '../../widget';\n\n/** Displays a  control */\n@Component({\n    selector: 'jsf-button',\n    styleUrls: ['./button.component.scss'],\n    templateUrl: './button.component.html'\n})\nexport class ButtonComponent extends Widget {\n    constructor(jsf: JsonSchemaFormService, elementDataStorage: ElementDataStorageService) {\n        super(jsf, elementDataStorage);\n    }\n\n\n    // TODO- pulled from submit\n    // this.jsf.formOptions.disableInvalidSubmit\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n\n    \n                \n                    ./button.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'jsf-button'},{'name': 'HiddenComponent', 'selector': 'jsf-hidden'},{'name': 'JsonSchemaFormComponent', 'selector': 'jsf-json-schema-form'},{'name': 'SelectWidgetComponent', 'selector': 'jsf-select-widget'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Data.html":{"url":"interfaces/Data.html","title":"interface - Data","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Data\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/data-event-plugin.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { EventManager } from '@angular/platform-browser';\n\nimport { ElementDataStorageService } from './element-data-storage.service';\n\nexport interface Data {\n    data: any;\n}\n/** Event wrapper for piggybacking data on an event */\nexport type DataEvent = Data & T;\n\n/**\n * Plugin used to return data, associated with an element, in the event.  Data must first be\n * \"associated\" with an element by means of the ElementDataStorageService.  If no data is\n * present, then the event handler will not be fired.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class DataEventPluginService {\n    /** Event manager used to get the ngZone */\n    manager: EventManager;\n\n    constructor(private readonly elementDataStorage: ElementDataStorageService) {}\n\n    /** Determine if the plugin should be applied to an event */\n    supports(eventName: string): boolean {\n        return  /[a-z]+\\.data\\.[a-zA-Z]+/.test(eventName);\n    }\n\n    /** Adds a supported event listener to a dom node */\n    addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n        const zone: NgZone = this.manager.getZone();\n        const [type, , dataName] = eventName.split('.');\n        const eventHandler = (event: DataEvent): void => {\n            if (this.elementDataStorage.has(event.target as HTMLElement, dataName)) {\n                const data = this.elementDataStorage.get(event.target as HTMLElement, dataName);\n                event.data = data;\n\n                zone.runGuarded(() => {\n                    handler(event);\n                });\n            }\n        };\n\n        zone.runOutsideAngular(() => {\n            element.addEventListener(type, eventHandler, false);\n        });\n\n        return () => {\n            element.removeEventListener(type, eventHandler, false);\n        };\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataEventPluginService.html":{"url":"injectables/DataEventPluginService.html","title":"injectable - DataEventPluginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataEventPluginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/data-event-plugin.service.ts\n        \n\n            \n                Description\n            \n            \n                Plugin used to return data, associated with an element, in the event.  Data must first be\n\"associated\" with an element by means of the ElementDataStorageService.  If no data is\npresent, then the event handler will not be fired.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                manager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEventListener\n                            \n                            \n                                supports\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementDataStorage: ElementDataStorageService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/data-event-plugin.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementDataStorage\n                                                  \n                                                        \n                                                                        ElementDataStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addEventListener\n                        \n                        \n                    \n                \n            \n            \n                \naddEventListener(element: HTMLElement, eventName: string, handler: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/data-event-plugin.service.ts:32\n                \n            \n\n\n            \n                \n                    Adds a supported event listener to a dom node \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handler\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            supports\n                        \n                        \n                    \n                \n            \n            \n                \nsupports(eventName: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/data-event-plugin.service.ts:27\n                \n            \n\n\n            \n                \n                    Determine if the plugin should be applied to an event \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventManager\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/data-event-plugin.service.ts:22\n                            \n                        \n\n                \n                    \n                        Event manager used to get the ngZone \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { EventManager } from '@angular/platform-browser';\n\nimport { ElementDataStorageService } from './element-data-storage.service';\n\nexport interface Data {\n    data: any;\n}\n/** Event wrapper for piggybacking data on an event */\nexport type DataEvent = Data & T;\n\n/**\n * Plugin used to return data, associated with an element, in the event.  Data must first be\n * \"associated\" with an element by means of the ElementDataStorageService.  If no data is\n * present, then the event handler will not be fired.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class DataEventPluginService {\n    /** Event manager used to get the ngZone */\n    manager: EventManager;\n\n    constructor(private readonly elementDataStorage: ElementDataStorageService) {}\n\n    /** Determine if the plugin should be applied to an event */\n    supports(eventName: string): boolean {\n        return  /[a-z]+\\.data\\.[a-zA-Z]+/.test(eventName);\n    }\n\n    /** Adds a supported event listener to a dom node */\n    addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n        const zone: NgZone = this.manager.getZone();\n        const [type, , dataName] = eventName.split('.');\n        const eventHandler = (event: DataEvent): void => {\n            if (this.elementDataStorage.has(event.target as HTMLElement, dataName)) {\n                const data = this.elementDataStorage.get(event.target as HTMLElement, dataName);\n                event.data = data;\n\n                zone.runGuarded(() => {\n                    handler(event);\n                });\n            }\n        };\n\n        zone.runOutsideAngular(() => {\n            element.addEventListener(type, eventHandler, false);\n        });\n\n        return () => {\n            element.removeEventListener(type, eventHandler, false);\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ElementDataStorageService.html":{"url":"injectables/ElementDataStorageService.html","title":"injectable - ElementDataStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ElementDataStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/element-data-storage.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to map data to an DOM element similar to jQuery $.data\nWhile HTML provides its data-* attributes to store data on the node\nitself, this only works for primitive data.  Objects and arrays would need\nto be converted to json for then to use data-* and thus would not\nbe able to contain non-json types like Function.  This service allows\nfor referencing data to a HTML element via a WeakMap so that when the element\nis removed from the DOM, the garbage collector can automatically remove the\nreference in the Service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                has\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(element: HTMLElement, key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/element-data-storage.service.ts:41\n                \n            \n\n\n            \n                \n                    Remove a key/value pairing from map referenced by element \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(element: HTMLElement, key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/element-data-storage.service.ts:29\n                \n            \n\n\n            \n                \n                    Return a key's value for an element \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            has\n                        \n                        \n                    \n                \n            \n            \n                \nhas(element: HTMLElement, key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/element-data-storage.service.ts:36\n                \n            \n\n\n            \n                \n                    Determine if an element has a key/value pairing referenced \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset(element: HTMLElement, key: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/element-data-storage.service.ts:21\n                \n            \n\n\n            \n                \n                    Add key/value pairing to map referenced by element \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ElementDataStorageService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Service to map data to an DOM element similar to jQuery $.data\n * While HTML provides its data-* attributes to store data on the node\n * itself, this only works for primitive data.  Objects and arrays would need\n * to be converted to json for then to use data-* and thus would not\n * be able to contain non-json types like Function.  This service allows\n * for referencing data to a HTML element via a WeakMap so that when the element\n * is removed from the DOM, the garbage collector can automatically remove the\n * reference in the Service.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ElementDataStorageService {\n    /** Map to reference data to an element */\n    private readonly storage: WeakMap> = new WeakMap>();\n\n    /** Add key/value pairing to map referenced by element */\n    set(element: HTMLElement, key: string, value: any): ElementDataStorageService {\n        const mappedData = this.storage.get(element) || this.storage.set(element, new Map()).get(element);\n        mappedData.set(key, value);\n\n        return this;\n    }\n\n    /** Return a key's value for an element */\n    get(element: HTMLElement, key: string): any {\n        return this.storage.has(element)\n            ? this.storage.get(element).get(key)\n            : undefined;\n    }\n\n    /** Determine if an element has a key/value pairing referenced */\n    has(element: HTMLElement, key: string): boolean {\n        return this.storage.has(element) && this.storage.get(element).has(key);\n    }\n\n    /** Remove a key/value pairing from map referenced by element */\n    delete(element: HTMLElement, key: string): boolean {\n        let deleted = this.storage.has(element);\n        if (deleted) {\n            const mappedData = this.storage.get(element);\n            deleted = mappedData.delete(key);\n            if (mappedData.size === 0) {\n                this.storage.delete(element);\n            }\n        }\n\n        return deleted;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HiddenComponent.html":{"url":"components/HiddenComponent.html","title":"component - HiddenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HiddenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-json-schema-form/src/lib/widget-library/input/hidden/hidden.component.ts\n\n\n    \n        Description\n    \n    \n        Displays an input[type='hidden']\n\n    \n\n    \n        Extends\n    \n    \n                Widget\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                jsf-hidden\n            \n\n            \n                styleUrls\n                ./hidden.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./hidden.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                controlDisabled\n                            \n                            \n                                controlName\n                            \n                            \n                                controlValue\n                            \n                            \n                                formControl\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataIndex\n                            \n                            \n                                layoutIndex\n                            \n                            \n                                layoutNode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(jsf: JsonSchemaFormService, elementDataStorage: ElementDataStorageService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/widget-library/input/hidden/hidden.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jsf\n                                                  \n                                                        \n                                                                        JsonSchemaFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementDataStorage\n                                                  \n                                                        \n                                                                        ElementDataStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataIndex\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:26\n\n                            \n                        \n                \n                    \n                        Index of the data in data array \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutIndex\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:24\n\n                            \n                        \n                \n                    \n                        Index of the layout in the Layout array \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutNode\n                    \n                \n                \n                    \n                        Type :         LayoutNode\n\n                    \n                \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:22\n\n                            \n                        \n                \n                    \n                        Layout Node describing the control \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(event: Event)\n                \n            \n\n\n            \n                \n                    Inherited from         Widget\n\n                \n            \n            \n                \n                        Defined in         Widget:64\n\n                \n            \n\n\n            \n                \n                    Update the value of the control\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nChange event\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:11\n\n                            \n                        \n\n                \n                    \n                        Flag to disable the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:13\n\n                            \n                        \n\n                \n                    \n                        Name for the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:15\n\n                            \n                        \n\n                \n                    \n                        Value of the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AbstractControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:17\n\n                            \n                        \n\n                \n                    \n                        Associated FormControl for widget \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:19\n\n                            \n                        \n\n                \n                    \n                        Options for the control \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { ElementDataStorageService } from '../../../element-data-storage.service';\nimport { JsonSchemaFormService } from '../../../json-schema-form.service';\n\nimport { Widget } from '../../widget';\n\n/**\n * Displays an input[type='hidden']\n */\n@Component({\n    selector: 'jsf-hidden',\n    styleUrls: ['./hidden.component.scss'],\n    templateUrl: './hidden.component.html'\n})\nexport class HiddenComponent extends Widget {\n    constructor(jsf: JsonSchemaFormService, elementDataStorage: ElementDataStorageService) {\n        super(jsf, elementDataStorage);\n    }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./hidden.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'jsf-button'},{'name': 'HiddenComponent', 'selector': 'jsf-hidden'},{'name': 'JsonSchemaFormComponent', 'selector': 'jsf-json-schema-form'},{'name': 'SelectWidgetComponent', 'selector': 'jsf-select-widget'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HiddenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/JsonSchemaFormComponent.html":{"url":"components/JsonSchemaFormComponent.html","title":"component - JsonSchemaFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  JsonSchemaFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-json-schema-form/src/lib/json-schema-form.component.ts\n\n\n    \n        Description\n    \n    \n        NGX JSON Schema Form\nRoot module of the NGX JSON Schema Form client-side library,\nan Angular library which generates an HTML form from a JSON schema\nstructured data model and/or a JSON Schema Form layout description.\nThis library depends on:\n\nAngular (obviously)\nlodash, JavaScript utility library\najv, Another JSON Schema validator\njson-schema-traverse, JSON Schema Traverse\n\nIn addition, the Example Playground also depends on:\n\nbrace, Browserified Ace editor\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnChanges\n                    OnDestroy\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                JsonSchemaFormService\n                                LayoutService\n                                SchemaService\n                \n            \n\n\n            \n                selector\n                jsf-json-schema-form\n            \n\n\n\n\n            \n                templateUrl\n                ./json-schema-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submitForm\n                            \n                            \n                                trackByFn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                autocomplete\n                            \n                            \n                                enctype\n                            \n                            \n                                layout\n                            \n                            \n                                method\n                            \n                            \n                                schema\n                            \n                            \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(schemaService: SchemaService, layoutService: LayoutService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.component.ts:94\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        schemaService\n                                                  \n                                                        \n                                                                        SchemaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        action\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.component.ts:70\n                            \n                        \n                \n                    \n                        Sets the action attribute of the internal form\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\" | null\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.component.ts:75\n                            \n                        \n                \n                    \n                        Sets the autocomplete attribute of the internal form\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enctype\n                    \n                \n                \n                    \n                        Type :     \"application/x-www-form-urlencoded\" | \"multipart/form-data\" | \"text/plain\" | null\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.component.ts:80\n                            \n                        \n                \n                    \n                        Sets the enctype attribute of the internal form\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layout\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.component.ts:65\n                            \n                        \n                \n                    \n                        Layout used to define how the form is rendered \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        method\n                    \n                \n                \n                    \n                        Type :     \"get\" | \"post\" | \"dialog\" | null\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.component.ts:85\n                            \n                        \n                \n                    \n                        Sets the method attribute of the internal form\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schema\n                    \n                \n                \n                    \n                        Type :     JSONSchema7\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.component.ts:63\n                            \n                        \n                \n                    \n                        JSON Schema used to validate form data \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        target\n                    \n                \n                \n                    \n                        Type :     \"_self\" | \"_blank\" | \"_parent\" | \"_top\" | string | null\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.component.ts:90\n                            \n                        \n                \n                    \n                        Sets the target attribute of the internal form\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitForm\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.component.ts:119\n                \n            \n\n\n            \n                \n                    Submits the form \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trackByFn\n                        \n                        \n                    \n                \n            \n            \n                \ntrackByFn(index)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n    ChangeDetectionStrategy, Component, Input,\n    OnChanges, OnDestroy, OnInit, SimpleChanges\n} from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\nimport { cloneDeep, isPlainObject } from 'lodash';\n\nimport { JSONSchema7 } from 'json-schema';\n\nimport { JsonSchemaFormService } from './json-schema-form.service';\nimport { LayoutItem } from './layout-item.data';\nimport { LayoutService } from './layout.service';\nimport { SchemaService } from './schema.service';\n\n// * This library also validates input data by the user, using both validators on\n// * individual controls to provide real-time feedback while the user is filling\n// * out the form, and then validating the entire input against the schema when\n// * the form is submitted to make sure the returned JSON data object is valid.\n// *\n// * This library is similar to, and mostly API compatible with:\n// *\n// * - JSON Schema Form's [Angular Schema Form]{@link http://schemaform.io} library for AngularJs\n// *   [(examples)]{@link http://schemaform.io/examples/bootstrap-example.html}\n// *\n// * - Mozilla's [react-jsonschema-form]{@link https://github.com/mozilla-services/react-jsonschema-form} library for React\n// *   [(examples)]{@link https://mozilla-services.github.io/react-jsonschema-form}\n// *\n// * - Joshfire's [JSON Form]{@link https://github.com/joshfire/jsonform} library for jQuery\n// *   [(examples)]{@link http://ulion.github.io/jsonform/playground}\n/**\n * NGX JSON Schema Form\n *\n * Root module of the NGX JSON Schema Form client-side library,\n * an Angular library which generates an HTML form from a JSON schema\n * structured data model and/or a JSON Schema Form layout description.\n *\n * This library depends on:\n *\n * - [Angular]{@link https://angular.io} (obviously)\n * - [lodash]{@link https://github.com/lodash/lodash}, JavaScript utility library\n * - [ajv]{@link https://github.com/epoberezkin/ajv}, Another JSON Schema validator\n * - [json-schema-traverse]{@link https://github.com/epoberezkin/json-schema-traverse}, JSON Schema Traverse\n *\n * In addition, the Example Playground also depends on:\n *\n * - [brace]{@link http://thlorenz.github.io/brace}, Browserified Ace editor\n */\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        JsonSchemaFormService,\n        LayoutService,\n        SchemaService\n    ],\n    selector: 'jsf-json-schema-form',\n    styles: [],\n    templateUrl: './json-schema-form.component.html'\n})\nexport class JsonSchemaFormComponent implements OnChanges, OnDestroy, OnInit {\n    /** JSON Schema used to validate form data */\n    @Input() schema: JSONSchema7;\n    /** Layout used to define how the form is rendered */\n    @Input() layout: Array;\n    /**\n     * Sets the action attribute of the internal form\n     * See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes}\n     */\n    @Input() action: string | null;\n    /**\n     * Sets the autocomplete attribute of the internal form\n     * See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes}\n     */\n    @Input() autocomplete: 'on' | 'off' | null;\n    /**\n     * Sets the enctype attribute of the internal form\n     * See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes}\n     */\n    @Input() enctype: 'application/x-www-form-urlencoded' | 'multipart/form-data' | 'text/plain' | null;\n    /**\n     * Sets the method attribute of the internal form\n     * See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes}\n     */\n    @Input() method: 'get' | 'post' | 'dialog' | null;\n    /**\n     * Sets the target attribute of the internal form\n     * See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes}\n     */\n    @Input() target: '_self' | '_blank' | '_parent' | '_top' | string | null;\n\n    private formInitialized = false;\n    /** Observable to used to unsubscribe listners upon ngDestroy */\n    private readonly destroyed$: Subject = new Subject();\n\n    constructor(\n        // private readonly jsf: JsonSchemaFormService,\n        private readonly schemaService: SchemaService,\n        readonly layoutService: LayoutService\n    ) {}\n\n    ngOnInit() {\n        this.updateForm();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.hasOwnProperty('schema')) {\n            this.formInitialized = false;\n        }\n        this.updateForm();\n    }\n\n    ngOnDestroy() {\n        this.destroyed$.next();\n        this.destroyed$.complete();\n    }\n\n    /** Submits the form */\n    submitForm(): void {\n        // TODO\n        console.warn(this);\n    }\n\n    trackByFn(index) {\n        return index;\n    }\n\n    private updateForm(): void {\n        if (!this.formInitialized) {\n            this.initializeForm();\n        }\n    }\n\n    private initializeForm(): void {\n        this.initializeSchema();\n        this.initializeLayout();\n        this.formInitialized = true;\n    }\n\n    private initializeLayout(): void {\n        this.layoutService.setLayout(cloneDeep(this.layout || ['*']));\n    }\n\n    private initializeSchema(): void {\n        if (isPlainObject(this.schema)) {\n            this.schemaService.schema = cloneDeep(this.schema);\n        }\n    }\n}\n\n    \n\n    \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'jsf-button'},{'name': 'HiddenComponent', 'selector': 'jsf-hidden'},{'name': 'JsonSchemaFormComponent', 'selector': 'jsf-json-schema-form'},{'name': 'SelectWidgetComponent', 'selector': 'jsf-select-widget'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'JsonSchemaFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JsonSchemaFormModule.html":{"url":"modules/JsonSchemaFormModule.html","title":"module - JsonSchemaFormModule","body":"\n                   \n\n\n\n\n    Modules\n    JsonSchemaFormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JsonSchemaFormModule\n\n\n\ncluster_JsonSchemaFormModule_declarations\n\n\n\ncluster_JsonSchemaFormModule_JsonSchemaFormComponent_providers\n\n\n\ncluster_JsonSchemaFormModule_imports\n\n\n\ncluster_JsonSchemaFormModule_exports\n\n\n\n\nJsonSchemaFormComponent\n\nJsonSchemaFormComponent\n\n\n\nJsonSchemaFormModule\n\nJsonSchemaFormModule\n\nJsonSchemaFormModule -->\n\nJsonSchemaFormComponent->JsonSchemaFormModule\n\n\n\n\n\nJsonSchemaFormComponent \n\nJsonSchemaFormComponent \n\nJsonSchemaFormComponent  -->\n\nJsonSchemaFormModule->JsonSchemaFormComponent \n\n\n\n\n\nWidgetLibraryModule \n\nWidgetLibraryModule \n\nWidgetLibraryModule  -->\n\nJsonSchemaFormModule->WidgetLibraryModule \n\n\n\n\n\nJsonSchemaFormService\n\nJsonSchemaFormService\n\nJsonSchemaFormComponent -->\n\nJsonSchemaFormService->JsonSchemaFormComponent\n\n\n\n\n\nLayoutService\n\nLayoutService\n\nJsonSchemaFormComponent -->\n\nLayoutService->JsonSchemaFormComponent\n\n\n\n\n\nSchemaService\n\nSchemaService\n\nJsonSchemaFormComponent -->\n\nSchemaService->JsonSchemaFormComponent\n\n\n\n\n\nWidgetLibraryModule\n\nWidgetLibraryModule\n\nJsonSchemaFormModule -->\n\nWidgetLibraryModule->JsonSchemaFormModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/json-schema-form.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            JsonSchemaFormComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            WidgetLibraryModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JsonSchemaFormComponent\n                        \n                        \n                            WidgetLibraryModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EVENT_MANAGER_PLUGINS } from '@angular/platform-browser';\n\nimport { WidgetLibraryModule } from './widget-library/widget-library.module';\n\nimport { DataEventPluginService } from './data-event-plugin.service';\nimport { JsonSchemaFormComponent } from './json-schema-form.component';\n\n@NgModule({\n    declarations: [ JsonSchemaFormComponent ],\n    exports: [ JsonSchemaFormComponent, WidgetLibraryModule ],\n    imports: [ CommonModule, WidgetLibraryModule ],\n    providers: [{\n        multi: true,\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: DataEventPluginService\n    }]\n})\nexport class JsonSchemaFormModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JsonSchemaFormService.html":{"url":"injectables/JsonSchemaFormService.html","title":"injectable - JsonSchemaFormService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JsonSchemaFormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/json-schema-form.service.ts\n        \n\n            \n                Description\n            \n            \n                TODO \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                compileTemplate\n                            \n                            \n                                initializeControl\n                            \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            compileTemplate\n                        \n                        \n                    \n                \n            \n            \n                \ncompileTemplate(template: string, context: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.service.ts:63\n                \n            \n\n\n            \n                \n                    Compiles an HTML tempalte and data into a document fragment\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    template\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nHTML template to render\n\n\n                                    \n                                \n                                \n                                    context\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                    \n                                        \noptions to use when rendering the template\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DocumentFragment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeControl\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeControl(control: Widget, bind)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.service.ts:47\n                \n            \n\n\n            \n                \n                    Creates a component with passed in template and associated context \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                Widget\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    bind\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(ctx: any, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.service.ts:53\n                \n            \n\n\n            \n                \n                    TODO \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n// import {\n//     Compiler, Component, ComponentRef, Injectable, Injector,\n//     ModuleWithComponentFactories, NgModule, NgModuleRef\n// } from '@angular/core';\n\nimport Handlebars from 'handlebars/dist/cjs/handlebars';\n\nimport { Widget } from './widget-library';\n\n/* tslint:disable: max-classes-per-file */\n/** TODO */\n@Injectable()\nexport class JsonSchemaFormService {\n    private x = false;\n\n    /** Creates a component with passed in template and associated context */\n    // private static createComponent(template: string, context: {[key: string]: any}): any {\n    //     return Component({\n    //         selector: `runtime-component-sample`,\n    //         template\n    //     })(class RuntimeComponent {\n    //         options: any = context;\n    //     });\n    // }\n\n    /** Create a module for use with the RuntimeComponent */\n    // private static createModule(component: any, compiler: Compiler): ModuleWithComponentFactories {\n    //     @NgModule({ imports: [CommonModule], declarations: [component] })\n    //     class RuntimeComponentModule { }\n\n    //     return compiler.compileModuleAndAllComponentsSync(RuntimeComponentModule);\n    // }\n\n    /** Get a components innerHTML as a document Fragment */\n    // private static getDocumentFragment(componentRef: ComponentRef): DocumentFragment {\n    //     const template = document.createElement('template');\n    //     template.innerHTML = (componentRef.location.nativeElement).innerHTML;\n\n    //     return template.content;\n    // }\n\n    // constructor(private readonly compiler: Compiler,private readonly injector: Injector, private readonly moduleRef: NgModuleRef) {}\n\n    /** Sets a widgets properties upon Widget creation */\n    initializeControl(control: Widget, bind = true): void {\n        // Do we even need to do this?  seems silly\n        control.controlName = control.layoutNode.name;\n    }\n\n    /** TODO */\n    updateValue(ctx: any, value: any): void {\n        // TODO\n        this.x = !this.x;\n    }\n\n    /**\n     * Compiles an HTML tempalte and data into a document fragment\n     * @param template - HTML template to render\n     * @param context - options to use when rendering the template\n     */\n    compileTemplate(template: string, context: {[key: string]: any} = {}): DocumentFragment {\n        const templateTag = document.createElement('template');\n        templateTag.innerHTML = Handlebars.compile(template)({options: context});\n\n        return templateTag.content;\n    }\n\n    // /**\n    //  * Compiles an HTML tempalte and data into a document fragment\n    //  * @param template - HTML template to render\n    //  * @param context - options to use when rendering the template\n    //  */\n    // compileTemplate(template: string, context: {[key: string]: any} = {}): DocumentFragment {\n    //     const component: any = JsonSchemaFormService.createComponent(template, context);\n    //     const module = JsonSchemaFormService.createModule(component, this.compiler);\n    //     const factory = module.componentFactories.find((f) => f.componentType === component);\n    //     const componentRef: ComponentRef = factory.create(this.injector, undefined, undefined, this.moduleRef);\n\n    //     componentRef.hostView.detectChanges();\n    //     const fragment = JsonSchemaFormService.getDocumentFragment(componentRef);\n    //     componentRef.destroy();\n\n    //     return fragment;\n    // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LayoutItem.html":{"url":"interfaces/LayoutItem.html","title":"interface - LayoutItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LayoutItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/layout-item.data.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        key\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        options\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [others: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/layout-item.data.ts:16\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Object path to map this item to a data value \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name for the item.  Will be used as the input[name] \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Container for options to set on widgets.\nNOTE: this is optional as any undeclared property will automatically be put into an options contianer\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Specify what type of widget is used to represent the data.\nIf not is specified, the JSON Schema will be used to determine the most appropriate widget\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface LayoutItem {\n    /** Object path to map this item to a data value */\n    key?: string;\n    /** Name for the item.  Will be used as the input[name] */\n    name?: string;\n    /**\n     * Container for options to set on widgets.\n     * NOTE: this is optional as any undeclared property will automatically be put into an options contianer\n     */\n    options?: {[others: string]: any};\n    /**\n     * Specify what type of widget is used to represent the data.\n     * If not is specified, the JSON Schema will be used to determine the most appropriate widget\n     */\n    type?: string;\n\n    [others: string]: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LayoutNode.html":{"url":"classes/LayoutNode.html","title":"class - LayoutNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LayoutNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/layout-node.ts\n        \n\n            \n                Description\n            \n            \n                The LayoutNode contains the logic to parse a LayoutItem along with its Schema.\nA LayoutNode acts, to some degree, as a proxy of the LayoutItem, augmenting data\nas needed. This gives the system a specific api to work with while allowing the\nuser to pass in variable data, so a degree.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    layoutDefinition\n                                \n                                \n                                    name\n                                \n                                \n                                    dataPointer\n                                \n                                \n                                    type\n                                \n                                \n                                    content\n                                \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutItem: LayoutItem, schema?: JSONSchema7)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/layout-node.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        layoutItem\n                                                  \n                                                        \n                                                                        LayoutItem\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                    JSONSchema7\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : uniqueId('control')\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/layout-node.ts:22\n                            \n                        \n\n                \n                    \n                        Unique Identifier for the item \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(layoutItem: LayoutItem | string, schemaService: SchemaService)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/layout-node.ts:40\n                \n            \n\n\n            \n                \n                    Creates a LayoutNode\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    layoutItem\n                                    \n                                                LayoutItem | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nA LayoutItem presented by the user.  If a string is given, it is converted into a LayoutItem\n\n\n                                    \n                                \n                                \n                                    schemaService\n                                    \n                                                SchemaService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nService for looking up related Schema definition\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LayoutNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        layoutDefinition\n                    \n                \n\n                \n                    \n                        getlayoutDefinition()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/layout-node.ts:58\n                                \n                            \n                    \n                        \n                                Copy of the original layoutItem \n\n\n                                \n                                    Returns :         LayoutItem\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/layout-node.ts:62\n                                \n                            \n                    \n                        \n                                Name for the item.  Will be used as the input[name] \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        dataPointer\n                    \n                \n\n                \n                    \n                        getdataPointer()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/layout-node.ts:66\n                                \n                            \n                    \n                        \n                                JSON path for accessing data for this layout item \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/layout-node.ts:70\n                                \n                            \n                    \n                        \n                                Type of widget is used to represent the data \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n\n                \n                    \n                        getcontent()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/layout-node.ts:75\n                                \n                            \n                    \n                        \n                                HTML content to be rendered inside the widget \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/layout-node.ts:79\n                                \n                            \n                    \n                        \n                                Options for the widget \n\n\n                                \n                                    Returns :         LayoutOptions\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { JSONSchema7 } from 'json-schema';\nimport { cloneDeep, defaultTo, isString, mapKeys, omit, pick, uniqueId } from 'lodash';\nimport { Memoize } from 'lodash-decorators';\n\nimport { LayoutItem } from './layout-item.data';\nimport { LayoutOptions } from './layout-options.data';\nimport { SchemaService } from './schema.service';\n\n/**\n * The LayoutNode contains the logic to parse a LayoutItem along with its Schema.\n * A LayoutNode acts, to some degree, as a proxy of the LayoutItem, augmenting data\n * as needed. This gives the system a specific api to work with while allowing the\n * user to pass in variable data, so a degree.\n */\nexport class LayoutNode {\n    /** Reference to the user defined layout item */\n    private readonly layoutItem: LayoutItem;\n    /** Reference to the schema that pertains the layout */\n    private readonly schema: JSONSchema7;\n\n    /** Unique Identifier for the item */\n    public readonly id: string = uniqueId('control');\n\n    /**\n     * @throws Will throw an error if there is no layout.type or schema.type\n     */\n    constructor(layoutItem: LayoutItem, schema?: JSONSchema7) {\n        if (!layoutItem.type && !(schema && schema.type)) {\n            throw new Error('Missing \"type\"....');\n        }\n        this.layoutItem = layoutItem;\n        this.schema = schema;\n    }\n\n    /**\n     * Creates a LayoutNode\n     * @param layoutItem - A LayoutItem presented by the user.  If a string is given, it is converted into a LayoutItem\n     * @param schemaService - Service for looking up related Schema definition\n     */\n    public static create(layoutItem: LayoutItem | string, schemaService: SchemaService): LayoutNode {\n        const item: LayoutItem = isString(layoutItem)\n            ? {key: layoutItem}\n            : layoutItem;\n        const schema: JSONSchema7 = schemaService.dataPointerMap.get(LayoutNode.getPointer(item.key));\n\n        return new LayoutNode(item, schema);\n    }\n\n    /** Normalizes a key(object.path or json/path) to json path */\n    private static getPointer(key: string): string {\n        const pointer = defaultTo(key, '');\n\n        return pointer.charAt(0) === '/'\n            ? pointer\n            : `/${pointer.replace(/\\./g, '/')}`;\n    }\n    /** Copy of the original layoutItem */\n    @Memoize() get layoutDefinition(): LayoutItem {\n        return cloneDeep(this.layoutItem);\n    }\n    /** Name for the item.  Will be used as the input[name] */\n    @Memoize() get name(): string {\n        return this.layoutItem.name || this.dataPointer.split('/').pop();\n    }\n    /** JSON path for accessing data for this layout item */\n    @Memoize() get dataPointer(): string {\n        return LayoutNode.getPointer(this.layoutItem.key);\n    }\n    /** Type of widget is used to represent the data */\n    @Memoize() get type(): string {\n        // TODO: handle array of types\n        return this.layoutItem.type || defaultTo(this.schema, {}).type;\n    }\n    /** HTML content to be rendered inside the widget */\n    @Memoize() get content(): string {\n        return isString(this.layoutItem.content) ? this.layoutItem.content : undefined;\n    }\n    /** Options for the widget */\n    @Memoize() get options(): LayoutOptions {\n        return {\n            ...pick(this.schema, ['title', 'description']),\n            ...mapKeys(pick(this.schema, ['readOnly']), () => 'readonly'),\n            ...omit(this.layoutItem, ['key', 'type', 'name', 'content', 'options']),\n            ...defaultTo(this.layoutItem.options, {})\n        };\n    }\n\n    // $ref?: any;\n    // arrayItem?;\n    // arrayItemType?;\n    // dataType?;\n    // items?: Array;\n    // recursiveReference?;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LayoutOptions.html":{"url":"interfaces/LayoutOptions.html","title":"interface - LayoutOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LayoutOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/layout-options.data.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        accesskey\n                                \n                                \n                                            Optional\n                                        dirname\n                                \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        htmlClass\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        readonly\n                                \n                                \n                                            Optional\n                                        style\n                                \n                                \n                                            Optional\n                                        tabindex\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [others: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/layout-options.data.ts:32\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accesskey\n                                    \n                                \n                                \n                                    \n                                        accesskey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/accesskey \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dirname\n                                    \n                                \n                                \n                                    \n                                        dirname:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#dirname \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#disabled \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        htmlClass\n                                    \n                                \n                                \n                                    \n                                        htmlClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/class \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readonly\n                                    \n                                \n                                \n                                    \n                                        readonly:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#readonly \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                    \n                                \n                                \n                                    \n                                        style:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/style \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tabindex\n                                    \n                                \n                                \n                                    \n                                        tabindex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/title \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface LayoutOptions {\n    /* Global HTML attributes */\n    /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/accesskey} */\n    accesskey?: string;\n    /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/class} */\n    htmlClass?: string;\n    /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/style} */\n    style?: string;\n    /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex} */\n    tabindex?: number;\n    /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/title} */\n    title?: string;\n\n    /* Global HTML Input attributes */\n    /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#dirname} */\n    dirname?: boolean;\n    /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#disabled} */\n    disabled?: boolean;\n    /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#readonly} */\n    readonly?: boolean;\n\n    /* Attribute for setting a icon */\n    icon?: {\n        /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/image#alt} */\n        alt?: string;\n        /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/image#height} */\n        height?: number;\n        /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/image#src} */\n        src: string;\n        /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/image#width} */\n        width?: number;\n    };\n\n    [others: string]: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LayoutService.html":{"url":"injectables/LayoutService.html","title":"injectable - LayoutService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LayoutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/layout.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides services for handling layouts \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setLayout\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    layout\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(schemaService: SchemaService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/layout.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        schemaService\n                                                  \n                                                        \n                                                                        SchemaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLayout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLayout(value: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/layout.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        layout\n                    \n                \n\n                \n                    \n                        getlayout()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/layout.service.ts:18\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                        \n\n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nList of Layout Nodes to be displayed in the UI\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         Array\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { difference } from 'lodash';\n\nimport { JSONSchema7Definition } from 'json-schema';\n\nimport { LayoutItem } from './layout-item.data';\nimport { LayoutNode } from './layout-node';\nimport { SchemaService } from './schema.service';\n\n/** Provides services for handling layouts */\n@Injectable()\nexport class LayoutService {\n    private _layout: Array = [];\n    /**\n     * @param value - List of Layout Nodes to be displayed in the UI\n     */\n    get layout(): Array {\n        return this._layout;\n    }\n\n    constructor(private readonly schemaService: SchemaService) {}\n\n    public setLayout(value: Array): void {\n        this._layout = this.buildLayout(value);\n    }\n\n    private buildLayout(layout: Array): Array {\n        const schemaPointers: Map = this.schemaService.dataPointerMap;\n        const mappedPointers: Set = new Set();\n        let starIndex = -1;\n\n        const mappedLayout: Array =\n            layout.reduce((currentLayout: Array, layoutItem: LayoutItem | string, i: number): Array => {\n            let newLayout: Array = currentLayout;\n\n            if (layoutItem === '*') {\n                starIndex = i;\n            } else {\n                try {\n                    const layoutNode: LayoutNode = LayoutNode.create(layoutItem, this.schemaService);\n                    mappedPointers.add(layoutNode.dataPointer);\n                    newLayout = newLayout.concat(layoutNode);\n                } catch (err) {\n                    console.error('buildLayout error: Form layout element not recognized:');\n                    console.error(layoutItem);\n                }\n            }\n\n            return newLayout;\n        }, []);\n\n        if (starIndex !== -1) {\n            const availablePointers: Array = Array.from(schemaPointers.keys());\n            mappedLayout.splice(starIndex, 0, ...this.buildLayout(difference(availablePointers, Array.from(mappedPointers))));\n        }\n\n        return mappedLayout;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchemaService.html":{"url":"injectables/SchemaService.html","title":"injectable - SchemaService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SchemaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/schema.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides services for parsing JSON Schema and validating data \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    schema\n                                \n                                \n                                    dataPointerMap\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/schema.service.ts:49\n                \n            \n\n\n            \n                \n                    Validates data based on set JSON Schema\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ndata to be valdiated\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        schema\n                    \n                \n\n                \n                    \n                        getschema()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/schema.service.ts:21\n                                \n                            \n\n                \n                    \n                        setschema(value)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/schema.service.ts:17\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nJSON Schema to be used for validation\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        dataPointerMap\n                    \n                \n\n                \n                    \n                        getdataPointerMap()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/schema.service.ts:30\n                                \n                            \n                    \n                        \n                                Gets a map of all the relevant json data pointers\nand their related schema definitions.  This allows for\neasy lookup of a schema reference from a json pointer.\n\n\n                                \n                                    Returns :     Map\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport traverse from 'json-schema-traverse';\n\nimport Ajv from 'ajv';\n\nimport { JSONSchema7, JSONSchema7Definition } from 'json-schema';\n\n/** Provides services for parsing JSON Schema and validating data */\n@Injectable()\nexport class SchemaService {\n    // TODO: Setter function to automatically upgrade schema version?\n    private _schema: JSONSchema7 = {};\n    /**\n     * @param value - JSON Schema to be used for validation\n     */\n    set schema(value: JSONSchema7) {\n        this._schema = value;\n        this.compileSchema();\n    }\n    get schema(): JSONSchema7 {\n        return this._schema;\n    }\n\n    /**\n     * Gets a map of all the relevant json data pointers\n     * and their related schema definitions.  This allows for\n     * easy lookup of a schema reference from a json pointer.\n     */\n    get dataPointerMap(): Map {\n        const pointers: Map = new Map();\n        traverse(this.schema, {cb: (...args) => {\n            const [schema, pointer, , , , parentSchema] = args;\n            if (pointer && parentSchema && parentSchema.type !== 'array' && schema.type !== 'object') {\n                pointers.set(pointer.replace(/\\/properties/g, ''), schema);\n            }\n        }});\n\n        return pointers;\n    }\n\n    private readonly ajv: Ajv.Ajv = new Ajv({ allErrors: true, jsonPointers: true, unknownFormats: 'ignore' });\n    private validator: Ajv.ValidateFunction;\n\n    /**\n     * Validates data based on set JSON Schema\n     * @param data - data to be valdiated\n     */\n    validate(data: any): boolean {\n        return this.validator(data);\n    }\n\n    private compileSchema() {\n        this.ajv.removeSchema(this.schema);\n        this.validator = this.ajv.compile(this.schema);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectWidgetComponent.html":{"url":"components/SelectWidgetComponent.html","title":"component - SelectWidgetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectWidgetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-json-schema-form/src/lib/widget-library/container/select-widget/select-widget.component.ts\n\n\n    \n        Description\n    \n    \n        Dynamically creates a widget component based on a layout node.\nChanges in @Input attributes will be passed onto the created widget.\n\n    \n\n    \n        Extends\n    \n    \n                Widget\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                jsf-select-widget\n            \n\n            \n                styleUrls\n                ./select-widget.component.css\n            \n\n\n\n            \n                templateUrl\n                ./select-widget.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                widgetContainer\n                            \n                            \n                                controlDisabled\n                            \n                            \n                                controlName\n                            \n                            \n                                controlValue\n                            \n                            \n                                formControl\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataIndex\n                            \n                            \n                                layoutIndex\n                            \n                            \n                                layoutNode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactory: ComponentFactoryResolver, widgetLibraryService: WidgetLibraryService, jsf: JsonSchemaFormService, elementDataStorage: ElementDataStorageService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/widget-library/container/select-widget/select-widget.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactory\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        widgetLibraryService\n                                                  \n                                                        \n                                                                        WidgetLibraryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jsf\n                                                  \n                                                        \n                                                                        JsonSchemaFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementDataStorage\n                                                  \n                                                        \n                                                                        ElementDataStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataIndex\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:26\n\n                            \n                        \n                \n                    \n                        Index of the data in data array \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutIndex\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:24\n\n                            \n                        \n                \n                    \n                        Index of the layout in the Layout array \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutNode\n                    \n                \n                \n                    \n                        Type :         LayoutNode\n\n                    \n                \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:22\n\n                            \n                        \n                \n                    \n                        Layout Node describing the control \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(event: Event)\n                \n            \n\n\n            \n                \n                    Inherited from         Widget\n\n                \n            \n            \n                \n                        Defined in         Widget:64\n\n                \n            \n\n\n            \n                \n                    Update the value of the control\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nChange event\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            widgetContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ViewContainerRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('widgetContainer', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/container/select-widget/select-widget.component.ts:25\n                            \n                        \n\n                \n                    \n                        Placeholder for injecting widget \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:11\n\n                            \n                        \n\n                \n                    \n                        Flag to disable the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:13\n\n                            \n                        \n\n                \n                    \n                        Name for the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:15\n\n                            \n                        \n\n                \n                    \n                        Value of the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AbstractControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:17\n\n                            \n                        \n\n                \n                    \n                        Associated FormControl for widget \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:19\n\n                            \n                        \n\n                \n                    \n                        Options for the control \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n    Component, ComponentFactoryResolver, ComponentRef,\n    OnChanges, OnInit, ViewChild, ViewContainerRef\n} from '@angular/core';\n\nimport { ElementDataStorageService } from '../../../element-data-storage.service';\nimport { JsonSchemaFormService } from '../../../json-schema-form.service';\n\nimport { Widget } from '../../widget';\nimport { WidgetLibraryService } from '../../widget-library.service';\n\n/**\n * Dynamically creates a widget component based on a layout node.\n * Changes in @Input attributes will be passed onto the created widget.\n */\n@Component({\n    selector: 'jsf-select-widget',\n    styleUrls: ['./select-widget.component.css'],\n    templateUrl: './select-widget.component.html'\n})\nexport class SelectWidgetComponent extends Widget implements OnInit, OnChanges {\n    private newComponent: ComponentRef;\n\n    /** Placeholder for injecting widget */\n    @ViewChild('widgetContainer', { read: ViewContainerRef }) widgetContainer: ViewContainerRef;\n\n    constructor(private readonly componentFactory: ComponentFactoryResolver,\n        private readonly widgetLibraryService: WidgetLibraryService,\n        jsf: JsonSchemaFormService,\n        elementDataStorage: ElementDataStorageService) {\n            super(jsf, elementDataStorage);\n    }\n\n    ngOnInit() {\n        this.updateComponent();\n    }\n\n    ngOnChanges() {\n        this.updateComponent();\n    }\n\n    private updateComponent(): void {\n        this.createComponent();\n        if (this.newComponent) {\n            for (const input of ['layoutNode', 'layoutIndex', 'dataIndex']) {\n                this.newComponent.instance[input] = this[input];\n            }\n        }\n    }\n\n    private createComponent(): void {\n        // TODO: What if layoutNode were to change?  The form would be incorrect.\n        if (!this.newComponent && this.layoutNode && this.layoutNode.type) {\n            this.newComponent = this.widgetContainer.createComponent(\n                this.componentFactory.resolveComponentFactory(\n                    this.widgetLibraryService.getWidget(this.layoutNode.type) as any\n                ),\n                undefined,\n                undefined,\n                this.generateNgContent()\n            );\n        }\n    }\n\n    private generateNgContent(): Array> {\n        if (this.layoutNode.content) {\n            return [ [ this.jsf.compileTemplate(this.layoutNode.content, this.layoutNode.options) ] ];\n        }\n    }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./select-widget.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'jsf-button'},{'name': 'HiddenComponent', 'selector': 'jsf-hidden'},{'name': 'JsonSchemaFormComponent', 'selector': 'jsf-json-schema-form'},{'name': 'SelectWidgetComponent', 'selector': 'jsf-select-widget'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectWidgetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Widget.html":{"url":"classes/Widget.html","title":"class - Widget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Widget\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/widget-library/widget.ts\n        \n\n            \n                Description\n            \n            \n                Widget \n\n            \n\n\n            \n                Implements\n            \n            \n                            OnChanges\n                            OnInit\n                            AfterViewInit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                controlDisabled\n                            \n                            \n                                controlName\n                            \n                            \n                                controlValue\n                            \n                            \n                                formControl\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataIndex\n                            \n                            \n                                layoutIndex\n                            \n                            \n                                layoutNode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jsf: JsonSchemaFormService, elementDataStorage: ElementDataStorageService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget.ts:29\n                            \n                        \n\n                \n                    \n                            constructor \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jsf\n                                                  \n                                                        \n                                                                        JsonSchemaFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementDataStorage\n                                                  \n                                                        \n                                                                        ElementDataStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget.ts:11\n                            \n                        \n\n                \n                    \n                        Flag to disable the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget.ts:13\n                            \n                        \n\n                \n                    \n                        Name for the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget.ts:15\n                            \n                        \n\n                \n                    \n                        Value of the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AbstractControl\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget.ts:17\n                            \n                        \n\n                \n                    \n                        Associated FormControl for widget \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget.ts:19\n                            \n                        \n\n                \n                    \n                        Options for the control \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget.ts:64\n                \n            \n\n\n            \n                \n                    Update the value of the control\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nChange event\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataIndex\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget.ts:26\n                            \n                        \n                \n                    \n                        Index of the data in data array \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutIndex\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget.ts:24\n                            \n                        \n                \n                    \n                        Index of the layout in the Layout array \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutNode\n                    \n                \n                \n                    \n                        Type :         LayoutNode\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget.ts:22\n                            \n                        \n                \n                    \n                        Layout Node describing the control \n\n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { AfterViewInit, ElementRef, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { ElementDataStorageService } from '../element-data-storage.service';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\nimport { LayoutNode } from '../layout-node';\n\n/** Widget */\nexport abstract class Widget implements OnChanges, OnInit, AfterViewInit {\n    /** Flag to disable the control */\n    controlDisabled = false;\n    /** Name for the control */\n    controlName: string;\n    /** Value of the control */\n    controlValue: any;\n    /** Associated FormControl for widget */\n    formControl: AbstractControl;\n    /** Options for the control */\n    options: any;\n\n    /** Layout Node describing the control */\n    @Input() layoutNode: LayoutNode;\n    /** Index of the layout in the Layout array */\n    @Input() layoutIndex: Array;\n    /** Index of the data in data array */\n    @Input() dataIndex: Array;\n\n    /** Reference to the underlying control. Look to replace using FormControl */\n    @ViewChild('control', {read: ElementRef}) private readonly control: ElementRef;\n\n    /** constructor */\n    constructor(protected jsf: JsonSchemaFormService, protected elementDataStorage: ElementDataStorageService) {}\n\n    /** Propagate layoutNode changes to the ElementDataStorage */\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.layoutNode) {\n            this.updateData();\n        }\n    }\n    /**\n     * Initialize the control and populate the options\n     */\n    ngOnInit() {\n        this.jsf.initializeControl(this);\n        this.options = this.layoutNode.options || {};\n    }\n\n    /** Set the initial layout in the ElementDataStorage */\n    ngAfterViewInit() {\n        this.updateData();\n    }\n\n    /** Update the ElementDataStorage */\n    private updateData(): void {\n        if (this.control) {\n            this.elementDataStorage.set(this.control.nativeElement, 'layout', this.layoutNode.layoutDefinition);\n        }\n    }\n\n    /**\n     * Update the value of the control\n     * @param event - Change event\n     */\n    updateValue(event: Event) {\n        this.jsf.updateValue(this, (event.target).value);\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WidgetLibraryModule.html":{"url":"modules/WidgetLibraryModule.html","title":"module - WidgetLibraryModule","body":"\n                   \n\n\n\n\n    Modules\n    WidgetLibraryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WidgetLibraryModule\n\n\n\ncluster_WidgetLibraryModule_declarations\n\n\n\ncluster_WidgetLibraryModule_exports\n\n\n\n\nButtonComponent\n\nButtonComponent\n\n\n\nWidgetLibraryModule\n\nWidgetLibraryModule\n\nWidgetLibraryModule -->\n\nButtonComponent->WidgetLibraryModule\n\n\n\n\n\nHiddenComponent\n\nHiddenComponent\n\nWidgetLibraryModule -->\n\nHiddenComponent->WidgetLibraryModule\n\n\n\n\n\nSelectWidgetComponent\n\nSelectWidgetComponent\n\nWidgetLibraryModule -->\n\nSelectWidgetComponent->WidgetLibraryModule\n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nWidgetLibraryModule->ButtonComponent \n\n\n\n\n\nHiddenComponent \n\nHiddenComponent \n\nHiddenComponent  -->\n\nWidgetLibraryModule->HiddenComponent \n\n\n\n\n\nSelectWidgetComponent \n\nSelectWidgetComponent \n\nSelectWidgetComponent  -->\n\nWidgetLibraryModule->SelectWidgetComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/widget-library/widget-library.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ButtonComponent\n                        \n                        \n                            HiddenComponent\n                        \n                        \n                            SelectWidgetComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            BASIC_WIDGETS\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ButtonComponent\n                        \n                        \n                            HiddenComponent\n                        \n                        \n                            SelectWidgetComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { BASIC_WIDGETS } from '.';\n\n@NgModule({\n    declarations: [ ...BASIC_WIDGETS ],\n    entryComponents: [ ...BASIC_WIDGETS ],\n    exports: [ ...BASIC_WIDGETS ],\n    imports: [ CommonModule, ReactiveFormsModule ]\n})\nexport class WidgetLibraryModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WidgetLibraryService.html":{"url":"injectables/WidgetLibraryService.html","title":"injectable - WidgetLibraryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WidgetLibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/widget-library/widget-library.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides services for mapping a widget component to a layoutNode type\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWidget\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWidget\n                        \n                        \n                    \n                \n            \n            \n                \ngetWidget(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget-library.service.ts:28\n                \n            \n\n\n            \n                \n                    Gets a widget class from the type\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntype of component\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { ButtonComponent } from './input/button/button.component';\nimport { HiddenComponent } from './input/hidden/hidden.component';\nimport { Widget } from './widget';\n\n/**\n * Provides services for mapping a widget component to a layoutNode type\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class WidgetLibraryService {\n    private readonly defaultWidget = 'hidden';\n\n    private readonly widgets = {\n        button: ButtonComponent,\n        hidden: HiddenComponent,\n        image: ButtonComponent,\n        reset: ButtonComponent,\n        submit: ButtonComponent\n    };\n\n    /**\n     * Gets a widget class from the type\n     * @param type - type of component\n     */\n    getWidget(type: string): typeof Widget {\n        return this.hasWidget(type)\n            ? this.widgets[type]\n            : this.widgets[this.defaultWidget];\n    }\n\n    private hasWidget(type: string): boolean {\n        return !!this.widgets[type];\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.0\n        \n            @angular/cdk : ^7.2.0\n        \n            @angular/common : ~7.2.0\n        \n            @angular/compiler : ~7.2.0\n        \n            @angular/core : ~7.2.0\n        \n            @angular/flex-layout : 7.0.0-beta.24\n        \n            @angular/forms : ~7.2.0\n        \n            @angular/http : ~7.2.0\n        \n            @angular/material : ~7.2.0\n        \n            @angular/platform-browser : ~7.2.0\n        \n            @angular/platform-browser-dynamic : ~7.2.0\n        \n            @angular/router : ~7.2.0\n        \n            @types/ace : 0.0.36\n        \n            @types/json-schema : ^7.0.3\n        \n            @types/lodash : ^4.14.136\n        \n            ajv : ^6.10.0\n        \n            brace : ^0.11.0\n        \n            core-js : ^2.5.4\n        \n            handlebars : ^4.1.2\n        \n            json-schema-traverse : ^0.4.1\n        \n            lodash : ^4.17.14\n        \n            lodash-decorators : ^6.0.1\n        \n            ng2-ace-editor : 0.3.9\n        \n            rxjs : ~6.5.2\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n\nNgxJsonSchemaForm\nA JSON Schema Form builder for Angular 7+, similar to\n\nAngular JSON Schema Form's \n\nNote: This project attemtps to take over where its predecesor left off.\nIt's based off of the above project, but rewritten from the ground up.\nNote: This project is not ready for consumption.  There is still a lot to do to\nbring parity with Angular JSON Schema Form\nCheck out the live demo and play with the examples\nCheck out some examples here.\nUsing Angular JSON Schema Form\nBasic use\nBegin by installing the library in your project\nnpm install ngx-json-schema-form --saveThen import JsonSchemaFormModule in your main application module:\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { JsonSchemaFormModule } from 'ngx-json-schema-form';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n    declarations: [ AppComponent ],\n    imports: [\n        BrowserModule,\n        JsonSchemaFormModule\n    ],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule { }To display a form in your Angular component, simply add the following to your component's template:\nWhere schema is a valid JSON schema object. If you don't already have your own schemas, you can find a bunch of samples to test with in the projects/demo/src/assets/examples folder.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License\nCopyright for portions of project NGX-Json-Schema-Form are held by [David Schnell-Davis, 2014]\nas part of project Angular2-Json-Schema-Form. All other copyright for project NGX-Json-Schema-Form\nare held by [James Scharett, 2019]\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        JsonSchemaFormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WidgetLibraryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JsonSchemaFormModule\n\n\n\ncluster_JsonSchemaFormModule_declarations\n\n\n\ncluster_JsonSchemaFormModule_JsonSchemaFormComponent_providers\n\n\n\ncluster_JsonSchemaFormModule_imports\n\n\n\ncluster_JsonSchemaFormModule_exports\n\n\n\ncluster_WidgetLibraryModule\n\n\n\ncluster_WidgetLibraryModule_declarations\n\n\n\ncluster_WidgetLibraryModule_exports\n\n\n\n\nJsonSchemaFormComponent\n\nJsonSchemaFormComponent\n\n\n\nJsonSchemaFormModule\n\nJsonSchemaFormModule\n\nJsonSchemaFormModule -->\n\nJsonSchemaFormComponent->JsonSchemaFormModule\n\n\n\n\n\nJsonSchemaFormComponent \n\nJsonSchemaFormComponent \n\nJsonSchemaFormComponent  -->\n\nJsonSchemaFormModule->JsonSchemaFormComponent \n\n\n\n\n\nWidgetLibraryModule \n\nWidgetLibraryModule \n\nWidgetLibraryModule  -->\n\nJsonSchemaFormModule->WidgetLibraryModule \n\n\n\n\n\nJsonSchemaFormService\n\nJsonSchemaFormService\n\nJsonSchemaFormComponent -->\n\nJsonSchemaFormService->JsonSchemaFormComponent\n\n\n\n\n\nLayoutService\n\nLayoutService\n\nJsonSchemaFormComponent -->\n\nLayoutService->JsonSchemaFormComponent\n\n\n\n\n\nSchemaService\n\nSchemaService\n\nJsonSchemaFormComponent -->\n\nSchemaService->JsonSchemaFormComponent\n\n\n\n\n\nWidgetLibraryModule\n\nWidgetLibraryModule\n\nJsonSchemaFormModule -->\n\nWidgetLibraryModule->JsonSchemaFormModule\n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nWidgetLibraryModule->ButtonComponent \n\n\n\n\n\nHiddenComponent \n\nHiddenComponent \n\nHiddenComponent  -->\n\nWidgetLibraryModule->HiddenComponent \n\n\n\n\n\nSelectWidgetComponent \n\nSelectWidgetComponent \n\nSelectWidgetComponent  -->\n\nWidgetLibraryModule->SelectWidgetComponent \n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nWidgetLibraryModule -->\n\nButtonComponent->WidgetLibraryModule\n\n\n\n\n\nHiddenComponent\n\nHiddenComponent\n\nWidgetLibraryModule -->\n\nHiddenComponent->WidgetLibraryModule\n\n\n\n\n\nSelectWidgetComponent\n\nSelectWidgetComponent\n\nWidgetLibraryModule -->\n\nSelectWidgetComponent->WidgetLibraryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DataEvent   (projects/.../data-event-plugin.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-json-schema-form/src/lib/data-event-plugin.service.ts\n    \n    \n        \n            \n                \n                    \n                    DataEvent\n                \n            \n            \n                \n                    Event wrapper for piggybacking data on an event \n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BASIC_WIDGETS   (projects/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-json-schema-form/src/lib/widget-library/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BASIC_WIDGETS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    ButtonComponent, HiddenComponent,\n    SelectWidgetComponent\n]\n                        \n                    \n\n                \n                    \n                        List of all Widget Components for ease of use. \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/introduction.html":{"url":"additional-documentation/introduction.html","title":"additional-page - Introduction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n\n\n\nJson Schema\nThe only requirement to using the component is to supply a valid JSON Schema.  The component will parse the schema and display all properties in the order they\nare presented within the schema.\n\nschema.json\n\n{\n    \"$id\": \"https://example.com/person.schema.json\",\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"Person\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"firstName\": {\n            \"type\": \"string\",\n            \"description\": \"The person's first name.\"\n        },\n        \"lastName\": {\n            \"type\": \"string\",\n            \"description\": \"The person's last name.\"\n        },\n        \"age\": {\n            \"description\": \"Age in years which must be equal to or greater than zero.\",\n            \"type\": \"integer\",\n            \"minimum\": 0\n        }\n    }\n}\n\nIn this example, the form will display 3 fields; firstName, lastName and age.  The order is determined by the order of the fields in the schema.  Once you have your schema set, all you need to do is pass it to the component\n\nbasic.component.ts\n\nimport { JSONSchema7 } from 'json-schema';\nimport schema from './schema.json';\n\n@Component({\n    template: ``,\n    ...\n})\nexport class BasicComponent {\n    schema: JSONSchema7 = schema as JSONSchema7;\n    ...\n}\n\nHere we import the schema json and set it as a property on our component.  Then you wire up the schema in the template and\nLayout\nThe deault layout is simply ['*'].  This translates to display everything in the the schema.  The * key is a special command that tells the component to display everything that has not specifically been laid out.  This can become useful when you only care about a few fields and their location.  For example:\n\nschema.json\n\n{\n    \"$id\": \"https://example.com/person.schema.json\",\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"Person\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"question1\": {\n            \"type\": \"boolean\"\n        },\n        \"age\": {\n            \"description\": \"Are you 18 or older?\",\n            \"type\": \"boolean\"\n        },\n        \"question2\": {\n            \"type\": \"boolean\"\n        }\n    }\n}\n\nlayout.json\n\n[\n    \"age\",\n    '*'\n]\n\nlayout.component.ts\n\nimport { JSONSchema7 } from 'json-schema';\nimport schema from './schema.json';\nimport layout from './layout.json';\n\n@Component({\n    template: ``,\n    ...\n})\nexport class LayoutComponent {\n    schema: JSONSchema7 = schema as JSONSchema7;\n    layout: Array = layout;\n    ...\n}\n\nAs you can see, we only care that age is presented first.  All the other properties in the schema are shown after age.\nForm Options\nJust like a native form, you can set the standard form attributes (action, autocomplete, enctype, method, target) on the jsf component.  Most of the time you will not need to set these, but there may be instances in which you need your form to do an actual submit and need these set. For more info on these see Form Attributes.\n\nlogin.component.html\n\n\n\nWidgets\nOptions\nThere are numerous attributes that can be set on a widget which are set via the layout.  The following are currently supported\n\naccesskey\ndirname\ndisabled\nhtmlClass\nname\nreadonly\nstyle\ntabindex\ntitle\n\n\nlayout.json\n\n[{\n    \"type\": \"text\",\n    \"accesskey\": \"n\",\n    \"dirname\": true,\n    \"disabled\": false,\n    \"htmlClass\": \"input-sm\",\n    \"name\": \"name\",\n    \"readonly\": true,\n    \"style\": \"color: #333;\",\n    \"tabindex\": 2,\n    \"title\": \"Name\"\n}]\n\nButton\nThere are 4 types of buttons that jsf supports, button, image, reset and submit.  By default, these will all use the  tag for display.  However, with the exception of image, you can specify custom html via the content option.  This will result in the  being used for display and the content being inserted.  Content can contain simple bindings so that you can bind to various properties of the layout.  For example:\n\nbutton-layout.json\n\n[{\n    \"type\": \"submit\",\n    \"title\": \"Submit\",\n    \"content\": \"{{ options.title }}\",\n    \"icon\": {\n        \"src\": \"/assets/submit.png\",\n        \"width\": 30,\n        \"height\": 30,\n        \"alt\": \"Checkmark\"\n    }\n}]\n\nwill result in\n\nbutton.html\n\n\n    \n    Submit\n\n\nHere you can see we are specifying that the button should contain an image via the content options.  The template binds to the properties of the icon option which results in an image tag being rendered.  The icon option is also used when redering a simple button of type image.\n\nNote: due to current limitation of Angular AOT compilation, use of the angular compile to transpile content strings into HTML DOM is not possible.  Recent Angular changes have restricted the inclusion of the compiler in favor of reducing the file size and load time when in AOT mode.  Therefore, Handlebars is currently being imported to handle the compilation of content string to HTML DOM.\n\n\nWe can also respond to events such as a click.  To do this, we must first bind an event handler to the jsf component\n\nform.component.html\n\n\n\nThen we add a layout with a couple of buttons.  The first button will run an internal command where as the second will run a command specified by layout.onClick.\n\nbuttons-layout.json\n\n[{\n    \"type\": \"button\",\n    \"id\": \"button1\",\n    \"title\": \"Open dialog\"\n}, {\n    \"type\": \"button\",\n    \"id\": \"button2\",\n    \"title\": \"Open Google\",\n    \"onClick\": \"window.open('http://www.google.com/');\"\n}]\n\nLastly, we specify our onClick handler in our component.\n\nform.component.ts\n\nimport layout from './buttons-layout.json';\nimport { DataEvent } from 'ngx-json-schema-form';\n\n@Component({\n    templateUrl: './form.component.html',\n    ...\n})\nexport class LayoutComponent {\n    layout: Array = layout;\n\n    onClick(event: DataEvent): void {\n        if (event.data.id === 'button1') {\n            openDialog(event);\n        } else if (event.data.id === 'button2') {\n            // Run some external code\n            const fn = new Function('event', event.data.onClick);\n            fn(event);\n        }\n    }\n    ...\n}\n\nWhen a button is clicked, the event will bubble up to the jsf form component to which we bound our onClick handler.  Using event metadata (click.data.layout), we can specify that only events in which a target that has an associated data property of layout will trigger the event.  This association is handled internally when a widget is created and acts similarly to jQuery's $.data.  When the event handler is triggered, the layout is passed down with the event via event.data , allowing us to inspect which layout item triggered the event and act accordingly.  In the case of \"button1\", we run and internal method openDialog in order to open an angular dialog component.  With \"button2\" however, we run the external javascript passed in via the onClick property in the layout in order to open a popup dialog to Google.\nNote: running external javascript is usually not a good choice, therefore the jsf library does not internally run the onClick handler.  You will need to handle the conversion from text to javascript yourself and run the code.\nHidden\nHidden widgets are as you expect, then render an .  This is the default for any layout item that can't be propley matched.  For the most part, hidden widgets wont be needed as you simply don't need to render them, their data never changes.  However, in the event that you need to do an actual form submittal, hidden inputs may be necessary and are therfore included.\n\n\n\n\n\nJSON Schema\nLayout\nForm Options\nWidgets\nOptions\nButton\nHidden\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
