var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/ButtonComponent.html",[0,0.723,1,0.723]],["body/components/ButtonComponent.html",[0,0.991,1,1.086,2,1.305,3,0.352,4,0.352,5,1.211,6,1.211,7,1.211,8,1.211,9,0.352,10,0.489,11,0.339,12,0.235,13,1.329,14,2.135,15,0.844,16,2.468,17,2.269,18,2.059,19,0.832,20,1.211,21,2.497,22,2.216,23,2.468,24,2.059,25,3.631,26,1.753,27,3.09,28,0.599,29,1.305,30,1.753,31,1.753,32,1.753,33,2.06,34,1.534,35,0.979,36,1.943,37,1.509,38,1.753,39,1.753,40,1.509,41,1.043,42,2.059,43,1.086,44,1.33,45,2.135,46,0.991,47,0.057,48,1.028,49,0.951,50,0.848,51,1.457,52,3.155,53,1.423,54,1.131,55,1.423,56,1.329,57,0.677,58,1.423,59,1.211,60,1.211,61,2.06,62,3.631,63,2.135,64,3.09,65,3.09,66,3.09,67,2.216,68,0.979,69,1.15,70,1.423,71,1.211,72,0.991,73,1.211,74,0.902,75,0.902,76,1.423,77,1.211,78,1.211,79,0.782,80,1.423,81,1.423,82,1.211,83,1.423,84,1.043,85,1.423,86,0.718,87,0.352,88,1.043,89,0.352,90,0.287,91,1.423,92,1.423,93,2.135,94,1.423,95,2.135,96,2.135,97,3.09,98,0.782,99,1.753,100,1.509,101,1.211,102,2.257,103,1.211,104,1.211,105,0.583,106,1.211,107,0.782,108,1.211,109,0.677,110,1.211,111,1.211,112,1.211,113,0.022,114,0.032,115,0.022]],["title/components/HiddenComponent.html",[0,0.723,105,0.723]],["body/components/HiddenComponent.html",[0,1.039,1,0.635,2,1.388,3,0.384,4,0.384,5,1.32,6,1.32,7,1.32,8,1.32,9,0.384,10,0.442,11,0.332,12,0.23,13,1.202,15,0.897,16,2.624,17,2.211,18,2.188,19,0.842,20,1.32,21,2.569,22,2.272,24,2.188,26,1.863,28,0.628,29,1.388,30,1.863,31,1.863,32,1.863,33,2.16,34,1.608,35,1.041,36,1.604,37,1.604,38,1.863,39,1.863,40,1.604,41,1.136,42,2.188,43,1.129,44,1.338,46,0.897,47,0.056,48,1.019,49,0.956,50,0.767,51,1.514,52,3.22,53,1.55,54,1.202,55,1.55,56,1.394,57,0.737,58,1.55,59,1.32,60,1.32,61,1.32,67,2.02,68,0.737,69,0.737,70,1.55,71,1.32,72,1.039,73,1.32,74,0.983,75,0.983,76,1.55,77,1.32,78,1.32,79,0.852,80,1.55,81,1.55,82,1.32,83,1.55,84,1.136,85,1.55,86,0.753,87,0.384,88,1.136,89,0.384,90,0.313,91,1.55,98,0.852,99,1.863,100,1.604,101,1.32,102,2.347,103,1.32,104,1.32,105,1.129,106,1.32,107,0.852,108,1.32,109,0.737,110,1.32,111,1.32,112,1.32,113,0.024,114,0.034,115,0.024,116,2.326,117,3.284,118,2.624,119,3.807,120,3.284,121,2.326]],["title/components/JsonSchemaFormComponent.html",[0,0.723,107,0.969]],["body/components/JsonSchemaFormComponent.html",[0,0.794,1,0.406,2,0.992,3,0.245,4,0.245,5,0.843,6,0.843,7,0.843,8,0.843,9,0.245,10,0.515,11,0.408,12,0.289,15,0.794,19,0.245,20,0.843,21,2.171,22,1.956,26,1.332,28,0.48,35,0.744,37,1.146,41,1.146,43,0.902,44,0.983,46,0.641,47,0.057,48,0.772,49,0.575,50,0.548,51,0.859,54,1.401,56,1.521,57,0.471,68,0.744,69,1.212,75,0.992,86,0.792,87,0.245,88,0.726,89,0.245,90,0.2,98,0.544,99,1.875,100,1.146,101,0.843,102,1.875,103,0.843,104,0.843,105,0.406,106,0.843,107,1.21,108,0.843,109,0.471,110,0.843,111,0.843,112,0.843,113,0.016,114,0.025,115,0.016,122,2.549,123,1.486,124,2.203,125,2.397,126,1.564,127,0.992,128,2.347,129,2.347,130,3.681,131,2.203,132,2.347,133,2.347,134,2.347,135,1.875,136,3.306,137,2.347,138,1.564,139,2.347,140,2.347,141,0.99,142,2.347,143,1.875,144,2.347,145,2.347,146,2.347,147,1.187,148,2.347,149,1.875,150,1.875,151,1.564,152,2.324,153,1.939,154,2.347,155,2.347,156,1.332,157,2.087,158,2.028,159,2.347,160,3.306,161,2.347,162,1.486,163,1.486,164,1.486,165,2.203,166,2.347,167,2.347,168,2.324,169,1.486,170,1.875,171,1.486,172,2.347,173,2.347,174,1.486,175,1.486,176,2.398,177,2.347,178,1.486,179,1.486,180,0.99,181,1.486,182,1.486,183,1.187,184,2.347,185,1.486,186,1.486,187,1.486,188,1.486,189,1.486,190,1.486,191,1.486,192,1.486,193,1.486,194,1.486,195,0.628,196,1.187,197,1.486,198,1.486,199,1.486,200,1.486,201,1.486,202,1.187,203,1.486,204,1.486,205,1.187,206,1.486,207,1.486,208,1.486,209,1.187,210,2.91,211,1.486,212,1.187,213,2.91,214,1.486,215,1.486,216,1.486,217,2.347,218,2.91,219,1.486,220,1.486,221,1.486,222,1.486,223,1.486,224,1.486,225,1.486,226,1.486,227,1.486,228,1.486,229,1.486,230,1.486,231,1.486,232,1.486,233,1.486,234,1.486,235,1.693,236,1.486,237,1.651,238,0.99,239,2.347,240,1.486,241,1.486,242,2.91,243,0.726,244,1.486,245,0.843,246,1.486,247,1.486,248,1.486,249,1.486,250,1.486,251,0.99,252,1.486,253,1.486,254,1.486,255,1.486,256,1.486,257,1.486,258,1.486]],["title/modules/JsonSchemaFormModule.html",[127,1.118,259,1.502]],["body/modules/JsonSchemaFormModule.html",[3,0.5,4,0.5,9,0.5,10,0.408,11,0.315,12,0.242,19,0.5,43,1.191,47,0.057,86,0.912,87,0.5,89,0.5,90,0.408,98,1.11,107,1.954,113,0.032,114,0.041,115,0.032,122,2.02,127,1.281,156,1.72,157,2.129,158,2.129,195,1.281,259,2.923,260,1.48,261,1.281,262,2.906,263,2.02,264,2.906,265,2.422,266,2.422,267,2.422,268,2.422,269,2.422,270,2.548,271,2.619,272,2.02,273,3.032,274,3.14,275,3.14,276,2.02,277,3.14,278,2.02,279,3.032,280,3.032]],["title/injectables/JsonSchemaFormService.html",[43,0.723,281,0.839]],["body/injectables/JsonSchemaFormService.html",[3,0.497,4,0.497,9,0.497,10,0.585,11,0.349,12,0.272,15,0.822,17,1.47,19,0.821,28,0.497,29,1.653,35,1.24,36,1.911,43,1.068,44,1.068,46,1.068,47,0.057,48,0.914,49,0.774,50,0.914,68,1.24,69,1.458,72,1.256,74,1.272,75,1.272,86,0.774,87,0.497,89,0.497,90,0.405,113,0.032,114,0.041,115,0.032,122,2.896,130,2.406,235,1.272,243,2.329,251,2.607,281,1.24,282,1.47,283,3.011,284,3.913,285,3.913,286,4.347,287,3.011,288,3.913,289,3.126,290,3.913,291,3.913,292,3.913,293,3.011,294,3.011,295,3.011,296,3.011,297,3.011,298,3.913]],["title/interfaces/LayoutItem.html",[57,0.839,299,1.764]],["body/interfaces/LayoutItem.html",[3,0.453,4,0.453,9,0.453,10,0.369,11,0.333,12,0.231,19,0.732,28,0.453,29,1.555,34,2.012,47,0.057,48,1.113,49,1.023,50,1.182,51,1.52,54,1.744,57,1.166,72,1.005,79,1.883,89,0.453,113,0.029,114,0.039,115,0.029,165,3.174,243,2.166,299,1.828,300,2.744,301,2.744,302,2.744,303,4.437,304,3.544,305,3.544,306,3.544,307,3.68,308,3.68,309,3.805,310,3.68,311,2.94,312,3.68,313,3.68,314,3.68,315,3.68,316,3.68,317,3.68,318,2.744,319,2.744,320,2.744,321,2.744,322,2.744]],["title/injectables/LayoutService.html",[157,1.293,281,0.839]],["body/injectables/LayoutService.html",[3,0.231,4,0.527,9,0.231,10,0.377,11,0.256,12,0.194,15,0.611,19,0.231,28,0.576,34,0.946,44,0.611,46,0.382,47,0.058,48,0.523,49,0.553,50,0.327,51,1.637,56,1.79,57,1.288,68,0.886,69,0.443,72,0.764,79,0.513,86,0.553,87,0.231,89,0.231,90,0.188,92,0.933,94,2.13,100,1.366,113,0.015,114,0.024,115,0.015,125,1.366,126,0.933,131,1.492,138,0.933,157,1.093,180,0.933,202,1.788,212,1.118,235,1.182,245,2.307,261,0.591,281,0.709,282,0.684,304,1.118,305,3.435,306,1.788,309,2.235,311,1.118,323,1.4,324,1.492,325,1.492,326,2.239,327,2.239,328,1.788,329,1.4,330,1.4,331,1.4,332,1.4,333,1.788,334,2.239,335,2.239,336,1.4,337,1.4,338,2.239,339,1.4,340,1.983,341,1.118,342,1.4,343,2.239,344,1.4,345,2.239,346,1.4,347,1.4,348,1.4,349,1.4,350,3.126,351,2.239,352,1.4,353,3.196,354,3.196,355,1.4,356,2.797,357,4.943,358,1.4,359,1.4,360,1.4,361,3.196,362,1.4,363,1.4,364,1.4,365,2.797,366,2.239,367,1.4,368,2.797,369,2.239,370,2.239,371,2.239,372,1.4,373,1.4,374,1.4,375,2.797,376,1.4,377,1.4,378,2.239,379,2.235,380,1.4,381,1.4,382,1.4,383,1.4,384,1.4,385,1.4,386,1.4,387,1.4,388,1.4,389,1.4,390,1.4,391,1.4,392,1.4,393,1.4,394,1.4,395,1.4,396,1.4,397,1.4,398,1.4,399,1.4,400,1.4,401,1.4,402,1.4,403,1.4,404,1.4,405,1.4,406,1.4,407,1.4,408,1.4,409,1.4,410,1.4,411,1.4,412,1.4,413,1.4,414,1.4,415,1.4,416,1.4,417,1.4,418,1.4,419,2.797,420,1.4,421,1.4,422,2.797,423,1.4,424,1.118,425,1.118,426,1.4,427,2.239,428,1.4,429,1.4,430,2.239,431,1.4,432,1.4,433,1.4,434,1.4,435,2.239,436,1.4,437,1.4,438,1.4,439,1.4,440,1.4,441,1.4,442,1.4,443,1.4,444,1.4,445,1.4,446,1.4,447,1.4,448,1.4,449,1.118,450,1.118,451,1.4,452,1.4,453,1.4,454,1.4,455,3.495,456,1.4,457,1.4,458,1.4,459,2.239,460,1.4,461,2.797,462,1.4,463,1.4,464,1.4,465,3.196,466,1.4,467,2.239,468,2.239,469,1.4,470,1.4,471,2.797,472,1.4,473,1.118,474,1.4,475,1.4,476,1.4,477,1.4,478,1.4,479,1.4,480,1.4,481,1.4,482,1.4,483,1.4,484,1.4]],["title/injectables/SchemaService.html",[158,1.293,281,0.839]],["body/injectables/SchemaService.html",[3,0.437,4,0.437,9,0.437,10,0.589,11,0.407,12,0.289,15,1.114,28,0.437,35,1.139,44,1.114,46,0.982,47,0.057,48,0.84,49,0.524,50,0.84,54,1.796,68,1.139,69,0.84,72,1.114,86,0.807,87,0.437,89,0.437,90,0.357,94,1.766,113,0.028,114,0.038,115,0.028,141,2.915,143,2.118,158,1.756,165,2.396,168,3.495,170,2.872,183,2.872,196,2.872,235,1.848,237,1.504,243,1.294,245,2.04,251,2.396,281,1.139,282,1.294,324,2.396,325,2.396,328,2.872,340,2.04,341,3.259,425,2.118,485,2.651,486,3.596,487,3.596,488,2.651,489,2.396,490,3.596,491,2.872,492,2.651,493,2.651,494,2.651,495,2.651,496,3.596,497,2.651,498,2.651,499,2.651,500,2.651,501,2.651,502,2.651,503,3.596,504,2.651,505,2.651,506,2.651,507,2.651,508,2.651,509,2.651,510,2.651,511,2.651,512,2.651,513,2.651,514,2.651,515,2.651]],["title/components/SelectWidgetComponent.html",[0,0.723,109,0.839]],["body/components/SelectWidgetComponent.html",[0,1.08,1,0.499,2,1.163,3,0.301,4,0.301,5,1.037,6,1.037,7,1.037,8,1.037,9,0.301,10,0.446,11,0.317,12,0.22,13,1.213,15,0.752,17,2.031,18,1.835,19,0.848,20,1.037,21,2.36,22,2.22,24,1.835,26,1.562,28,0.546,29,1.163,30,1.562,31,1.562,32,1.562,33,1.88,34,1.4,35,0.872,36,1.344,37,1.344,38,1.88,39,1.88,40,1.801,41,0.892,43,1.007,44,1.285,46,0.752,47,0.057,48,0.924,49,0.916,50,0.643,51,1.35,52,3.029,53,1.217,54,1.008,55,1.217,56,1.449,57,0.579,58,1.217,59,1.88,60,1.037,61,1.037,67,1.801,68,0.579,69,1.05,70,1.217,71,1.037,72,0.905,73,1.562,74,0.772,75,0.772,76,1.217,77,1.037,78,1.037,79,0.669,80,1.217,81,1.217,82,1.037,83,1.217,84,0.892,85,1.217,86,0.729,87,0.301,88,0.892,89,0.301,90,0.246,91,1.217,98,0.669,99,1.562,100,1.344,101,1.037,102,2.093,103,1.037,104,1.037,105,0.499,106,1.037,107,0.669,108,1.037,109,1.169,110,2.521,111,1.037,112,1.037,113,0.019,114,0.029,115,0.019,125,0.892,151,1.835,152,2.647,153,2.208,176,2.208,235,1.558,237,1.562,238,1.217,243,0.892,350,1.46,424,2.2,489,1.835,516,3.314,517,3.314,518,1.827,519,2.754,520,2.754,521,2.754,522,2.754,523,2.754,524,2.754,525,3.314,526,2.754,527,3.314,528,1.827,529,3.689,530,2.876,531,2.754,532,2.754,533,3.958,534,1.827,535,2.754,536,2.754,537,2.754,538,2.754,539,2.754,540,1.827,541,1.827,542,1.827,543,1.827,544,2.754,545,1.827,546,1.827,547,1.827,548,3.314,549,1.827,550,1.827,551,1.827,552,1.827,553,1.827,554,1.827,555,1.827,556,1.827]],["title/classes/Widget.html",[19,0.437,90,0.356]],["body/classes/Widget.html",[3,0.352,4,0.352,9,0.352,10,0.655,11,0.395,12,0.273,13,1.782,15,0.843,17,2.425,19,0.725,22,1.507,28,0.696,29,1.304,30,2.058,31,2.058,32,2.058,33,2.393,34,1.858,35,0.978,36,1.507,37,1.507,38,2.058,39,2.058,40,1.771,41,1.771,42,1.421,43,1.085,44,1.312,46,0.843,47,0.057,48,0.929,49,0.936,50,0.721,51,1.701,54,1.456,56,1.661,57,1.149,59,1.751,60,1.751,61,1.751,67,2.215,68,0.675,69,0.675,71,1.751,72,1.152,73,1.751,74,0.901,75,1.304,77,1.751,78,1.751,79,1.13,82,2.058,84,1.507,86,0.786,87,0.352,88,1.041,89,0.352,90,0.287,113,0.022,114,0.032,115,0.022,151,2.056,153,2.417,176,2.649,180,1.421,238,1.421,340,1.21,557,2.132,558,2.132,559,3.086,560,2.132,561,2.132,562,2.132,563,2.132,564,2.132,565,2.132,566,2.132,567,2.132,568,1.421,569,2.132,570,2.132,571,2.132,572,2.132,573,2.132,574,2.132,575,2.132,576,2.132,577,2.132]],["title/modules/WidgetLibraryModule.html",[127,1.118,270,1.293]],["body/modules/WidgetLibraryModule.html",[1,1.398,3,0.507,4,0.507,9,0.507,10,0.414,11,0.247,12,0.171,13,1.125,47,0.057,86,0.917,87,0.507,89,0.507,90,0.414,98,1.125,105,1.398,109,1.622,113,0.032,114,0.042,115,0.032,127,1.299,156,1.744,195,1.299,260,1.501,261,1.299,262,2.925,263,2.048,264,2.925,270,2.566,271,2.642,272,2.048,274,2.456,275,3.168,276,2.048,277,3.168,278,2.048,568,2.048,578,2.456,579,2.456,580,2.456,581,3.074,582,3.966,583,3.835,584,3.966]],["title/injectables/WidgetLibraryService.html",[281,0.839,530,1.764]],["body/injectables/WidgetLibraryService.html",[0,1.249,1,1.057,3,0.489,4,0.489,9,0.489,10,0.521,11,0.311,12,0.215,13,1.418,15,1.057,19,0.818,23,2.368,28,0.489,35,1.227,40,1.891,44,0.809,46,0.809,47,0.057,48,0.692,49,1.006,50,0.692,79,1.675,86,0.905,87,0.489,89,0.489,90,0.581,92,1.975,105,1.057,113,0.031,114,0.041,115,0.031,118,3.094,126,1.975,235,1.823,237,2.197,245,2.197,278,2.581,281,1.227,282,1.447,289,2.368,324,2.581,325,2.581,340,1.682,491,2.368,530,2.581,585,2.964,586,3.873,587,3.873,588,3.873,589,2.964,590,3.873,591,2.964,592,2.964,593,2.964,594,2.964,595,2.964,596,3.873,597,2.964,598,2.964]],["title/dependencies.html",[261,1.343,599,2.221]],["body/dependencies.html",[12,0.189,47,0.057,56,1.243,87,0.56,113,0.036,114,0.044,115,0.036,138,2.263,141,2.263,147,2.713,149,2.713,150,2.713,261,1.435,276,2.263,568,2.263,600,3.396,601,5.277,602,3.396,603,3.396,604,3.396,605,3.396,606,3.396,607,3.396,608,3.396,609,4.224,610,3.374,611,3.396,612,3.396,613,3.396,614,3.396,615,3.396,616,3.396,617,3.396,618,3.396,619,3.396,620,3.396,621,3.396,622,3.396,623,3.396,624,3.396,625,3.396,626,3.396,627,3.396,628,3.396,629,3.396,630,3.396]],["title/index.html",[28,0.366,631,1.774,632,1.774]],["body/index.html",[11,0.393,12,0.272,47,0.046,113,0.038,114,0.046,115,0.038,124,2.385,125,2.298,131,3.136,195,1.843,205,2.859,209,2.859,450,2.859,473,3.485,489,2.385,633,3.579,634,3.579,635,3.579,636,3.759,637,3.579,638,3.579,639,3.579,640,3.579,641,3.579,642,3.579,643,2.859,644,3.579,645,3.579,646,3.579,647,3.579,648,3.579,649,3.579,650,3.579,651,3.579,652,4.363,653,3.579,654,3.579,655,3.579,656,4.363,657,3.579,658,4.363,659,4.363]],["title/license.html",[631,1.774,632,1.774,660,1.774]],["body/license.html",[11,0.352,12,0.244,47,0.042,67,1.504,84,1.504,113,0.032,114,0.042,115,0.032,124,2.646,125,2.146,135,2.461,195,1.302,449,3.511,636,3.511,643,2.461,660,2.461,661,3.081,662,4.642,663,3.972,664,3.972,665,3.081,666,3.081,667,3.081,668,3.081,669,3.081,670,3.081,671,3.081,672,3.081,673,3.081,674,3.972,675,3.081,676,3.081,677,3.081,678,3.081,679,3.081,680,3.081,681,3.972,682,5.123,683,3.081,684,3.081,685,3.081,686,3.081,687,3.972,688,3.081,689,3.081,690,3.173,691,3.081,692,3.081,693,3.081,694,3.081,695,3.081,696,3.081,697,3.972,698,3.081,699,3.081,700,3.081,701,3.081,702,3.081,703,3.081,704,3.972,705,3.972,706,3.081,707,3.081,708,3.081,709,3.081,710,3.081,711,3.081,712,3.081,713,3.081,714,3.081,715,3.081,716,3.081,717,3.081,718,3.081,719,3.081,720,3.081,721,3.081,722,3.081,723,3.081,724,3.081,725,3.081,726,3.081,727,3.081,728,3.081,729,3.081,730,3.081,731,3.081,732,3.081,733,3.081]],["title/modules.html",[260,1.754]],["body/modules.html",[47,0.049,113,0.043,114,0.049,115,0.043,259,2.311,260,1.989,270,1.989,610,3.763,734,4.711,735,4.711,736,4.711]],["title/overview.html",[737,2.869]],["body/overview.html",[1,1.371,2,1.32,43,1.208,47,0.056,90,0.421,98,1.144,105,1.371,107,1.928,109,1.591,113,0.033,114,0.042,115,0.033,127,1.32,156,1.773,157,2.16,158,2.16,195,1.32,259,2.885,260,1.526,261,1.32,262,2.082,263,2.082,264,2.082,265,2.496,266,2.496,267,2.496,268,2.496,269,2.496,270,2.599,271,2.67,272,2.082,282,1.526,299,2.082,379,3.201,578,2.496,579,2.496,580,2.496,737,2.496,738,3.125,739,4.008]],["title/miscellaneous/variables.html",[740,1.774,741,2.539]],["body/miscellaneous/variables.html",[1,1.06,2,1.64,10,0.523,11,0.311,12,0.216,13,1.421,19,0.64,28,0.64,47,0.055,49,0.768,72,1.06,74,1.64,105,1.06,109,1.23,113,0.041,114,0.048,115,0.041,333,3.101,583,3.659,690,3.101,740,3.101,741,3.101,742,3.882,743,3.882,744,3.882]]],"invertedIndex":[["",{"_index":47,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":378,"title":{},"body":{"injectables/LayoutService.html":{}}}],["0.0.36",{"_index":614,"title":{},"body":{"dependencies.html":{}}}],["0.11.0",{"_index":618,"title":{},"body":{"dependencies.html":{}}}],["0.3.9",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["0.9.1",{"_index":630,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":379,"title":{},"body":{"injectables/LayoutService.html":{},"overview.html":{}}}],["1.9.0",{"_index":628,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":381,"title":{},"body":{"injectables/LayoutService.html":{}}}],["101",{"_index":383,"title":{},"body":{"injectables/LayoutService.html":{}}}],["102",{"_index":385,"title":{},"body":{"injectables/LayoutService.html":{}}}],["103",{"_index":387,"title":{},"body":{"injectables/LayoutService.html":{}}}],["104",{"_index":389,"title":{},"body":{"injectables/LayoutService.html":{}}}],["2",{"_index":738,"title":{},"body":{"overview.html":{}}}],["2.5.4",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":391,"title":{},"body":{"injectables/LayoutService.html":{}}}],["201",{"_index":393,"title":{},"body":{"injectables/LayoutService.html":{}}}],["2014",{"_index":668,"title":{},"body":{"license.html":{}}}],["2019",{"_index":673,"title":{},"body":{"license.html":{}}}],["202",{"_index":395,"title":{},"body":{"injectables/LayoutService.html":{}}}],["300",{"_index":397,"title":{},"body":{"injectables/LayoutService.html":{}}}],["301",{"_index":399,"title":{},"body":{"injectables/LayoutService.html":{}}}],["302",{"_index":401,"title":{},"body":{"injectables/LayoutService.html":{}}}],["304",{"_index":403,"title":{},"body":{"injectables/LayoutService.html":{}}}],["4",{"_index":739,"title":{},"body":{"overview.html":{}}}],["4.17.11",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":404,"title":{},"body":{"injectables/LayoutService.html":{}}}],["401",{"_index":406,"title":{},"body":{"injectables/LayoutService.html":{}}}],["402",{"_index":408,"title":{},"body":{"injectables/LayoutService.html":{}}}],["500",{"_index":410,"title":{},"body":{"injectables/LayoutService.html":{}}}],["6.10.0",{"_index":617,"title":{},"body":{"dependencies.html":{}}}],["6.5.2",{"_index":626,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":635,"title":{},"body":{"index.html":{}}}],["7.0.0",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["7.0.3",{"_index":616,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["_layout",{"_index":339,"title":{},"body":{"injectables/LayoutService.html":{}}}],["_schema",{"_index":501,"title":{},"body":{"injectables/SchemaService.html":{}}}],["above",{"_index":643,"title":{},"body":{"index.html":{},"license.html":{}}}],["abstract",{"_index":569,"title":{},"body":{"classes/Widget.html":{}}}],["abstractcontrol",{"_index":82,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["accessors",{"_index":328,"title":{},"body":{"injectables/LayoutService.html":{},"injectables/SchemaService.html":{}}}],["ace",{"_index":149,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"dependencies.html":{}}}],["action",{"_index":727,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":112,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["addition",{"_index":144,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["against",{"_index":198,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["ajv",{"_index":141,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{},"dependencies.html":{}}}],["ajv.ajv",{"_index":505,"title":{},"body":{"injectables/SchemaService.html":{}}}],["ajv.validatefunction",{"_index":510,"title":{},"body":{"injectables/SchemaService.html":{}}}],["ajv]{@link",{"_index":231,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["allerrors",{"_index":506,"title":{},"body":{"injectables/SchemaService.html":{}}}],["and/or",{"_index":135,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"license.html":{}}}],["angular",{"_index":131,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/LayoutService.html":{},"index.html":{}}}],["angular/animations",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":276,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":87,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":568,"title":{},"body":{"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":607,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":609,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["angular2",{"_index":670,"title":{},"body":{"license.html":{}}}],["angular]{@link",{"_index":227,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["angularjs",{"_index":212,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/LayoutService.html":{}}}],["another",{"_index":142,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["api",{"_index":207,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["appropriate",{"_index":317,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["arguments",{"_index":438,"title":{},"body":{"injectables/LayoutService.html":{}}}],["arising",{"_index":731,"title":{},"body":{"license.html":{}}}],["array",{"_index":51,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["array.isarray(newnode",{"_index":482,"title":{},"body":{"injectables/LayoutService.html":{}}}],["arrayitem",{"_index":318,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["arrayitemtype",{"_index":319,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["associated",{"_index":84,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"license.html":{}}}],["attemtps",{"_index":637,"title":{},"body":{"index.html":{}}}],["attributes",{"_index":521,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["authors",{"_index":720,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":498,"title":{},"body":{"injectables/SchemaService.html":{}}}],["based",{"_index":489,"title":{},"body":{"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"index.html":{}}}],["basic_widgets",{"_index":583,"title":{},"body":{"modules/WidgetLibraryModule.html":{},"miscellaneous/variables.html":{}}}],["beta.24",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["bind",{"_index":286,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["boolean",{"_index":491,"title":{},"body":{"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{}}}],["bootstrap",{"_index":263,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"overview.html":{}}}],["both",{"_index":186,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["brace",{"_index":147,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"dependencies.html":{}}}],["brace]{@link",{"_index":233,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["bring",{"_index":650,"title":{},"body":{"index.html":{}}}],["browse",{"_index":736,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":610,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["browserified",{"_index":148,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["builder",{"_index":634,"title":{},"body":{"index.html":{}}}],["buildlayout(layout",{"_index":346,"title":{},"body":{"injectables/LayoutService.html":{}}}],["button",{"_index":23,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/WidgetLibraryService.html":{}}}],["button'},{'name",{"_index":104,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["button.component.html",{"_index":27,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button.component.scss",{"_index":25,"title":{},"body":{"components/ButtonComponent.html":{}}}],["buttoncomponent",{"_index":1,"title":{"components/ButtonComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["causes",{"_index":447,"title":{},"body":{"injectables/LayoutService.html":{}}}],["change",{"_index":73,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["changedetection",{"_index":154,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["changedetectionstrategy",{"_index":175,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":155,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["changes",{"_index":520,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["changes.hasownproperty('schema",{"_index":241,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["charge",{"_index":678,"title":{},"body":{"license.html":{}}}],["check",{"_index":652,"title":{},"body":{"index.html":{}}}],["claim",{"_index":723,"title":{},"body":{"license.html":{}}}],["class",{"_index":90,"title":{"classes/Widget.html":{}},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"overview.html":{}}}],["classes",{"_index":557,"title":{},"body":{"classes/Widget.html":{}}}],["click",{"_index":66,"title":{},"body":{"components/ButtonComponent.html":{}}}],["client",{"_index":128,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["clone",{"_index":336,"title":{},"body":{"injectables/LayoutService.html":{}}}],["clone(item",{"_index":470,"title":{},"body":{"injectables/LayoutService.html":{}}}],["clonedeep",{"_index":178,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["clonedeep(this.layout",{"_index":254,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["clonedeep(this.schema",{"_index":258,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["cluster_jsonschemaformmodule",{"_index":265,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"overview.html":{}}}],["cluster_jsonschemaformmodule_declarations",{"_index":266,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"overview.html":{}}}],["cluster_jsonschemaformmodule_exports",{"_index":269,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"overview.html":{}}}],["cluster_jsonschemaformmodule_imports",{"_index":268,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"overview.html":{}}}],["cluster_jsonschemaformmodule_jsonschemaformcomponent_providers",{"_index":267,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"overview.html":{}}}],["cluster_widgetlibrarymodule",{"_index":578,"title":{},"body":{"modules/WidgetLibraryModule.html":{},"overview.html":{}}}],["cluster_widgetlibrarymodule_declarations",{"_index":579,"title":{},"body":{"modules/WidgetLibraryModule.html":{},"overview.html":{}}}],["cluster_widgetlibrarymodule_exports",{"_index":580,"title":{},"body":{"modules/WidgetLibraryModule.html":{},"overview.html":{}}}],["code",{"_index":357,"title":{},"body":{"injectables/LayoutService.html":{}}}],["codes",{"_index":373,"title":{},"body":{"injectables/LayoutService.html":{}}}],["commonmodule",{"_index":275,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{}}}],["compatible",{"_index":208,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["compileschema",{"_index":512,"title":{},"body":{"injectables/SchemaService.html":{}}}],["component",{"_index":0,"title":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"injectables/WidgetLibraryService.html":{}}}],["component_template",{"_index":103,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["componentfactory",{"_index":532,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["componentfactoryresolver",{"_index":529,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["componentref",{"_index":539,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["conatins",{"_index":456,"title":{},"body":{"injectables/LayoutService.html":{}}}],["conditions",{"_index":703,"title":{},"body":{"license.html":{}}}],["connection",{"_index":732,"title":{},"body":{"license.html":{}}}],["console.error('buildlayout",{"_index":418,"title":{},"body":{"injectables/LayoutService.html":{}}}],["console.error(layoutitem",{"_index":421,"title":{},"body":{"injectables/LayoutService.html":{}}}],["console.warn(this",{"_index":244,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["const",{"_index":350,"title":{},"body":{"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{}}}],["constructor",{"_index":41,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["constructor(componentfactory",{"_index":528,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["constructor(jsf",{"_index":42,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"classes/Widget.html":{}}}],["constructor(private",{"_index":543,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["constructor(protected",{"_index":570,"title":{},"body":{"classes/Widget.html":{}}}],["constructor(schemaservice",{"_index":162,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["consumption",{"_index":648,"title":{},"body":{"index.html":{}}}],["contract",{"_index":728,"title":{},"body":{"license.html":{}}}],["control",{"_index":17,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["control.controlname",{"_index":296,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["control.layoutnode.name",{"_index":297,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["controldisabled",{"_index":30,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["controlname",{"_index":31,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["controls",{"_index":189,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["controlvalue",{"_index":32,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["convert",{"_index":361,"title":{},"body":{"injectables/LayoutService.html":{}}}],["copies",{"_index":697,"title":{},"body":{"license.html":{}}}],["copy",{"_index":681,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":662,"title":{},"body":{"license.html":{}}}],["core",{"_index":619,"title":{},"body":{"dependencies.html":{}}}],["createcomponent",{"_index":551,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["created",{"_index":524,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["creates",{"_index":424,"title":{},"body":{"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{}}}],["creation",{"_index":291,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["ctx",{"_index":294,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["damages",{"_index":724,"title":{},"body":{"license.html":{}}}],["data",{"_index":54,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutItem.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["dataindex",{"_index":38,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["datapointer",{"_index":320,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["datatype",{"_index":321,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["david",{"_index":665,"title":{},"body":{"license.html":{}}}],["davis",{"_index":667,"title":{},"body":{"license.html":{}}}],["deal",{"_index":685,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":733,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":262,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"overview.html":{}}}],["decorators",{"_index":534,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["default",{"_index":74,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"miscellaneous/variables.html":{}}}],["defaultwidget",{"_index":594,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["define",{"_index":166,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["defined",{"_index":44,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{}}}],["delete",{"_index":370,"title":{},"body":{"injectables/LayoutService.html":{}}}],["demo",{"_index":654,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":261,"title":{"dependencies.html":{}},"body":{"modules/JsonSchemaFormModule.html":{},"injectables/LayoutService.html":{},"modules/WidgetLibraryModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depends",{"_index":136,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["describing",{"_index":60,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["description",{"_index":15,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{}}}],["determine",{"_index":316,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["directive",{"_index":101,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["directives",{"_index":111,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["disable",{"_index":78,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["displayed",{"_index":334,"title":{},"body":{"injectables/LayoutService.html":{}}}],["displays",{"_index":16,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{}}}],["distribute",{"_index":694,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":683,"title":{},"body":{"license.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["dropped",{"_index":356,"title":{},"body":{"injectables/LayoutService.html":{}}}],["dynamic",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":519,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["each",{"_index":427,"title":{},"body":{"injectables/LayoutService.html":{}}}],["ease",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editor",{"_index":150,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"dependencies.html":{}}}],["element",{"_index":100,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{}}}],["elements",{"_index":434,"title":{},"body":{"injectables/LayoutService.html":{}}}],["entire",{"_index":197,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["entrycomponents",{"_index":582,"title":{},"body":{"modules/WidgetLibraryModule.html":{}}}],["enum",{"_index":380,"title":{},"body":{"injectables/LayoutService.html":{}}}],["error",{"_index":419,"title":{},"body":{"injectables/LayoutService.html":{}}}],["errormessages",{"_index":367,"title":{},"body":{"injectables/LayoutService.html":{}}}],["event",{"_index":67,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"license.html":{}}}],["event.target).value",{"_index":577,"title":{},"body":{"classes/Widget.html":{}}}],["example",{"_index":145,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["example.html",{"_index":215,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["examples",{"_index":656,"title":{},"body":{"index.html":{}}}],["examples)]{@link",{"_index":213,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["exclusivemaximum",{"_index":390,"title":{},"body":{"injectables/LayoutService.html":{}}}],["exclusiveminimum",{"_index":386,"title":{},"body":{"injectables/LayoutService.html":{}}}],["existing",{"_index":428,"title":{},"body":{"injectables/LayoutService.html":{}}}],["export",{"_index":89,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{}}}],["exports",{"_index":264,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"overview.html":{}}}],["express",{"_index":711,"title":{},"body":{"license.html":{}}}],["extends",{"_index":18,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["false",{"_index":75,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["feedback",{"_index":193,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{}}}],["files",{"_index":684,"title":{},"body":{"license.html":{}}}],["filling",{"_index":194,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["fitness",{"_index":716,"title":{},"body":{"license.html":{}}}],["flag",{"_index":77,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["fn",{"_index":459,"title":{},"body":{"injectables/LayoutService.html":{}}}],["fn(newnode",{"_index":480,"title":{},"body":{"injectables/LayoutService.html":{}}}],["following",{"_index":702,"title":{},"body":{"license.html":{}}}],["form",{"_index":125,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{},"index.html":{},"license.html":{}}}],["form's",{"_index":209,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"index.html":{}}}],["form'},{'name",{"_index":108,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["form.component",{"_index":280,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["form.component.html",{"_index":159,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts",{"_index":123,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:57",{"_index":169,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:59",{"_index":164,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:61",{"_index":163,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:81",{"_index":171,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:86",{"_index":174,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.module.ts",{"_index":273,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["form.service",{"_index":88,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["form.service.ts",{"_index":283,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["form.service.ts:10",{"_index":287,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["form.service.ts:15",{"_index":293,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["form/src/lib/json",{"_index":122,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{}}}],["form/src/lib/layout",{"_index":301,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["form/src/lib/layout.service.ts",{"_index":323,"title":{},"body":{"injectables/LayoutService.html":{}}}],["form/src/lib/layout.service.ts:14",{"_index":332,"title":{},"body":{"injectables/LayoutService.html":{}}}],["form/src/lib/layout.service.ts:17",{"_index":330,"title":{},"body":{"injectables/LayoutService.html":{}}}],["form/src/lib/schema.service.ts",{"_index":485,"title":{},"body":{"injectables/SchemaService.html":{}}}],["form/src/lib/schema.service.ts:15",{"_index":495,"title":{},"body":{"injectables/SchemaService.html":{}}}],["form/src/lib/schema.service.ts:19",{"_index":493,"title":{},"body":{"injectables/SchemaService.html":{}}}],["form/src/lib/schema.service.ts:30",{"_index":488,"title":{},"body":{"injectables/SchemaService.html":{}}}],["form/src/lib/widget",{"_index":13,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{}}}],["form]{@link",{"_index":210,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["format",{"_index":411,"title":{},"body":{"injectables/LayoutService.html":{}}}],["formcontrol",{"_index":33,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["forminitialized",{"_index":236,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["formlayout",{"_index":351,"title":{},"body":{"injectables/LayoutService.html":{}}}],["formoptions/addsubmit",{"_index":349,"title":{},"body":{"injectables/LayoutService.html":{}}}],["four",{"_index":437,"title":{},"body":{"injectables/LayoutService.html":{}}}],["free",{"_index":677,"title":{},"body":{"license.html":{}}}],["funciton",{"_index":452,"title":{},"body":{"injectables/LayoutService.html":{}}}],["function",{"_index":94,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{}}}],["furnished",{"_index":700,"title":{},"body":{"license.html":{}}}],["generates",{"_index":132,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["getlayout",{"_index":329,"title":{},"body":{"injectables/LayoutService.html":{}}}],["gets",{"_index":590,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["getschema",{"_index":492,"title":{},"body":{"injectables/SchemaService.html":{}}}],["getting",{"_index":631,"title":{"index.html":{},"license.html":{}},"body":{}}],["getwidget",{"_index":587,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["getwidget(type",{"_index":588,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["granted",{"_index":676,"title":{},"body":{"license.html":{}}}],["ground",{"_index":645,"title":{},"body":{"index.html":{}}}],["handle",{"_index":64,"title":{},"body":{"components/ButtonComponent.html":{}}}],["handling",{"_index":326,"title":{},"body":{"injectables/LayoutService.html":{}}}],["hasown(newnode.options",{"_index":365,"title":{},"body":{"injectables/LayoutService.html":{}}}],["hassubmitbutton",{"_index":347,"title":{},"body":{"injectables/LayoutService.html":{}}}],["haswidget(type",{"_index":598,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["held",{"_index":664,"title":{},"body":{"license.html":{}}}],["here",{"_index":657,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":675,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":118,"title":{},"body":{"components/HiddenComponent.html":{},"injectables/WidgetLibraryService.html":{}}}],["hidden'},{'name",{"_index":106,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["hidden.component.html",{"_index":120,"title":{},"body":{"components/HiddenComponent.html":{}}}],["hidden.component.scss",{"_index":119,"title":{},"body":{"components/HiddenComponent.html":{}}}],["hiddencomponent",{"_index":105,"title":{"components/HiddenComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["holders",{"_index":721,"title":{},"body":{"license.html":{}}}],["html",{"_index":99,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["http://schemaform.io",{"_index":211,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["http://schemaform.io/examples/bootstrap",{"_index":214,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["http://thlorenz.github.io/brace",{"_index":234,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["http://ulion.github.io/jsonform/playground",{"_index":226,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["https://angular.io",{"_index":228,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["https://github.com/epoberezkin/ajv",{"_index":232,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["https://github.com/geraintluff/tv4/blob/master/source/api.js",{"_index":374,"title":{},"body":{"injectables/LayoutService.html":{}}}],["https://github.com/joshfire/jsonform",{"_index":224,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["https://github.com/lodash/lodash",{"_index":230,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["https://github.com/mozilla",{"_index":219,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["https://mozilla",{"_index":221,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["id",{"_index":304,"title":{},"body":{"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{}}}],["identifier",{"_index":308,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["ignore",{"_index":509,"title":{},"body":{"injectables/SchemaService.html":{}}}],["implements",{"_index":151,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["implied",{"_index":712,"title":{},"body":{"license.html":{}}}],["import",{"_index":86,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{}}}],["imports",{"_index":274,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{}}}],["included",{"_index":706,"title":{},"body":{"license.html":{}}}],["including",{"_index":687,"title":{},"body":{"license.html":{}}}],["incorrect",{"_index":552,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["index",{"_index":28,"title":{"index.html":{}},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{}}}],["indexpad",{"_index":465,"title":{},"body":{"injectables/LayoutService.html":{}}}],["individual",{"_index":188,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{}}}],["inherited",{"_index":52,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["initialize",{"_index":571,"title":{},"body":{"classes/Widget.html":{}}}],["initializecontrol",{"_index":284,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["initializecontrol(control",{"_index":285,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["initializeform",{"_index":248,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["initializelayout",{"_index":252,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["initializeschema",{"_index":255,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["injectable",{"_index":281,"title":{"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{}},"body":{"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{}}}],["injectables",{"_index":282,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{},"overview.html":{}}}],["injecting",{"_index":538,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["input",{"_index":176,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["input/button/button.component",{"_index":591,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["input/hidden/hidden.component",{"_index":592,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["input[name",{"_index":312,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["input[type='hidden",{"_index":117,"title":{},"body":{"components/HiddenComponent.html":{}}}],["inputs",{"_index":37,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["inside",{"_index":454,"title":{},"body":{"injectables/LayoutService.html":{}}}],["install",{"_index":658,"title":{},"body":{"index.html":{}}}],["interface",{"_index":299,"title":{"interfaces/LayoutItem.html":{}},"body":{"interfaces/LayoutItem.html":{},"overview.html":{}}}],["interfaces",{"_index":300,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["invalid",{"_index":359,"title":{},"body":{"injectables/LayoutService.html":{}}}],["invoke",{"_index":453,"title":{},"body":{"injectables/LayoutService.html":{}}}],["invoked",{"_index":436,"title":{},"body":{"injectables/LayoutService.html":{}}}],["isnil(newnode",{"_index":481,"title":{},"body":{"injectables/LayoutService.html":{}}}],["isobject(layoutitem",{"_index":364,"title":{},"body":{"injectables/LayoutService.html":{}}}],["isplainobject",{"_index":179,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["isplainobject(this.schema",{"_index":256,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["isstring(layoutitem",{"_index":416,"title":{},"body":{"injectables/LayoutService.html":{}}}],["it's",{"_index":642,"title":{},"body":{"index.html":{}}}],["item",{"_index":309,"title":{},"body":{"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{}}}],["item.data",{"_index":180,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/LayoutService.html":{},"classes/Widget.html":{}}}],["item.data.ts",{"_index":302,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["item.items",{"_index":476,"title":{},"body":{"injectables/LayoutService.html":{}}}],["items",{"_index":305,"title":{},"body":{"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{}}}],["iteratee",{"_index":430,"title":{},"body":{"injectables/LayoutService.html":{}}}],["james",{"_index":671,"title":{},"body":{"license.html":{}}}],["javascript",{"_index":139,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["joshfire's",{"_index":223,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["jquery",{"_index":225,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["js",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["jsf",{"_index":22,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["json",{"_index":11,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["jsonpointer.get(jsf",{"_index":348,"title":{},"body":{"injectables/LayoutService.html":{}}}],["jsonpointer.isjsonpointer(layoutitem",{"_index":414,"title":{},"body":{"injectables/LayoutService.html":{}}}],["jsonpointers",{"_index":507,"title":{},"body":{"injectables/SchemaService.html":{}}}],["jsonschema",{"_index":218,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["jsonschema7",{"_index":168,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{}}}],["jsonschemaformcomponent",{"_index":107,"title":{"components/JsonSchemaFormComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"components/SelectWidgetComponent.html":{},"overview.html":{}}}],["jsonschemaformmodule",{"_index":259,"title":{"modules/JsonSchemaFormModule.html":{}},"body":{"modules/JsonSchemaFormModule.html":{},"modules.html":{},"overview.html":{}}}],["jsonschemaformservice",{"_index":43,"title":{"injectables/JsonSchemaFormService.html":{}},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"overview.html":{}}}],["keep",{"_index":444,"title":{},"body":{"injectables/LayoutService.html":{}}}],["key",{"_index":306,"title":{},"body":{"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{}}}],["kind",{"_index":710,"title":{},"body":{"license.html":{}}}],["l",{"_index":462,"title":{},"body":{"injectables/LayoutService.html":{}}}],["layout",{"_index":56,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"dependencies.html":{}}}],["layout(value",{"_index":342,"title":{},"body":{"injectables/LayoutService.html":{}}}],["layout.reduce((mappedlayout",{"_index":466,"title":{},"body":{"injectables/LayoutService.html":{}}}],["layout.service",{"_index":181,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["layoutindex",{"_index":39,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["layoutitem",{"_index":57,"title":{"interfaces/LayoutItem.html":{}},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["layoutnode",{"_index":40,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{}}}],["layoutpointer",{"_index":353,"title":{},"body":{"injectables/LayoutService.html":{}}}],["layoutpointer}/${realindex",{"_index":469,"title":{},"body":{"injectables/LayoutService.html":{}}}],["layouts",{"_index":327,"title":{},"body":{"injectables/LayoutService.html":{}}}],["layoutservice",{"_index":157,"title":{"injectables/LayoutService.html":{}},"body":{"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/LayoutService.html":{},"overview.html":{}}}],["layoutservice.buildlayout(value",{"_index":344,"title":{},"body":{"injectables/LayoutService.html":{}}}],["layoutservice.maplayout(item.items",{"_index":478,"title":{},"body":{"injectables/LayoutService.html":{}}}],["layoutservice.maplayout(layout",{"_index":352,"title":{},"body":{"injectables/LayoutService.html":{}}}],["left",{"_index":641,"title":{},"body":{"index.html":{}}}],["legend",{"_index":98,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"components/SelectWidgetComponent.html":{},"modules/WidgetLibraryModule.html":{},"overview.html":{}}}],["liability",{"_index":725,"title":{},"body":{"license.html":{}}}],["liable",{"_index":722,"title":{},"body":{"license.html":{}}}],["library",{"_index":130,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{}}}],["library.module",{"_index":279,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["library.module.ts",{"_index":581,"title":{},"body":{"modules/WidgetLibraryModule.html":{}}}],["library.service",{"_index":541,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["library.service.ts",{"_index":585,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["library.service.ts:25",{"_index":589,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["library/container/select",{"_index":516,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["library/index.ts",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["library/input/button/button.component.ts",{"_index":14,"title":{},"body":{"components/ButtonComponent.html":{}}}],["library/input/button/button.component.ts:13",{"_index":45,"title":{},"body":{"components/ButtonComponent.html":{}}}],["library/input/button/button.component.ts:22",{"_index":63,"title":{},"body":{"components/ButtonComponent.html":{}}}],["library/input/hidden/hidden.component.ts",{"_index":116,"title":{},"body":{"components/HiddenComponent.html":{}}}],["library/input/hidden/hidden.component.ts:15",{"_index":121,"title":{},"body":{"components/HiddenComponent.html":{}}}],["library/widget",{"_index":278,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{}}}],["library/widget.ts",{"_index":558,"title":{},"body":{"classes/Widget.html":{}}}],["library/widget.ts:10",{"_index":560,"title":{},"body":{"classes/Widget.html":{}}}],["library/widget.ts:12",{"_index":561,"title":{},"body":{"classes/Widget.html":{}}}],["library/widget.ts:14",{"_index":562,"title":{},"body":{"classes/Widget.html":{}}}],["library/widget.ts:16",{"_index":563,"title":{},"body":{"classes/Widget.html":{}}}],["library/widget.ts:18",{"_index":564,"title":{},"body":{"classes/Widget.html":{}}}],["library/widget.ts:21",{"_index":567,"title":{},"body":{"classes/Widget.html":{}}}],["library/widget.ts:23",{"_index":566,"title":{},"body":{"classes/Widget.html":{}}}],["library/widget.ts:25",{"_index":559,"title":{},"body":{"classes/Widget.html":{}}}],["library/widget.ts:42",{"_index":565,"title":{},"body":{"classes/Widget.html":{}}}],["license",{"_index":660,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":688,"title":{},"body":{"license.html":{}}}],["limited",{"_index":713,"title":{},"body":{"license.html":{}}}],["line",{"_index":445,"title":{},"body":{"injectables/LayoutService.html":{}}}],["list",{"_index":333,"title":{},"body":{"injectables/LayoutService.html":{},"miscellaneous/variables.html":{}}}],["live",{"_index":653,"title":{},"body":{"index.html":{}}}],["lodash",{"_index":138,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/LayoutService.html":{},"dependencies.html":{}}}],["lodash]{@link",{"_index":229,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["logic",{"_index":475,"title":{},"body":{"injectables/LayoutService.html":{}}}],["longer",{"_index":440,"title":{},"body":{"injectables/LayoutService.html":{}}}],["lot",{"_index":649,"title":{},"body":{"index.html":{}}}],["make",{"_index":200,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["map",{"_index":311,"title":{},"body":{"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{}}}],["maplayout",{"_index":423,"title":{},"body":{"injectables/LayoutService.html":{}}}],["maplayout(layout",{"_index":458,"title":{},"body":{"injectables/LayoutService.html":{}}}],["mapped",{"_index":457,"title":{},"body":{"injectables/LayoutService.html":{}}}],["mappedlayout",{"_index":472,"title":{},"body":{"injectables/LayoutService.html":{}}}],["mappedlayout.concat(newnode",{"_index":484,"title":{},"body":{"injectables/LayoutService.html":{}}}],["mapping",{"_index":586,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["maps",{"_index":432,"title":{},"body":{"injectables/LayoutService.html":{}}}],["matching",{"_index":114,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maximum",{"_index":388,"title":{},"body":{"injectables/LayoutService.html":{}}}],["maxitems",{"_index":407,"title":{},"body":{"injectables/LayoutService.html":{}}}],["maxlength",{"_index":394,"title":{},"body":{"injectables/LayoutService.html":{}}}],["maxproperties",{"_index":400,"title":{},"body":{"injectables/LayoutService.html":{}}}],["merchantability",{"_index":715,"title":{},"body":{"license.html":{}}}],["merge",{"_index":692,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":20,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["methods",{"_index":35,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{}}}],["minimum",{"_index":384,"title":{},"body":{"injectables/LayoutService.html":{}}}],["minitems",{"_index":405,"title":{},"body":{"injectables/LayoutService.html":{}}}],["minlength",{"_index":392,"title":{},"body":{"injectables/LayoutService.html":{}}}],["minproperties",{"_index":398,"title":{},"body":{"injectables/LayoutService.html":{}}}],["miscellaneous",{"_index":740,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":661,"title":{},"body":{"license.html":{}}}],["model",{"_index":134,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["modify",{"_index":691,"title":{},"body":{"license.html":{}}}],["module",{"_index":127,"title":{"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{}},"body":{"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"overview.html":{}}}],["modules",{"_index":260,"title":{"modules.html":{}},"body":{"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"modules.html":{},"overview.html":{}}}],["mostly",{"_index":206,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["mouse",{"_index":65,"title":{},"body":{"components/ButtonComponent.html":{}}}],["mouseevent",{"_index":62,"title":{},"body":{"components/ButtonComponent.html":{}}}],["mozilla's",{"_index":216,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["multiple",{"_index":442,"title":{},"body":{"injectables/LayoutService.html":{}}}],["multipleof",{"_index":382,"title":{},"body":{"injectables/LayoutService.html":{}}}],["name",{"_index":48,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{}}}],["new",{"_index":425,"title":{},"body":{"injectables/LayoutService.html":{},"injectables/SchemaService.html":{}}}],["newcomponent",{"_index":542,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["newkey",{"_index":377,"title":{},"body":{"injectables/LayoutService.html":{}}}],["newlayout",{"_index":471,"title":{},"body":{"injectables/LayoutService.html":{}}}],["newlayoutpointer",{"_index":468,"title":{},"body":{"injectables/LayoutService.html":{}}}],["newlayoutpointer}/items",{"_index":479,"title":{},"body":{"injectables/LayoutService.html":{}}}],["newnode",{"_index":354,"title":{},"body":{"injectables/LayoutService.html":{}}}],["newnode.datapointer",{"_index":415,"title":{},"body":{"injectables/LayoutService.html":{}}}],["newnode.items",{"_index":477,"title":{},"body":{"injectables/LayoutService.html":{}}}],["newnode.key",{"_index":417,"title":{},"body":{"injectables/LayoutService.html":{}}}],["newnode.length",{"_index":483,"title":{},"body":{"injectables/LayoutService.html":{}}}],["newnode.options.errormessages",{"_index":369,"title":{},"body":{"injectables/LayoutService.html":{}}}],["newnode.options.validationmessage",{"_index":375,"title":{},"body":{"injectables/LayoutService.html":{}}}],["newnode.options.validationmessage[key",{"_index":413,"title":{},"body":{"injectables/LayoutService.html":{}}}],["newnode.options.validationmessages",{"_index":368,"title":{},"body":{"injectables/LayoutService.html":{}}}],["newnode.options.validationmessages[newkey",{"_index":412,"title":{},"body":{"injectables/LayoutService.html":{}}}],["ng2",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["ngmodule",{"_index":277,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{}}}],["ngonchanges",{"_index":545,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["ngonchanges(changes",{"_index":240,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["ngoninit",{"_index":238,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["ngx",{"_index":124,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"index.html":{},"license.html":{}}}],["ngxjsonschemaform",{"_index":633,"title":{},"body":{"index.html":{}}}],["node",{"_index":59,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["non",{"_index":451,"title":{},"body":{"injectables/LayoutService.html":{}}}],["noninfringement",{"_index":719,"title":{},"body":{"license.html":{}}}],["note",{"_index":473,"title":{},"body":{"injectables/LayoutService.html":{},"index.html":{}}}],["notice",{"_index":704,"title":{},"body":{"license.html":{}}}],["npm",{"_index":659,"title":{},"body":{"index.html":{}}}],["null",{"_index":422,"title":{},"body":{"injectables/LayoutService.html":{}}}],["number",{"_index":461,"title":{},"body":{"injectables/LayoutService.html":{}}}],["object",{"_index":203,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["object.keys(newnode.options.validationmessage).foreach(key",{"_index":376,"title":{},"body":{"injectables/LayoutService.html":{}}}],["obtaining",{"_index":680,"title":{},"body":{"license.html":{}}}],["obviously",{"_index":137,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["onchanges",{"_index":152,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["oninit",{"_index":153,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["onto",{"_index":523,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["optional",{"_index":50,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{}}}],["options",{"_index":34,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["options.legend",{"_index":362,"title":{},"body":{"injectables/LayoutService.html":{}}}],["options.title",{"_index":363,"title":{},"body":{"injectables/LayoutService.html":{}}}],["options?.title",{"_index":97,"title":{},"body":{"components/ButtonComponent.html":{}}}],["otherwise",{"_index":730,"title":{},"body":{"license.html":{}}}],["out",{"_index":195,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["over",{"_index":639,"title":{},"body":{"index.html":{}}}],["overview",{"_index":737,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":463,"title":{},"body":{"injectables/LayoutService.html":{}}}],["package",{"_index":599,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":340,"title":{},"body":{"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{}}}],["parameters",{"_index":46,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{}}}],["parity",{"_index":651,"title":{},"body":{"index.html":{}}}],["parsing",{"_index":486,"title":{},"body":{"injectables/SchemaService.html":{}}}],["part",{"_index":669,"title":{},"body":{"license.html":{}}}],["particular",{"_index":717,"title":{},"body":{"license.html":{}}}],["passed",{"_index":522,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["path",{"_index":439,"title":{},"body":{"injectables/LayoutService.html":{}}}],["pattern",{"_index":396,"title":{},"body":{"injectables/LayoutService.html":{}}}],["permission",{"_index":674,"title":{},"body":{"license.html":{}}}],["permit",{"_index":698,"title":{},"body":{"license.html":{}}}],["person",{"_index":679,"title":{},"body":{"license.html":{}}}],["persons",{"_index":699,"title":{},"body":{"license.html":{}}}],["pick",{"_index":337,"title":{},"body":{"injectables/LayoutService.html":{}}}],["pick(layoutitem",{"_index":355,"title":{},"body":{"injectables/LayoutService.html":{}}}],["placeholder",{"_index":537,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["play",{"_index":655,"title":{},"body":{"index.html":{}}}],["playground",{"_index":146,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["pointer",{"_index":310,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["populate",{"_index":572,"title":{},"body":{"classes/Widget.html":{}}}],["portions",{"_index":663,"title":{},"body":{"license.html":{}}}],["predecesor",{"_index":640,"title":{},"body":{"index.html":{}}}],["private",{"_index":235,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"injectables/WidgetLibraryService.html":{}}}],["project",{"_index":636,"title":{},"body":{"index.html":{},"license.html":{}}}],["projects/.../index.ts",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/ngx",{"_index":10,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":29,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["props",{"_index":360,"title":{},"body":{"injectables/LayoutService.html":{}}}],["provide",{"_index":190,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["provided",{"_index":708,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":593,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["providers",{"_index":156,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"overview.html":{}}}],["provides",{"_index":324,"title":{},"body":{"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{}}}],["publish",{"_index":693,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":718,"title":{},"body":{"license.html":{}}}],["push",{"_index":358,"title":{},"body":{"injectables/LayoutService.html":{}}}],["react",{"_index":217,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["reactiveformsmodule",{"_index":584,"title":{},"body":{"modules/WidgetLibraryModule.html":{}}}],["read",{"_index":536,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["readonly",{"_index":237,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"injectables/WidgetLibraryService.html":{}}}],["ready",{"_index":647,"title":{},"body":{"index.html":{}}}],["real",{"_index":191,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["realindex",{"_index":467,"title":{},"body":{"injectables/LayoutService.html":{}}}],["recognized",{"_index":420,"title":{},"body":{"injectables/LayoutService.html":{}}}],["recursively",{"_index":431,"title":{},"body":{"injectables/LayoutService.html":{}}}],["recursivereference",{"_index":322,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["ref",{"_index":303,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["removed",{"_index":474,"title":{},"body":{"injectables/LayoutService.html":{}}}],["rendered",{"_index":167,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["represent",{"_index":314,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["required",{"_index":402,"title":{},"body":{"injectables/LayoutService.html":{}}}],["reset",{"_index":272,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"overview.html":{}}}],["restriction",{"_index":686,"title":{},"body":{"license.html":{}}}],["result",{"_index":113,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":115,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":245,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{}}}],["returned",{"_index":202,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/LayoutService.html":{}}}],["returns",{"_index":68,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["rewritten",{"_index":644,"title":{},"body":{"index.html":{}}}],["rights",{"_index":689,"title":{},"body":{"license.html":{}}}],["root",{"_index":126,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/LayoutService.html":{},"injectables/WidgetLibraryService.html":{}}}],["rootlayout",{"_index":455,"title":{},"body":{"injectables/LayoutService.html":{}}}],["running",{"_index":426,"title":{},"body":{"injectables/LayoutService.html":{}}}],["rxjs",{"_index":625,"title":{},"body":{"dependencies.html":{}}}],["scharett",{"_index":672,"title":{},"body":{"license.html":{}}}],["schema",{"_index":12,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["schema(value",{"_index":502,"title":{},"body":{"injectables/SchemaService.html":{}}}],["schema.service",{"_index":182,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["schemaservice",{"_index":158,"title":{"injectables/SchemaService.html":{}},"body":{"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/SchemaService.html":{},"overview.html":{}}}],["schnell",{"_index":666,"title":{},"body":{"license.html":{}}}],["select",{"_index":110,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["selector",{"_index":21,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["selectwidgetcomponent",{"_index":109,"title":{"components/SelectWidgetComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"modules/WidgetLibraryModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["sell",{"_index":696,"title":{},"body":{"license.html":{}}}],["services",{"_index":325,"title":{},"body":{"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{}}}],["services.github.io/react",{"_index":222,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["services/react",{"_index":220,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["set",{"_index":341,"title":{},"body":{"injectables/LayoutService.html":{},"injectables/SchemaService.html":{}}}],["setlayout(value",{"_index":331,"title":{},"body":{"injectables/LayoutService.html":{}}}],["sets",{"_index":288,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["setschema(value",{"_index":494,"title":{},"body":{"injectables/SchemaService.html":{}}}],["setter",{"_index":497,"title":{},"body":{"injectables/SchemaService.html":{}}}],["shall",{"_index":705,"title":{},"body":{"license.html":{}}}],["shorter",{"_index":441,"title":{},"body":{"injectables/LayoutService.html":{}}}],["side",{"_index":129,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["similar",{"_index":205,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"index.html":{}}}],["simplechanges",{"_index":177,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["skipped",{"_index":448,"title":{},"body":{"injectables/LayoutService.html":{}}}],["software",{"_index":682,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"modules/WidgetLibraryModule.html":{},"injectables/WidgetLibraryService.html":{}}}],["specified",{"_index":315,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["specify",{"_index":313,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["started",{"_index":632,"title":{"index.html":{},"license.html":{}},"body":{}}],["static",{"_index":345,"title":{},"body":{"injectables/LayoutService.html":{}}}],["still",{"_index":450,"title":{},"body":{"injectables/LayoutService.html":{},"index.html":{}}}],["string",{"_index":79,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{}}}],["string|array",{"_index":464,"title":{},"body":{"injectables/LayoutService.html":{}}}],["structured",{"_index":133,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["styleurls",{"_index":24,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["subject",{"_index":701,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":695,"title":{},"body":{"license.html":{}}}],["submitform",{"_index":160,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["submits",{"_index":172,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["submitted",{"_index":199,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["substantial",{"_index":707,"title":{},"body":{"license.html":{}}}],["super(jsf",{"_index":91,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["super.updatevalue(event",{"_index":96,"title":{},"body":{"components/ButtonComponent.html":{}}}],["support",{"_index":734,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":201,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["surrounding",{"_index":446,"title":{},"body":{"injectables/LayoutService.html":{}}}],["svg",{"_index":735,"title":{},"body":{"modules.html":{}}}],["tabs",{"_index":435,"title":{},"body":{"injectables/LayoutService.html":{}}}],["take",{"_index":638,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["templateurl",{"_index":26,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["this._layout",{"_index":343,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this._schema",{"_index":503,"title":{},"body":{"injectables/SchemaService.html":{}}}],["this.ajv.compile(this.schema",{"_index":515,"title":{},"body":{"injectables/SchemaService.html":{}}}],["this.ajv.removeschema(this.schema",{"_index":513,"title":{},"body":{"injectables/SchemaService.html":{}}}],["this.compileschema",{"_index":504,"title":{},"body":{"injectables/SchemaService.html":{}}}],["this.componentfactory.resolvecomponentfactory(this.widgetlibraryservice.getwidget(this.layoutnode.type",{"_index":556,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.createcomponent",{"_index":547,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.forminitialized",{"_index":242,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.haswidget(type",{"_index":595,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["this.initializeform",{"_index":247,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.initializelayout",{"_index":250,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.initializeschema",{"_index":249,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.jsf.initializecontrol(this",{"_index":573,"title":{},"body":{"classes/Widget.html":{}}}],["this.jsf.updatevalue(this",{"_index":576,"title":{},"body":{"classes/Widget.html":{}}}],["this.layoutnode",{"_index":553,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.layoutnode.options",{"_index":575,"title":{},"body":{"classes/Widget.html":{}}}],["this.layoutnode.type",{"_index":554,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.layoutservice.layout",{"_index":253,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.newcomponent",{"_index":548,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.newcomponent.instance[input",{"_index":549,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.options",{"_index":574,"title":{},"body":{"classes/Widget.html":{}}}],["this.options.onclick",{"_index":93,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.options.onclick(event",{"_index":95,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.schemaservice.schema",{"_index":257,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.updatecomponent",{"_index":544,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.updateform",{"_index":239,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.validator",{"_index":514,"title":{},"body":{"injectables/SchemaService.html":{}}}],["this.validator(data",{"_index":511,"title":{},"body":{"injectables/SchemaService.html":{}}}],["this.widgetcontainer.createcomponent",{"_index":555,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.widgets[this.defaultwidget",{"_index":597,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["this.widgets[type",{"_index":596,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["this.x",{"_index":298,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["this[input",{"_index":550,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["through",{"_index":429,"title":{},"body":{"injectables/LayoutService.html":{}}}],["time",{"_index":192,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["todo",{"_index":243,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{}}}],["tort",{"_index":729,"title":{},"body":{"license.html":{}}}],["trackbyfn",{"_index":161,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["trackbyfn(index",{"_index":173,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["true",{"_index":251,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/SchemaService.html":{}}}],["tslib",{"_index":627,"title":{},"body":{"dependencies.html":{}}}],["tv4",{"_index":372,"title":{},"body":{"injectables/LayoutService.html":{}}}],["type",{"_index":49,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":92,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/LayoutService.html":{},"injectables/WidgetLibraryService.html":{}}}],["types/ace",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["types/json",{"_index":615,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":335,"title":{},"body":{"injectables/LayoutService.html":{}}}],["unique",{"_index":307,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["uniqueid",{"_index":338,"title":{},"body":{"injectables/LayoutService.html":{}}}],["uniqueitems",{"_index":409,"title":{},"body":{"injectables/LayoutService.html":{}}}],["unknownformats",{"_index":508,"title":{},"body":{"injectables/SchemaService.html":{}}}],["up",{"_index":646,"title":{},"body":{"index.html":{}}}],["update",{"_index":71,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["updatecomponent",{"_index":546,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["updateform",{"_index":246,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["updatevalue",{"_index":36,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["updatevalue(ctx",{"_index":292,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["updatevalue(event",{"_index":61,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["upgrade",{"_index":499,"title":{},"body":{"injectables/SchemaService.html":{}}}],["upon",{"_index":290,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["use",{"_index":690,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":165,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutItem.html":{},"injectables/SchemaService.html":{}}}],["user",{"_index":184,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["using",{"_index":185,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["usually",{"_index":443,"title":{},"body":{"injectables/LayoutService.html":{}}}],["utility",{"_index":140,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["v",{"_index":460,"title":{},"body":{"injectables/LayoutService.html":{}}}],["valdiated",{"_index":490,"title":{},"body":{"injectables/SchemaService.html":{}}}],["valid",{"_index":204,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["validate",{"_index":170,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{}}}],["validate(data",{"_index":487,"title":{},"body":{"injectables/SchemaService.html":{}}}],["validates",{"_index":183,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{}}}],["validating",{"_index":196,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{}}}],["validation",{"_index":496,"title":{},"body":{"injectables/SchemaService.html":{}}}],["validationmessage",{"_index":371,"title":{},"body":{"injectables/LayoutService.html":{}}}],["validationmessages",{"_index":366,"title":{},"body":{"injectables/LayoutService.html":{}}}],["validator",{"_index":143,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{}}}],["validators",{"_index":187,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["value",{"_index":72,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":102,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["variables",{"_index":741,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":500,"title":{},"body":{"injectables/SchemaService.html":{}}}],["viewchild",{"_index":540,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["viewchild('widgetcontainer",{"_index":535,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["viewcontainerref",{"_index":533,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["void",{"_index":69,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{}}}],["warranties",{"_index":714,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":709,"title":{},"body":{"license.html":{}}}],["whether",{"_index":726,"title":{},"body":{"license.html":{}}}],["widget",{"_index":19,"title":{"classes/Widget.html":{}},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{},"classes/Widget.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{}}}],["widget.component.css",{"_index":525,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["widget.component.html",{"_index":526,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["widget.component.ts",{"_index":518,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["widget.component.ts:24",{"_index":531,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["widget/select",{"_index":517,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["widget:10",{"_index":76,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["widget:12",{"_index":80,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["widget:14",{"_index":81,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["widget:16",{"_index":83,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["widget:18",{"_index":85,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["widget:21",{"_index":58,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["widget:23",{"_index":55,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["widget:25",{"_index":53,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["widget:42",{"_index":70,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["widgetcontainer",{"_index":527,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["widgetlibrarymodule",{"_index":270,"title":{"modules/WidgetLibraryModule.html":{}},"body":{"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"modules.html":{},"overview.html":{}}}],["widgetlibraryservice",{"_index":530,"title":{"injectables/WidgetLibraryService.html":{}},"body":{"components/SelectWidgetComponent.html":{},"injectables/WidgetLibraryService.html":{}}}],["widgets",{"_index":289,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"injectables/WidgetLibraryService.html":{}}}],["within",{"_index":433,"title":{},"body":{"injectables/LayoutService.html":{}}}],["without",{"_index":449,"title":{},"body":{"injectables/LayoutService.html":{},"license.html":{}}}],["x",{"_index":295,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["zone.js",{"_index":629,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":271,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"modules/WidgetLibraryModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-json-schema-form/src/lib/widget-library/input/button/button.component.ts\n\n\n    \n        Description\n    \n    \n        Displays a  control \n\n    \n\n    \n        Extends\n    \n    \n                Widget\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                jsf-button\n            \n\n            \n                styleUrls\n                ./button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                controlDisabled\n                            \n                            \n                                controlName\n                            \n                            \n                                controlValue\n                            \n                            \n                                formControl\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateValue\n                            \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataIndex\n                            \n                            \n                                layoutIndex\n                            \n                            \n                                layoutNode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(jsf: JsonSchemaFormService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/widget-library/input/button/button.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jsf\n                                                  \n                                                        \n                                                                        JsonSchemaFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataIndex\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:25\n\n                            \n                        \n                \n                    \n                        Index of the data in data array \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutIndex\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:23\n\n                            \n                        \n                \n                    \n                        Index of the layout in the Layout array \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutNode\n                    \n                \n                \n                    \n                        Type :         LayoutItem\n\n                    \n                \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:21\n\n                            \n                        \n                \n                    \n                        Layout Node describing the control \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/input/button/button.component.ts:22\n                \n            \n\n\n            \n                \n                    Handle the mouse click event\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(event: Event)\n                \n            \n\n\n            \n                \n                    Inherited from         Widget\n\n                \n            \n            \n                \n                        Defined in         Widget:42\n\n                \n            \n\n\n            \n                \n                    Update the value of the control\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nChange event\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:10\n\n                            \n                        \n\n                \n                    \n                        Flag to disable the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:12\n\n                            \n                        \n\n                \n                    \n                        Name for the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:14\n\n                            \n                        \n\n                \n                    \n                        Value of the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AbstractControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:16\n\n                            \n                        \n\n                \n                    \n                        Associated FormControl for widget \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:18\n\n                            \n                        \n\n                \n                    \n                        Options for the control \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { JsonSchemaFormService } from '../../../json-schema-form.service';\n\nimport { Widget } from '../../widget';\n\n/** Displays a  control */\n@Component({\n    selector: 'jsf-button',\n    styleUrls: ['./button.component.scss'],\n    templateUrl: './button.component.html'\n})\nexport class ButtonComponent extends Widget {\n\n    constructor(jsf: JsonSchemaFormService) {\n        super(jsf);\n    }\n\n    /**\n     * Handle the mouse click event\n     */\n    updateValue(event: MouseEvent): void {\n        if (typeof this.options.onClick === 'function') {\n            this.options.onClick(event);\n        } else {\n            super.updateValue(event);\n        }\n    }\n\n}\n\n    \n\n    \n        \n    {{ options?.title }}\n\n\n    \n\n    \n                \n                    ./button.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ options?.title }}'\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'jsf-button'},{'name': 'HiddenComponent', 'selector': 'jsf-hidden'},{'name': 'JsonSchemaFormComponent', 'selector': 'jsf-json-schema-form'},{'name': 'SelectWidgetComponent', 'selector': 'jsf-select-widget'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HiddenComponent.html":{"url":"components/HiddenComponent.html","title":"component - HiddenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HiddenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-json-schema-form/src/lib/widget-library/input/hidden/hidden.component.ts\n\n\n    \n        Description\n    \n    \n        Displays an input[type='hidden']\n\n    \n\n    \n        Extends\n    \n    \n                Widget\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                jsf-hidden\n            \n\n            \n                styleUrls\n                ./hidden.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./hidden.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                controlDisabled\n                            \n                            \n                                controlName\n                            \n                            \n                                controlValue\n                            \n                            \n                                formControl\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataIndex\n                            \n                            \n                                layoutIndex\n                            \n                            \n                                layoutNode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(jsf: JsonSchemaFormService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/widget-library/input/hidden/hidden.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jsf\n                                                  \n                                                        \n                                                                        JsonSchemaFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataIndex\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:25\n\n                            \n                        \n                \n                    \n                        Index of the data in data array \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutIndex\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:23\n\n                            \n                        \n                \n                    \n                        Index of the layout in the Layout array \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutNode\n                    \n                \n                \n                    \n                        Type :         LayoutItem\n\n                    \n                \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:21\n\n                            \n                        \n                \n                    \n                        Layout Node describing the control \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(event: Event)\n                \n            \n\n\n            \n                \n                    Inherited from         Widget\n\n                \n            \n            \n                \n                        Defined in         Widget:42\n\n                \n            \n\n\n            \n                \n                    Update the value of the control\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nChange event\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:10\n\n                            \n                        \n\n                \n                    \n                        Flag to disable the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:12\n\n                            \n                        \n\n                \n                    \n                        Name for the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:14\n\n                            \n                        \n\n                \n                    \n                        Value of the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AbstractControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:16\n\n                            \n                        \n\n                \n                    \n                        Associated FormControl for widget \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:18\n\n                            \n                        \n\n                \n                    \n                        Options for the control \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { JsonSchemaFormService } from '../../../json-schema-form.service';\n\nimport { Widget } from '../../widget';\n\n/**\n * Displays an input[type='hidden']\n */\n@Component({\n    selector: 'jsf-hidden',\n    styleUrls: ['./hidden.component.scss'],\n    templateUrl: './hidden.component.html'\n})\nexport class HiddenComponent extends Widget {\n    constructor(jsf: JsonSchemaFormService) {\n        super(jsf);\n    }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./hidden.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'jsf-button'},{'name': 'HiddenComponent', 'selector': 'jsf-hidden'},{'name': 'JsonSchemaFormComponent', 'selector': 'jsf-json-schema-form'},{'name': 'SelectWidgetComponent', 'selector': 'jsf-select-widget'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HiddenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/JsonSchemaFormComponent.html":{"url":"components/JsonSchemaFormComponent.html","title":"component - JsonSchemaFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  JsonSchemaFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-json-schema-form/src/lib/json-schema-form.component.ts\n\n\n    \n        Description\n    \n    \n        NGX JSON Schema Form\nRoot module of the NGX JSON Schema Form client-side library,\nan Angular library which generates an HTML form from a JSON schema\nstructured data model and/or a JSON Schema Form layout description.\nThis library depends on:\n\nAngular (obviously)\nlodash, JavaScript utility library\najv, Another JSON Schema validator\n\nIn addition, the Example Playground also depends on:\n\nbrace, Browserified Ace editor\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnChanges\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                JsonSchemaFormService\n                                LayoutService\n                                SchemaService\n                \n            \n\n\n            \n                selector\n                jsf-json-schema-form\n            \n\n\n\n\n            \n                templateUrl\n                ./json-schema-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submitForm\n                            \n                            \n                                trackByFn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layout\n                            \n                            \n                                schema\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(schemaService: SchemaService, layoutService: LayoutService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.component.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        schemaService\n                                                  \n                                                        \n                                                                        SchemaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layout\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.component.ts:59\n                            \n                        \n                \n                    \n                        Layout used to define how the form is rendered \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schema\n                    \n                \n                \n                    \n                        Type :     JSONSchema7\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.component.ts:57\n                            \n                        \n                \n                    \n                        JSON Schema used to validate form data \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitForm\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.component.ts:81\n                \n            \n\n\n            \n                \n                    Submits the form \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trackByFn\n                        \n                        \n                    \n                \n            \n            \n                \ntrackByFn(index)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n\nimport { cloneDeep, isPlainObject } from 'lodash';\n\nimport { JSONSchema7 } from 'json-schema';\n\nimport { JsonSchemaFormService } from './json-schema-form.service';\nimport { LayoutItem } from './layout-item.data';\nimport { LayoutService } from './layout.service';\nimport { SchemaService } from './schema.service';\n\n// * This library also validates input data by the user, using both validators on\n// * individual controls to provide real-time feedback while the user is filling\n// * out the form, and then validating the entire input against the schema when\n// * the form is submitted to make sure the returned JSON data object is valid.\n// *\n// * This library is similar to, and mostly API compatible with:\n// *\n// * - JSON Schema Form's [Angular Schema Form]{@link http://schemaform.io} library for AngularJs\n// *   [(examples)]{@link http://schemaform.io/examples/bootstrap-example.html}\n// *\n// * - Mozilla's [react-jsonschema-form]{@link https://github.com/mozilla-services/react-jsonschema-form} library for React\n// *   [(examples)]{@link https://mozilla-services.github.io/react-jsonschema-form}\n// *\n// * - Joshfire's [JSON Form]{@link https://github.com/joshfire/jsonform} library for jQuery\n// *   [(examples)]{@link http://ulion.github.io/jsonform/playground}\n/**\n * NGX JSON Schema Form\n *\n * Root module of the NGX JSON Schema Form client-side library,\n * an Angular library which generates an HTML form from a JSON schema\n * structured data model and/or a JSON Schema Form layout description.\n *\n * This library depends on:\n *\n * - [Angular]{@link https://angular.io} (obviously)\n * - [lodash]{@link https://github.com/lodash/lodash}, JavaScript utility library\n * - [ajv]{@link https://github.com/epoberezkin/ajv}, Another JSON Schema validator\n *\n * In addition, the Example Playground also depends on:\n *\n * - [brace]{@link http://thlorenz.github.io/brace}, Browserified Ace editor\n */\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        JsonSchemaFormService,\n        LayoutService,\n        SchemaService\n    ],\n    selector: 'jsf-json-schema-form',\n    styles: [],\n    templateUrl: './json-schema-form.component.html'\n})\nexport class JsonSchemaFormComponent implements OnChanges, OnInit {\n    /** JSON Schema used to validate form data */\n    @Input() schema: JSONSchema7;\n    /** Layout used to define how the form is rendered */\n    @Input() layout: Array;\n\n    private formInitialized = false;\n\n    constructor(\n        // private readonly jsf: JsonSchemaFormService,\n        private readonly schemaService: SchemaService,\n        readonly layoutService: LayoutService\n    ) {}\n\n    ngOnInit() {\n        this.updateForm();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.hasOwnProperty('schema')) {\n            this.formInitialized = false;\n        }\n        this.updateForm();\n    }\n\n    /** Submits the form */\n    submitForm(): void {\n        // TODO\n        console.warn(this);\n    }\n\n    trackByFn(index) {\n        return index;\n    }\n\n    private updateForm(): void {\n        if (!this.formInitialized) {\n            this.initializeForm();\n        }\n    }\n\n    private initializeForm(): void {\n        this.initializeSchema();\n        this.initializeLayout();\n        this.formInitialized = true;\n    }\n\n    private initializeLayout(): void {\n        this.layoutService.layout = cloneDeep(this.layout || []);\n    }\n\n    private initializeSchema(): void {\n        if (isPlainObject(this.schema)) {\n            this.schemaService.schema = cloneDeep(this.schema);\n        }\n    }\n}\n\n    \n\n    \n        \n    \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'jsf-button'},{'name': 'HiddenComponent', 'selector': 'jsf-hidden'},{'name': 'JsonSchemaFormComponent', 'selector': 'jsf-json-schema-form'},{'name': 'SelectWidgetComponent', 'selector': 'jsf-select-widget'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'JsonSchemaFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JsonSchemaFormModule.html":{"url":"modules/JsonSchemaFormModule.html","title":"module - JsonSchemaFormModule","body":"\n                   \n\n\n\n\n    Modules\n    JsonSchemaFormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JsonSchemaFormModule\n\n\n\ncluster_JsonSchemaFormModule_declarations\n\n\n\ncluster_JsonSchemaFormModule_JsonSchemaFormComponent_providers\n\n\n\ncluster_JsonSchemaFormModule_imports\n\n\n\ncluster_JsonSchemaFormModule_exports\n\n\n\n\nJsonSchemaFormComponent\n\nJsonSchemaFormComponent\n\n\n\nJsonSchemaFormModule\n\nJsonSchemaFormModule\n\nJsonSchemaFormModule -->\n\nJsonSchemaFormComponent->JsonSchemaFormModule\n\n\n\n\n\nJsonSchemaFormComponent \n\nJsonSchemaFormComponent \n\nJsonSchemaFormComponent  -->\n\nJsonSchemaFormModule->JsonSchemaFormComponent \n\n\n\n\n\nWidgetLibraryModule \n\nWidgetLibraryModule \n\nWidgetLibraryModule  -->\n\nJsonSchemaFormModule->WidgetLibraryModule \n\n\n\n\n\nJsonSchemaFormService\n\nJsonSchemaFormService\n\nJsonSchemaFormComponent -->\n\nJsonSchemaFormService->JsonSchemaFormComponent\n\n\n\n\n\nLayoutService\n\nLayoutService\n\nJsonSchemaFormComponent -->\n\nLayoutService->JsonSchemaFormComponent\n\n\n\n\n\nSchemaService\n\nSchemaService\n\nJsonSchemaFormComponent -->\n\nSchemaService->JsonSchemaFormComponent\n\n\n\n\n\nWidgetLibraryModule\n\nWidgetLibraryModule\n\nJsonSchemaFormModule -->\n\nWidgetLibraryModule->JsonSchemaFormModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/json-schema-form.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            JsonSchemaFormComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            WidgetLibraryModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JsonSchemaFormComponent\n                        \n                        \n                            WidgetLibraryModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { WidgetLibraryModule } from './widget-library/widget-library.module';\n\nimport { JsonSchemaFormComponent } from './json-schema-form.component';\n\n@NgModule({\n    declarations: [ JsonSchemaFormComponent ],\n    exports: [ JsonSchemaFormComponent, WidgetLibraryModule ],\n    imports: [ CommonModule, WidgetLibraryModule ]\n})\nexport class JsonSchemaFormModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JsonSchemaFormService.html":{"url":"injectables/JsonSchemaFormService.html","title":"injectable - JsonSchemaFormService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JsonSchemaFormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/json-schema-form.service.ts\n        \n\n            \n                Description\n            \n            \n                TODO \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeControl\n                            \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeControl\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeControl(control: Widget, bind)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.service.ts:10\n                \n            \n\n\n            \n                \n                    Sets a widgets properties upon Widget creation \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                Widget\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    bind\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(ctx: any, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.service.ts:15\n                \n            \n\n\n            \n                \n                    TODO \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Widget } from './widget-library';\n\n/** TODO */\n@Injectable()\nexport class JsonSchemaFormService {\n    private x = false;\n\n    /** Sets a widgets properties upon Widget creation */\n    initializeControl(control: Widget, bind = true): void {\n        control.controlName = control.layoutNode.name;\n    }\n\n    /** TODO */\n    updateValue(ctx: any, value: any): void {\n        // TODO\n        this.x = !this.x;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LayoutItem.html":{"url":"interfaces/LayoutItem.html","title":"interface - LayoutItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LayoutItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/layout-item.data.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        $ref\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        items\n                                \n                                \n                                            Optional\n                                        key\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                        options\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $ref\n                                    \n                                \n                                \n                                    \n                                        $ref:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    TODO \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique Identifier for the item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    TODO \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Data pointer to map this item to a data value \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name for the item.  Will be used as the input[name] \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Options for \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Specify what type of widget is used to represent the data.\nIf not is specified, the JSON Schema will be used to determine the most appropriate widget\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface LayoutItem {\n    /** Unique Identifier for the item */\n    id: string;\n    /** Options for */\n    options: any;\n    /** TODO */\n    $ref?: any;\n    // arrayItem?;\n    // arrayItemType?;\n    // dataPointer?;\n    // dataType?;\n    /** TODO */\n    items?: Array;\n    /** Data pointer to map this item to a data value */\n    key?: string;\n    /** Name for the item.  Will be used as the input[name] */\n    name?: string;\n    // recursiveReference?;\n    /**\n     * Specify what type of widget is used to represent the data.\n     * If not is specified, the JSON Schema will be used to determine the most appropriate widget\n     */\n    type?: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LayoutService.html":{"url":"injectables/LayoutService.html","title":"injectable - LayoutService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LayoutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/layout.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides services for handling layouts \n\n            \n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    layout\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        layout\n                    \n                \n\n                \n                    \n                        getlayout()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/layout.service.ts:17\n                                \n                            \n\n                \n                    \n                        setlayout(value)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/layout.service.ts:14\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nList of layout Items to be displayed in the UI\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { clone, pick, uniqueId } from 'lodash';\n\nimport { LayoutItem } from './layout-item.data';\n\n/** Provides services for handling layouts */\n@Injectable()\nexport class LayoutService {\n    private _layout: Array = [];\n    /**\n     * @param value - List of layout Items to be displayed in the UI\n     */\n    set layout(value: Array) {\n        this._layout = LayoutService.buildLayout(value);\n    }\n    get layout(): Array {\n        return this._layout;\n    }\n\n    private static buildLayout(layout: Array): Array {\n        // let hasSubmitButton = !JsonPointer.get(jsf, '/formOptions/addSubmit');\n        const formLayout: Array = LayoutService.mapLayout(layout, (layoutItem, index, layoutPointer) => {\n            const newNode: LayoutItem = {\n                id: uniqueId(),\n                options: {},\n                ...pick(layoutItem, ['key', 'type', 'name'])\n            };\n            // Dropped code to push invalid props into options\n            // Dropped code to convert widget to type\n            // Dropped code to convert options.legend to options.title\n\n            return newNode;\n    // if (isObject(layoutItem)) {\n\n    //   if (!hasOwn(newNode.options, 'validationMessages')) {\n    //     if (hasOwn(newNode.options, 'errorMessages')) {\n    //       newNode.options.validationMessages = newNode.options.errorMessages;\n    //       delete newNode.options.errorMessages;\n\n    //     // Convert Angular Schema Form (AngularJS) 'validationMessage' to\n    //     // Angular JSON Schema Form 'validationMessages'\n    //     // TV4 codes from https://github.com/geraintluff/tv4/blob/master/source/api.js\n    //     } else if (hasOwn(newNode.options, 'validationMessage')) {\n    //       if (typeof newNode.options.validationMessage === 'string') {\n    //         newNode.options.validationMessages = newNode.options.validationMessage;\n    //       } else {\n    //         newNode.options.validationMessages = {};\n    //         Object.keys(newNode.options.validationMessage).forEach(key => {\n    //           const code = key + '';\n    //           const newKey =\n    //             code ===  '0'  ? 'type' :\n    //             code ===  '1'  ? 'enum' :\n    //             code === '100' ? 'multipleOf' :\n    //             code === '101' ? 'minimum' :\n    //             code === '102' ? 'exclusiveMinimum' :\n    //             code === '103' ? 'maximum' :\n    //             code === '104' ? 'exclusiveMaximum' :\n    //             code === '200' ? 'minLength' :\n    //             code === '201' ? 'maxLength' :\n    //             code === '202' ? 'pattern' :\n    //             code === '300' ? 'minProperties' :\n    //             code === '301' ? 'maxProperties' :\n    //             code === '302' ? 'required' :\n    //             code === '304' ? 'dependencies' :\n    //             code === '400' ? 'minItems' :\n    //             code === '401' ? 'maxItems' :\n    //             code === '402' ? 'uniqueItems' :\n    //             code === '500' ? 'format' : code + '';\n    //           newNode.options.validationMessages[newKey] = newNode.options.validationMessage[key];\n    //         });\n    //       }\n    //       delete newNode.options.validationMessage;\n    //     }\n    //   }\n    // } else if (JsonPointer.isJsonPointer(layoutItem)) {\n    //   newNode.dataPointer = layoutItem;\n    // } else if (isString(layoutItem)) {\n    //   newNode.key = layoutItem;\n    // } else {\n    //   console.error('buildLayout error: Form layout element not recognized:');\n    //   console.error(layoutItem);\n    //   return null;\n    // }\n        });\n\n        return formLayout;\n    }\n\n    /**\n     * 'mapLayout' function\n     *\n     * Creates a new layout by running each element in an existing layout through\n     * an iteratee. Recursively maps within array elements 'items' and 'tabs'.\n     * The iteratee is invoked with four arguments: (value, index, layout, path)\n     *\n     * The returned layout may be longer (or shorter) then the source layout.\n     *\n     * If an item from the source layout returns multiple items (as '*' usually will),\n     * this function will keep all returned items in-line with the surrounding items.\n     *\n     * If an item from the source layout causes an error and returns null, it is\n     * skipped without error, and the function will still return all non-null items.\n     *\n     * @param  layout - the layout to map\n     * @param  function - the funciton to invoke on each element\n     * @param  layoutPointer - the layoutPointer to layout, inside rootLayout\n     * @param  rootLayout - the root layout, which conatins layout\n     * @return the mapped layout\n     */\n    private static mapLayout(layout: Array, fn: (v: any, i?: number, l?: any, p?: any) => LayoutItem,\n        layoutPointer: string|Array = '', rootLayout: Array = layout): Array {\n        const indexPad = 0;\n\n        return layout.reduce((mappedLayout: Array, item: LayoutItem, index: number) => {\n            const realIndex: number = +index + indexPad;\n            const newLayoutPointer = `${layoutPointer}/${realIndex}`;\n            let newNode: LayoutItem = clone(item);\n            let newLayout: Array = mappedLayout;\n            // Note: removed logic to convert tabs to items and items to [items]\n            // if (item.items) {\n            //     newNode.items = LayoutService.mapLayout(item.items, fn, `${newLayoutPointer}/items`, rootLayout);\n            // }\n            newNode = fn(newNode, realIndex, newLayoutPointer, rootLayout);\n            // if (isNil(newNode)) {\n            //     indexPad -= 1;\n            // } else {\n            //     if (Array.isArray(newNode)) { indexPad += newNode.length - 1; }\n                newLayout = mappedLayout.concat(newNode);\n            // }\n\n            return newLayout;\n        }, []);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchemaService.html":{"url":"injectables/SchemaService.html","title":"injectable - SchemaService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SchemaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/schema.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides services for parsing JSON Schema and validating data \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    schema\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/schema.service.ts:30\n                \n            \n\n\n            \n                \n                    Validates data based on set JSON Schema\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ndata to be valdiated\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        schema\n                    \n                \n\n                \n                    \n                        getschema()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/schema.service.ts:19\n                                \n                            \n\n                \n                    \n                        setschema(value)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/schema.service.ts:15\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nJSON Schema to be used for validation\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport Ajv from 'ajv';\n\nimport { JSONSchema7 } from 'json-schema';\n\n/** Provides services for parsing JSON Schema and validating data */\n@Injectable()\nexport class SchemaService {\n    // TODO: Setter function to automatically upgrade schema version?\n    private _schema: JSONSchema7 = {};\n    /**\n     * @param value - JSON Schema to be used for validation\n     */\n    set schema(value: JSONSchema7) {\n        this._schema = value;\n        this.compileSchema();\n    }\n    get schema(): JSONSchema7 {\n        return this._schema;\n    }\n\n    private readonly ajv: Ajv.Ajv = new Ajv({ allErrors: true, jsonPointers: true, unknownFormats: 'ignore' });\n    private validator: Ajv.ValidateFunction;\n\n    /**\n     * Validates data based on set JSON Schema\n     * @param data - data to be valdiated\n     */\n    validate(data: any): boolean {\n        return this.validator(data);\n    }\n\n    private compileSchema() {\n        this.ajv.removeSchema(this.schema);\n        this.validator = this.ajv.compile(this.schema);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectWidgetComponent.html":{"url":"components/SelectWidgetComponent.html","title":"component - SelectWidgetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectWidgetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-json-schema-form/src/lib/widget-library/container/select-widget/select-widget.component.ts\n\n\n    \n        Description\n    \n    \n        Dynamically creates a widget component based on a layout node.\nChanges in @Input attributes will be passed onto the created widget.\n\n    \n\n    \n        Extends\n    \n    \n                Widget\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                jsf-select-widget\n            \n\n            \n                styleUrls\n                ./select-widget.component.css\n            \n\n\n\n            \n                templateUrl\n                ./select-widget.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                widgetContainer\n                            \n                            \n                                controlDisabled\n                            \n                            \n                                controlName\n                            \n                            \n                                controlValue\n                            \n                            \n                                formControl\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataIndex\n                            \n                            \n                                layoutIndex\n                            \n                            \n                                layoutNode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactory: ComponentFactoryResolver, widgetLibraryService: WidgetLibraryService, jsf: JsonSchemaFormService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/widget-library/container/select-widget/select-widget.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactory\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        widgetLibraryService\n                                                  \n                                                        \n                                                                        WidgetLibraryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jsf\n                                                  \n                                                        \n                                                                        JsonSchemaFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataIndex\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:25\n\n                            \n                        \n                \n                    \n                        Index of the data in data array \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutIndex\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:23\n\n                            \n                        \n                \n                    \n                        Index of the layout in the Layout array \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutNode\n                    \n                \n                \n                    \n                        Type :         LayoutItem\n\n                    \n                \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:21\n\n                            \n                        \n                \n                    \n                        Layout Node describing the control \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(event: Event)\n                \n            \n\n\n            \n                \n                    Inherited from         Widget\n\n                \n            \n            \n                \n                        Defined in         Widget:42\n\n                \n            \n\n\n            \n                \n                    Update the value of the control\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nChange event\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            widgetContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ViewContainerRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('widgetContainer', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/container/select-widget/select-widget.component.ts:24\n                            \n                        \n\n                \n                    \n                        Placeholder for injecting widget \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:10\n\n                            \n                        \n\n                \n                    \n                        Flag to disable the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:12\n\n                            \n                        \n\n                \n                    \n                        Name for the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:14\n\n                            \n                        \n\n                \n                    \n                        Value of the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AbstractControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:16\n\n                            \n                        \n\n                \n                    \n                        Associated FormControl for widget \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Widget\n\n                                \n                            \n                        \n                            \n                                    Defined in         Widget:18\n\n                            \n                        \n\n                \n                    \n                        Options for the control \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n    Component, ComponentFactoryResolver, ComponentRef,\n    OnChanges, OnInit, ViewChild, ViewContainerRef\n} from '@angular/core';\n\nimport { JsonSchemaFormService } from '../../../json-schema-form.service';\n\nimport { Widget } from '../../widget';\nimport { WidgetLibraryService } from '../../widget-library.service';\n\n/**\n * Dynamically creates a widget component based on a layout node.\n * Changes in @Input attributes will be passed onto the created widget.\n */\n@Component({\n    selector: 'jsf-select-widget',\n    styleUrls: ['./select-widget.component.css'],\n    templateUrl: './select-widget.component.html'\n})\nexport class SelectWidgetComponent extends Widget implements OnInit, OnChanges {\n    private newComponent: ComponentRef;\n\n    /** Placeholder for injecting widget */\n    @ViewChild('widgetContainer', { read: ViewContainerRef }) widgetContainer: ViewContainerRef;\n\n    constructor(private readonly componentFactory: ComponentFactoryResolver,\n        private readonly widgetLibraryService: WidgetLibraryService,\n        jsf: JsonSchemaFormService) {\n            super(jsf);\n    }\n\n    ngOnInit() {\n        this.updateComponent();\n    }\n\n    ngOnChanges() {\n        this.updateComponent();\n    }\n\n    private updateComponent(): void {\n        this.createComponent();\n        if (this.newComponent) {\n            for (const input of ['layoutNode', 'layoutIndex', 'dataIndex']) {\n                this.newComponent.instance[input] = this[input];\n            }\n        }\n    }\n\n    private createComponent(): void {\n        // TODO: What if layoutNode were to change?  The form would be incorrect.\n        if (!this.newComponent && this.layoutNode && this.layoutNode.type) {\n            this.newComponent = this.widgetContainer.createComponent(\n                this.componentFactory.resolveComponentFactory(this.widgetLibraryService.getWidget(this.layoutNode.type) as any)\n            );\n        }\n    }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./select-widget.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'jsf-button'},{'name': 'HiddenComponent', 'selector': 'jsf-hidden'},{'name': 'JsonSchemaFormComponent', 'selector': 'jsf-json-schema-form'},{'name': 'SelectWidgetComponent', 'selector': 'jsf-select-widget'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectWidgetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Widget.html":{"url":"classes/Widget.html","title":"class - Widget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Widget\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/widget-library/widget.ts\n        \n\n            \n                Description\n            \n            \n                Widget \n\n            \n\n\n            \n                Implements\n            \n            \n                            OnInit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                controlDisabled\n                            \n                            \n                                controlName\n                            \n                            \n                                controlValue\n                            \n                            \n                                formControl\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataIndex\n                            \n                            \n                                layoutIndex\n                            \n                            \n                                layoutNode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jsf: JsonSchemaFormService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget.ts:25\n                            \n                        \n\n                \n                    \n                            constructor \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jsf\n                                                  \n                                                        \n                                                                        JsonSchemaFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget.ts:10\n                            \n                        \n\n                \n                    \n                        Flag to disable the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget.ts:12\n                            \n                        \n\n                \n                    \n                        Name for the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget.ts:14\n                            \n                        \n\n                \n                    \n                        Value of the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AbstractControl\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget.ts:16\n                            \n                        \n\n                \n                    \n                        Associated FormControl for widget \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget.ts:18\n                            \n                        \n\n                \n                    \n                        Options for the control \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget.ts:42\n                \n            \n\n\n            \n                \n                    Update the value of the control\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nChange event\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataIndex\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget.ts:25\n                            \n                        \n                \n                    \n                        Index of the data in data array \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutIndex\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget.ts:23\n                            \n                        \n                \n                    \n                        Index of the layout in the Layout array \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutNode\n                    \n                \n                \n                    \n                        Type :         LayoutItem\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget.ts:21\n                            \n                        \n                \n                    \n                        Layout Node describing the control \n\n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\nimport { LayoutItem } from '../layout-item.data';\n\n/** Widget */\nexport abstract class Widget implements OnInit {\n    /** Flag to disable the control */\n    controlDisabled = false;\n    /** Name for the control */\n    controlName: string;\n    /** Value of the control */\n    controlValue: any;\n    /** Associated FormControl for widget */\n    formControl: AbstractControl;\n    /** Options for the control */\n    options: any;\n\n    /** Layout Node describing the control */\n    @Input() layoutNode: LayoutItem;\n    /** Index of the layout in the Layout array */\n    @Input() layoutIndex: Array;\n    /** Index of the data in data array */\n    @Input() dataIndex: Array;\n\n    /** constructor */\n    constructor(protected jsf: JsonSchemaFormService) {}\n\n    /**\n     * Initialize the control and populate the options\n     */\n    ngOnInit() {\n        this.jsf.initializeControl(this);\n        this.options = this.layoutNode.options || {};\n    }\n\n    /**\n     * Update the value of the control\n     * @param event - Change event\n     */\n    updateValue(event: Event) {\n        this.jsf.updateValue(this, (event.target).value);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WidgetLibraryModule.html":{"url":"modules/WidgetLibraryModule.html","title":"module - WidgetLibraryModule","body":"\n                   \n\n\n\n\n    Modules\n    WidgetLibraryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WidgetLibraryModule\n\n\n\ncluster_WidgetLibraryModule_declarations\n\n\n\ncluster_WidgetLibraryModule_exports\n\n\n\n\nButtonComponent\n\nButtonComponent\n\n\n\nWidgetLibraryModule\n\nWidgetLibraryModule\n\nWidgetLibraryModule -->\n\nButtonComponent->WidgetLibraryModule\n\n\n\n\n\nHiddenComponent\n\nHiddenComponent\n\nWidgetLibraryModule -->\n\nHiddenComponent->WidgetLibraryModule\n\n\n\n\n\nSelectWidgetComponent\n\nSelectWidgetComponent\n\nWidgetLibraryModule -->\n\nSelectWidgetComponent->WidgetLibraryModule\n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nWidgetLibraryModule->ButtonComponent \n\n\n\n\n\nHiddenComponent \n\nHiddenComponent \n\nHiddenComponent  -->\n\nWidgetLibraryModule->HiddenComponent \n\n\n\n\n\nSelectWidgetComponent \n\nSelectWidgetComponent \n\nSelectWidgetComponent  -->\n\nWidgetLibraryModule->SelectWidgetComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/widget-library/widget-library.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ButtonComponent\n                        \n                        \n                            HiddenComponent\n                        \n                        \n                            SelectWidgetComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            BASIC_WIDGETS\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ButtonComponent\n                        \n                        \n                            HiddenComponent\n                        \n                        \n                            SelectWidgetComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { BASIC_WIDGETS } from '.';\n\n@NgModule({\n    declarations: [ ...BASIC_WIDGETS ],\n    entryComponents: [ ...BASIC_WIDGETS ],\n    exports: [ ...BASIC_WIDGETS ],\n    imports: [ CommonModule, ReactiveFormsModule ]\n})\nexport class WidgetLibraryModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WidgetLibraryService.html":{"url":"injectables/WidgetLibraryService.html","title":"injectable - WidgetLibraryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WidgetLibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/widget-library/widget-library.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides services for mapping a widget component to a layoutNode type\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWidget\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWidget\n                        \n                        \n                    \n                \n            \n            \n                \ngetWidget(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/widget-library/widget-library.service.ts:25\n                \n            \n\n\n            \n                \n                    Gets a widget class from the type\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntype of component\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { ButtonComponent } from './input/button/button.component';\nimport { HiddenComponent } from './input/hidden/hidden.component';\nimport { Widget } from './widget';\n\n/**\n * Provides services for mapping a widget component to a layoutNode type\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class WidgetLibraryService {\n    private readonly defaultWidget = 'hidden';\n\n    private readonly widgets = {\n        button: ButtonComponent,\n        hidden: HiddenComponent\n    };\n\n    /**\n     * Gets a widget class from the type\n     * @param type - type of component\n     */\n    getWidget(type: string): typeof Widget {\n        return this.hasWidget(type)\n            ? this.widgets[type]\n            : this.widgets[this.defaultWidget];\n    }\n\n    private hasWidget(type: string): boolean {\n        return !!this.widgets[type];\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.0\n        \n            @angular/cdk : ^7.2.0\n        \n            @angular/common : ~7.2.0\n        \n            @angular/compiler : ~7.2.0\n        \n            @angular/core : ~7.2.0\n        \n            @angular/flex-layout : 7.0.0-beta.24\n        \n            @angular/forms : ~7.2.0\n        \n            @angular/http : ~7.2.0\n        \n            @angular/material : ~7.2.0\n        \n            @angular/platform-browser : ~7.2.0\n        \n            @angular/platform-browser-dynamic : ~7.2.0\n        \n            @angular/router : ~7.2.0\n        \n            @types/ace : 0.0.36\n        \n            @types/json-schema : ^7.0.3\n        \n            ajv : ^6.10.0\n        \n            brace : ^0.11.0\n        \n            core-js : ^2.5.4\n        \n            lodash : ^4.17.11\n        \n            ng2-ace-editor : 0.3.9\n        \n            rxjs : ~6.5.2\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.9.1\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n\nNgxJsonSchemaForm\nA JSON Schema Form builder for Angular 7+, similar to\n\nAngular JSON Schema Form's \n\nNote: This project attemtps to take over where its predecesor left off.\nIt's based off of the above project, but rewritten from the ground up.\nNote: This project is not ready for consumption.  There is still a lot to do to\nbring parity with Angular JSON Schema Form\nCheck out the live demo and play with the examples\nCheck out some examples here.\nTo install from NPM\nnpm install ngx-json-schema-form\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License\nCopyright for portions of project NGX-Json-Schema-Form are held by [David Schnell-Davis, 2014]\nas part of project Angular2-Json-Schema-Form. All other copyright for project NGX-Json-Schema-Form\nare held by [James Scharett, 2019]\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        JsonSchemaFormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WidgetLibraryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JsonSchemaFormModule\n\n\n\ncluster_JsonSchemaFormModule_declarations\n\n\n\ncluster_JsonSchemaFormModule_JsonSchemaFormComponent_providers\n\n\n\ncluster_JsonSchemaFormModule_imports\n\n\n\ncluster_JsonSchemaFormModule_exports\n\n\n\ncluster_WidgetLibraryModule\n\n\n\ncluster_WidgetLibraryModule_declarations\n\n\n\ncluster_WidgetLibraryModule_exports\n\n\n\n\nJsonSchemaFormComponent\n\nJsonSchemaFormComponent\n\n\n\nJsonSchemaFormModule\n\nJsonSchemaFormModule\n\nJsonSchemaFormModule -->\n\nJsonSchemaFormComponent->JsonSchemaFormModule\n\n\n\n\n\nJsonSchemaFormComponent \n\nJsonSchemaFormComponent \n\nJsonSchemaFormComponent  -->\n\nJsonSchemaFormModule->JsonSchemaFormComponent \n\n\n\n\n\nWidgetLibraryModule \n\nWidgetLibraryModule \n\nWidgetLibraryModule  -->\n\nJsonSchemaFormModule->WidgetLibraryModule \n\n\n\n\n\nJsonSchemaFormService\n\nJsonSchemaFormService\n\nJsonSchemaFormComponent -->\n\nJsonSchemaFormService->JsonSchemaFormComponent\n\n\n\n\n\nLayoutService\n\nLayoutService\n\nJsonSchemaFormComponent -->\n\nLayoutService->JsonSchemaFormComponent\n\n\n\n\n\nSchemaService\n\nSchemaService\n\nJsonSchemaFormComponent -->\n\nSchemaService->JsonSchemaFormComponent\n\n\n\n\n\nWidgetLibraryModule\n\nWidgetLibraryModule\n\nJsonSchemaFormModule -->\n\nWidgetLibraryModule->JsonSchemaFormModule\n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nWidgetLibraryModule->ButtonComponent \n\n\n\n\n\nHiddenComponent \n\nHiddenComponent \n\nHiddenComponent  -->\n\nWidgetLibraryModule->HiddenComponent \n\n\n\n\n\nSelectWidgetComponent \n\nSelectWidgetComponent \n\nSelectWidgetComponent  -->\n\nWidgetLibraryModule->SelectWidgetComponent \n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nWidgetLibraryModule -->\n\nButtonComponent->WidgetLibraryModule\n\n\n\n\n\nHiddenComponent\n\nHiddenComponent\n\nWidgetLibraryModule -->\n\nHiddenComponent->WidgetLibraryModule\n\n\n\n\n\nSelectWidgetComponent\n\nSelectWidgetComponent\n\nWidgetLibraryModule -->\n\nSelectWidgetComponent->WidgetLibraryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BASIC_WIDGETS   (projects/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-json-schema-form/src/lib/widget-library/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BASIC_WIDGETS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    ButtonComponent, HiddenComponent,\n    SelectWidgetComponent\n]\n                        \n                    \n\n                \n                    \n                        List of all Widget Components for ease of use. \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
