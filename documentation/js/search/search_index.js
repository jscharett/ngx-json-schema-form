var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AbstractWidget.html",[0,0.418,1,1.486]],["body/classes/AbstractWidget.html",[0,0.313,1,2.147,2,1.611,3,0.28,4,0.28,5,0.28,6,0.526,7,0.199,8,0.202,9,2.473,10,0.943,11,2.374,12,3.165,13,3.165,14,4.329,15,0.788,16,1.102,17,2.819,18,2.819,19,2.819,20,3.47,21,2.394,22,0.943,23,2.142,24,2.374,25,3.627,26,3.627,27,2.946,28,1.945,29,1.808,30,2.336,31,2.848,32,2.147,33,1.402,34,2.473,35,1.102,36,0.031,37,1.235,38,0.981,39,0.943,40,1.948,41,1.024,42,1.8,43,1.509,44,2.473,45,2.374,46,2.374,47,3.635,48,0.87,49,2.473,50,2.473,51,2.819,52,2.473,53,1.509,54,1.102,55,2.473,56,2.374,57,2.106,58,2.473,59,2.543,60,2.142,61,0.692,62,1.102,63,2.162,64,2.473,65,1.216,66,2.473,67,2.541,68,2.473,69,2.314,70,3.054,71,0.644,72,4.329,73,2.807,74,3.054,75,2.072,76,0.42,77,2.072,78,1.611,79,1.453,80,2.473,81,2.473,82,1.322,83,0.249,84,2.473,85,1.611,86,2.473,87,2.473,88,2.473,89,1.453,90,2.473,91,2.072,92,1.509,93,0.692,94,2.473,95,2.473,96,2.473,97,1.808,98,2.072,99,2.473,100,3.645,101,2.473,102,2.473,103,1.808,104,2.473,105,2.473,106,2.072,107,1.322,108,2.473,109,2.473,110,2.473,111,2.473,112,2.473,113,2.473,114,1.322,115,2.473,116,2.473,117,0.011,118,0.017,119,0.011]],["title/components/ButtonComponent.html",[120,1,121,1.618]],["body/components/ButtonComponent.html",[0,0.382,1,2.722,3,0.342,4,0.342,5,0.342,6,0.372,7,0.162,8,0.175,10,1.088,15,0.467,16,1.272,17,2.739,18,2.739,19,2.739,20,3.152,21,2.175,22,1.088,23,2.471,28,1.357,29,3.075,30,2.56,31,2.798,32,2.352,33,1.396,35,1.272,36,0.031,37,1.423,38,0.968,39,1.088,40,3.126,41,1.25,42,1.71,43,1.25,45,1.967,46,1.967,47,3.436,48,0.721,51,1.967,53,1.25,54,1.583,56,1.967,57,2.001,59,1.774,60,1.774,61,0.845,62,0.913,65,0.721,71,0.696,76,0.513,78,1.967,79,1.774,82,1.614,83,0.304,117,0.014,118,0.019,119,0.014,120,1.464,121,2.56,122,2.248,123,1.477,124,1.967,125,1.357,126,1.967,127,3.02,128,3.524,129,3.075,130,2.207,131,1.774,132,3.349,133,4.056,134,3.075,135,4.841,136,2.471,137,4.207,138,3.02,139,4.167,140,2.207,141,2.207,142,2.207,143,2.207,144,2.207,145,2.207,146,2.53,147,2.207,148,1.967,149,1.614,150,1.774,151,3.02,152,1.357,153,2.53,154,1.357,155,2.207,156,2.207,157,1.154,158,1.486,159,1.89,160,1.967,161,3.409,162,1.967,163,1.967,164,1.477,165,1.967,166,1.477,167,1.967,168,1.477,169,1.477,170,1.967,171,1.967]],["title/modules/ButtonModule.html",[172,0.855,173,1.944]],["body/modules/ButtonModule.html",[0,0.533,3,0.477,4,0.477,5,0.477,6,0.372,7,0.141,8,0.141,36,0.031,71,0.721,76,0.715,83,0.424,117,0.019,118,0.024,119,0.019,121,3.24,154,1.893,157,1.61,172,1.089,173,3.728,174,1.744,175,1.893,176,2.563,177,2.06,178,1.893,179,3.049,180,3.53,181,3.53,182,3.53,183,2.801,184,1.61,185,4.213,186,3.831,187,2.563,188,2.06,189,2.355,190,4.213,191,1.893]],["title/modules/CoreModule.html",[172,0.855,192,1.944]],["body/modules/CoreModule.html",[0,0.541,3,0.484,4,0.484,5,0.484,6,0.467,7,0.177,8,0.177,22,1.105,33,1.021,36,0.031,57,1.634,61,1.196,71,0.759,76,0.726,83,0.43,117,0.02,118,0.024,119,0.02,174,1.77,178,1.921,187,2.586,188,2.091,189,2.58,191,1.921,192,3.373,193,4.275,194,3.444,195,4.81,196,4.275,197,4.81,198,5.288,199,2.512,200,2.285,201,3.444,202,4.275,203,4.275,204,1.397,205,4.275,206,2.512,207,3.582,208,4.275]],["title/interfaces/Data.html",[65,0.79,209,1.169]],["body/interfaces/Data.html",[0,0.409,3,0.366,4,0.366,5,0.366,6,0.285,7,0.108,8,0.108,15,0.5,16,1.333,31,1.727,32,2.254,36,0.031,38,0.852,43,1.825,48,1.052,53,2.231,57,2.35,62,0.977,65,1.544,69,1.727,71,0.634,76,0.549,82,1.727,83,0.504,93,0.904,117,0.015,118,0.02,119,0.015,125,1.452,158,1.558,159,2.534,199,1.899,200,1.727,201,2.105,204,1.64,209,1.142,210,1.727,211,2.363,212,2.363,213,1.333,214,4.203,215,3.693,216,2.363,217,2.363,218,2.871,219,2.708,220,3.693,221,2.156,222,2.105,223,2.708,224,2.708,225,3.222,226,2.708,227,3.693,228,1.899,229,2.105,230,2.708,231,2.708,232,1.727,233,2.708,234,2.708,235,2.708,236,2.708,237,2.363,238,2.708,239,2.708,240,3.667,241,2.708,242,3.222,243,2.06,244,2.708,245,2.708,246,4.203,247,2.708,248,4.203,249,3.509,250,2.708,251,2.708,252,2.708,253,2.708,254,2.363,255,2.708,256,2.708,257,2.708,258,2.708,259,2.708]],["title/injectables/DataEventPluginService.html",[201,2.154,213,1]],["body/injectables/DataEventPluginService.html",[0,0.342,3,0.306,4,0.306,5,0.306,6,0.466,7,0.177,8,0.177,10,0.7,15,0.419,16,1.177,22,1.007,28,1.216,31,2.081,32,2.471,33,1.19,35,1.379,36,0.031,37,1.179,38,0.934,39,1.179,43,1.612,48,1.313,53,2.187,57,2.437,61,1.089,62,0.819,65,1.488,69,2.081,71,0.577,76,0.46,82,1.447,83,0.458,93,0.757,117,0.012,118,0.018,119,0.012,125,1.749,158,0.956,159,2.546,199,1.59,200,1.447,201,2.535,204,1.63,209,0.956,211,3.861,212,1.979,213,1.177,214,4.177,215,3.819,216,1.979,217,1.979,218,2.535,219,2.268,220,4.177,221,2.438,222,2.535,223,3.261,224,3.261,225,3.861,226,3.261,227,4.425,228,1.59,229,2.535,230,3.261,231,3.261,232,2.081,233,2.268,234,2.268,235,2.268,236,3.261,237,2.846,238,3.261,239,3.261,240,3.861,241,4.177,242,3.861,243,1.905,244,2.268,245,2.268,246,3.819,247,2.268,248,3.819,249,3.246,250,2.268,251,2.268,252,2.268,253,2.268,254,1.979,255,2.268,256,2.268,257,2.268,258,2.268,259,2.268,260,1.324,261,3.893,262,3.261,263,2.707,264,3.893,265,2.707,266,2.707]],["title/injectables/ElementDataStorageService.html",[32,1.486,213,1]],["body/injectables/ElementDataStorageService.html",[0,0.314,3,0.281,4,0.281,5,0.281,6,0.45,7,0.193,8,0.171,10,0.641,15,0.384,22,0.945,32,2.149,33,1.142,35,1.447,36,0.031,37,1.237,38,0.812,39,1.237,42,1.885,48,1.439,61,1.338,65,1.518,69,1.952,71,0.314,76,0.421,83,0.249,85,2.824,92,1.027,93,0.694,107,1.952,117,0.011,118,0.017,119,0.011,125,2.149,152,1.641,158,1.69,159,2.845,204,1.744,213,1.105,229,2.379,232,2.557,240,4.407,242,2.67,243,1.396,260,1.213,267,5.1,268,2.48,269,3.9,270,2.698,271,2.67,272,3.06,273,2.379,274,2.379,275,3.653,276,3.653,277,3.653,278,3.653,279,3.653,280,3.653,281,2.67,282,3.06,283,1.952,284,3.06,285,3.06,286,3.653,287,3.06,288,3.653,289,2.67,290,4.784,291,3.653,292,3.653,293,3.653,294,2.67,295,4.008,296,3.653,297,3.653,298,3.542,299,2.48,300,5.335,301,5.335,302,5.335,303,3.653,304,2.48,305,3.653,306,3.653,307,2.48,308,3.653,309,2.48,310,2.379,311,2.078,312,1.813,313,2.48,314,1.512,315,3.653,316,3.653,317,2.48,318,2.48,319,2.48,320,4.336,321,2.48,322,1.615,323,2.48,324,4.784,325,2.48,326,2.48,327,1.813,328,2.48]],["title/modules/FormModule.html",[172,0.855,329,1.944]],["body/modules/FormModule.html",[0,0.517,3,0.463,4,0.463,5,0.463,6,0.361,7,0.172,8,0.172,36,0.031,71,0.746,76,0.694,83,0.411,117,0.019,118,0.023,119,0.019,154,1.836,157,1.561,166,3.203,169,1.998,172,1.056,174,1.691,175,1.836,176,2.527,177,1.998,178,1.836,179,3.006,183,2.747,184,1.561,187,2.514,188,1.998,189,2.31,191,2.31,329,3.779,330,3.423,331,3.423,332,3.423,333,3.423,334,3.319,335,4.085,336,2.66,337,3.423,338,4.085]],["title/components/HiddenComponent.html",[120,1,164,1.618]],["body/components/HiddenComponent.html",[0,0.388,1,2.731,3,0.347,4,0.347,5,0.347,6,0.376,7,0.163,8,0.176,10,1.1,15,0.475,16,1.286,17,2.769,18,2.769,19,2.769,20,3.179,21,2.193,22,1.1,23,2.498,28,1.378,29,3.109,30,2.578,31,2.817,32,2.368,33,1.402,35,1.286,36,0.031,37,1.431,38,0.973,39,1.1,40,3.139,41,1.27,42,1.725,43,1.27,45,1.998,46,1.998,47,3.252,48,0.732,51,1.998,53,1.27,54,1.594,56,1.998,57,2.015,59,1.802,60,1.802,61,0.858,62,0.928,65,0.732,71,0.7,76,0.521,78,1.998,79,1.802,82,1.64,83,0.308,117,0.014,118,0.019,119,0.014,120,1.476,121,1.5,122,2.273,123,1.5,124,1.998,125,1.378,126,1.998,128,3.563,129,3.109,131,1.802,132,3.365,134,3.109,136,2.498,139,4.187,140,2.242,141,2.242,142,2.242,143,2.242,144,2.242,145,2.242,146,2.57,147,2.242,148,1.998,152,1.378,156,2.242,157,1.172,158,1.503,159,1.911,160,1.998,161,3.432,162,1.998,163,1.998,164,2.578,165,1.998,166,1.5,167,1.998,168,1.5,169,1.5,170,1.998,171,1.998,339,3.067,340,4.253,341,3.568,342,4.881,343,4.253,344,3.067]],["title/modules/HiddenModule.html",[172,0.855,345,1.944]],["body/modules/HiddenModule.html",[0,0.533,3,0.477,4,0.477,5,0.477,6,0.372,7,0.141,8,0.141,36,0.031,71,0.721,76,0.715,83,0.424,117,0.019,118,0.024,119,0.019,154,1.893,157,1.61,164,3.24,172,1.089,174,1.744,175,1.893,176,2.563,177,2.06,178,1.893,179,3.049,183,2.801,184,1.61,186,3.831,187,2.563,188,2.06,189,2.355,191,1.893,345,3.728,346,3.53,347,3.53,348,3.53,349,4.213,350,4.213]],["title/components/JsonSchemaFormComponent.html",[120,1,166,1.618]],["body/components/JsonSchemaFormComponent.html",[0,0.184,3,0.164,4,0.164,5,0.164,6,0.456,7,0.21,8,0.216,10,0.793,11,1.563,12,2.243,13,2.243,15,0.475,22,0.62,24,1.563,28,1.078,30,1.743,33,1.201,35,0.726,36,0.031,37,0.922,38,0.799,39,0.62,40,2.406,43,0.993,48,0.851,54,0.439,61,0.671,62,1.286,63,0.917,65,1.124,67,2.023,71,0.595,73,2.955,74,2.01,76,0.246,79,0.853,83,0.146,89,0.853,92,1.949,93,0.997,98,1.216,103,1.061,117,0.007,118,0.011,119,0.007,120,0.928,121,0.71,122,1.283,123,0.71,124,0.945,125,0.652,126,0.945,130,1.754,131,0.853,132,2.499,136,1.41,149,0.776,150,0.853,157,0.555,158,1.26,159,1.078,160,0.945,161,2.321,162,0.945,163,0.945,164,0.71,165,0.945,166,1.743,167,0.945,168,0.71,169,0.71,170,0.945,171,0.945,172,0.62,178,1.078,184,0.555,204,0.474,206,0.853,207,1.216,221,1.931,249,2.571,271,1.061,272,1.216,312,1.754,314,0.601,351,5.159,352,1.216,353,2.094,354,3.302,355,2.4,356,2.4,357,2.626,358,2.321,359,2.4,360,2.4,361,2.4,362,2.01,363,3.565,364,2.4,365,1.41,366,1.754,367,2.4,368,1.061,369,2.01,370,2.01,371,2.606,372,2.4,373,2.4,374,1.216,375,2.4,376,2.01,377,2.01,378,3.068,379,2.4,380,2.4,381,3.569,382,2.766,383,2.01,384,3.948,385,2.4,386,2.886,387,3.308,388,3.308,389,2.499,390,1.216,391,1.451,392,5.03,393,1.451,394,4.215,395,4.215,396,3.276,397,3.276,398,4.215,399,5.03,400,1.451,401,2.4,402,2.4,403,2.4,404,2.4,405,2.4,406,1.451,407,1.451,408,2.4,409,1.754,410,2.4,411,2.01,412,1.451,413,1.998,414,2.571,415,2.571,416,1.451,417,2.01,418,2.4,419,2.4,420,2.4,421,2.4,422,1.451,423,1.451,424,2.4,425,1.451,426,1.451,427,2.571,428,1.216,429,1.061,430,1.451,431,0.853,432,1.216,433,1.061,434,1.451,435,1.451,436,1.451,437,1.216,438,2.01,439,1.451,440,1.451,441,1.451,442,1.451,443,1.451,444,1.216,445,1.451,446,1.451,447,1.216,448,1.451,449,1.451,450,1.216,451,1.216,452,1.451,453,1.451,454,0.853,455,1.061,456,1.451,457,1.216,458,1.061,459,1.216,460,3.068,461,1.451,462,1.451,463,3.068,464,1.451,465,1.451,466,1.451,467,2.4,468,3.068,469,1.451,470,1.451,471,1.451,472,1.451,473,1.451,474,1.451,475,1.451,476,1.451,477,1.451,478,1.451,479,1.451,480,1.451,481,1.451,482,1.451,483,1.216,484,1.451,485,1.451,486,3.308,487,1.451,488,1.451,489,1.451,490,1.451,491,1.216,492,1.451,493,1.451,494,2.4,495,1.451,496,3.068,497,1.451,498,1.451,499,1.451,500,1.451,501,1.451,502,1.451,503,1.451,504,1.451,505,1.451,506,1.451,507,1.451,508,1.451,509,1.451,510,1.451,511,1.451,512,1.451]],["title/modules/JsonSchemaFormModule.html",[172,0.855,513,1.944]],["body/modules/JsonSchemaFormModule.html",[0,0.423,3,0.379,4,0.379,5,0.379,6,0.398,7,0.151,8,0.183,22,0.864,33,0.798,36,0.031,61,0.935,71,0.76,76,0.568,83,0.336,117,0.015,118,0.021,119,0.015,154,1.502,157,1.278,169,1.635,172,0.864,173,3.737,174,1.384,175,1.502,176,1.502,177,1.635,178,2.027,179,2.728,183,2.411,184,1.278,187,2.206,188,1.635,189,2.293,191,2.027,192,3.737,194,2.937,195,4.277,197,4.277,204,1.093,329,3.737,334,3.4,336,2.177,337,2.801,345,3.737,513,3.864,514,2.801,515,2.801,516,2.801,517,4.51,518,3.343,519,3.343,520,3.343,521,3.343,522,3.343,523,3.343,524,3.343]],["title/injectables/JsonSchemaFormService.html",[30,1.618,213,1]],["body/injectables/JsonSchemaFormService.html",[0,0.518,1,2.051,2,1.469,3,0.255,4,0.255,5,0.385,6,0.403,7,0.153,8,0.184,10,0.88,15,0.349,16,0.682,21,2.051,22,0.88,23,2.408,30,1.665,33,0.979,35,1.24,36,0.031,37,1.06,38,0.832,39,1.06,41,1.409,42,1.82,43,0.934,47,1.325,48,1.314,53,1.409,54,0.682,59,1.325,61,1.147,62,1.381,65,0.979,71,0.577,76,0.578,83,0.227,92,2.028,93,1.147,114,2.44,117,0.01,118,0.016,119,0.01,120,1.665,122,1.206,123,2.923,132,1.325,148,1.469,149,1.206,150,1.325,158,1.82,172,0.88,176,1.014,187,1.103,189,1.529,191,1.014,194,2.669,204,1.602,206,2,213,1.24,228,1.325,243,2.044,260,1.103,269,2.488,281,1.649,283,2.44,295,1.89,298,2.408,322,2.217,394,1.89,491,1.89,525,4.565,526,2.256,527,3.404,528,3.404,529,3.404,530,4.099,531,5.91,532,2.852,533,2.256,534,4.099,535,4.099,536,4.565,537,5.151,538,3.434,539,4.099,540,4.565,541,3.404,542,3.434,543,2.256,544,2.488,545,2.488,546,3.404,547,2.256,548,2.256,549,3.825,550,3.825,551,4.099,552,3.404,553,3.404,554,1.649,555,2.256,556,2.256,557,2.256,558,1.89,559,2.256,560,2.256,561,2.256,562,2.256,563,3.404,564,1.89,565,2.256,566,2.256,567,2.256,568,2.256,569,2.256,570,3.404,571,2.256,572,2.256,573,2.256,574,2.256,575,2.256,576,1.325,577,2.256,578,1.89,579,2.256,580,2.256,581,2.256,582,2.256,583,2.256,584,2.256,585,3.404,586,2.256,587,2.256,588,2.256,589,2.256,590,2.256,591,2.256,592,2.256,593,2.256,594,2.256,595,2.256,596,2.256,597,2.256,598,2.256,599,2.256,600,2.256]],["title/interfaces/LayoutItem.html",[209,1.169,431,1.944]],["body/interfaces/LayoutItem.html",[3,0.398,4,0.398,5,0.398,6,0.412,7,0.187,8,0.187,15,0.544,16,1.411,21,2.777,33,0.84,36,0.03,37,1.543,38,1.073,39,1.634,42,1.649,48,1.52,54,1.687,65,1.332,67,1.581,71,0.445,83,0.354,107,2.494,117,0.016,118,0.021,119,0.016,209,1.243,210,1.88,221,2.917,229,3.039,270,2.282,294,3.411,298,3.277,431,2.742,454,2.742,576,2.742,601,3.91,602,3.518,603,2.947,604,3.91,605,3.518,606,3.91,607,4.077,608,3.91,609,3.632,610,4.667,611,3.039,612,4.667,613,3.91,614,4.667,615,4.667,616,3.91,617,3.91,618,3.91,619,4.667,620,2.947]],["title/classes/LayoutNode.html",[0,0.418,27,1.768]],["body/classes/LayoutNode.html",[0,0.245,2,1.264,3,0.22,4,0.22,5,0.22,6,0.487,7,0.196,8,0.209,10,0.965,15,0.3,16,0.917,21,2.18,22,0.784,27,2.946,28,0.872,33,1.316,35,0.917,36,0.031,37,1.356,38,0.936,39,0.784,41,0.803,42,0.686,48,1.437,54,1.384,61,1.418,63,1.159,65,1.21,67,1.895,71,0.613,83,0.195,85,1.975,92,1.545,93,1.418,114,1.621,117,0.009,118,0.014,119,0.009,149,1.037,152,0.872,158,1.071,194,2.747,204,1.714,221,1.825,243,1.426,269,1.419,282,2.54,298,1.781,314,1.255,322,1.264,365,1.781,382,1.14,409,2.216,413,3.159,429,1.419,431,3.729,433,1.419,438,3.834,457,2.54,544,2.216,564,2.54,606,3.127,607,3.834,608,2.54,609,2.43,617,1.626,620,1.626,621,5.513,622,1.941,623,3.032,624,3.032,625,2.54,626,3.032,627,2.54,628,4.218,629,3.032,630,3.032,631,2.54,632,3.032,633,3.032,634,2.54,635,2.54,636,2.54,637,2.54,638,3.032,639,3.534,640,3.127,641,2.216,642,3.732,643,3.732,644,4.064,645,3.032,646,3.032,647,1.941,648,3.032,649,3.032,650,3.032,651,3.032,652,3.301,653,1.941,654,2.54,655,3.032,656,1.941,657,1.941,658,2.54,659,2.54,660,1.941,661,1.941,662,1.941,663,1.941,664,3.032,665,1.941,666,1.941,667,1.941,668,1.941,669,3.032,670,1.941,671,1.941,672,1.941,673,1.941,674,1.941,675,1.941,676,1.941,677,1.941,678,5.068,679,1.419,680,3.032,681,1.941,682,1.626,683,1.941,684,1.941,685,3.032,686,1.626,687,1.626,688,2.54,689,1.941,690,1.941,691,1.941,692,1.941,693,1.941,694,1.419,695,1.626,696,1.941,697,1.941,698,1.941,699,1.941,700,1.941,701,1.941,702,1.941,703,1.941,704,2.54,705,1.941,706,1.941,707,1.941,708,1.941,709,1.941,710,1.941,711,1.941,712,1.419,713,1.941,714,1.941,715,1.941,716,1.941,717,1.941,718,1.419,719,1.941,720,1.941,721,1.941,722,1.941,723,1.941,724,1.941,725,1.941,726,1.941,727,1.941]],["title/interfaces/LayoutOptions.html",[209,1.169,609,2.154]],["body/interfaces/LayoutOptions.html",[3,0.338,4,0.338,5,0.338,6,0.369,7,0.14,8,0.14,15,0.462,16,1.263,33,0.714,36,0.031,38,1.051,39,1.67,48,1.528,73,1.756,83,0.3,93,1.458,117,0.014,118,0.019,119,0.014,158,1.476,209,1.056,210,1.597,232,3.231,274,2.72,395,2.504,397,4.234,398,5.447,486,5.231,532,3.499,601,3.499,603,2.504,604,3.499,609,2.72,718,3.81,728,2.989,729,4.367,730,4.367,731,4.367,732,4.367,733,4.594,734,3.81,735,4.367,736,2.989,737,4.176,738,4.176,739,4.176,740,4.176,741,4.176,742,4.176,743,4.594,744,4.176,745,4.176,746,4.176,747,2.989,748,2.989,749,2.504,750,2.989,751,2.504,752,2.989,753,2.504,754,2.989,755,2.504]],["title/injectables/LayoutService.html",[213,1,381,2.418]],["body/injectables/LayoutService.html",[0,0.38,3,0.34,4,0.34,5,0.34,6,0.461,7,0.184,8,0.184,10,1.084,15,0.465,22,1.084,27,2.58,28,1.35,33,1.152,35,1.46,36,0.031,37,1.248,38,0.712,39,1.248,42,1.706,48,0.717,61,1.173,62,1.268,63,2.407,67,2.557,69,1.606,71,0.72,76,0.51,83,0.302,92,1.735,93,0.84,107,2.24,114,1.606,117,0.014,118,0.019,119,0.014,159,1.35,204,1.578,213,1.268,228,1.765,243,2.1,260,1.469,270,1.469,273,2.73,314,1.244,327,2.196,354,1.606,365,1.765,381,3.064,382,3.343,390,2.517,431,3.069,432,2.517,433,2.196,639,4.044,641,3.064,686,2.517,743,2.517,756,3.004,757,3.064,758,4.191,759,4.191,760,4.191,761,3.004,762,4.191,763,3.004,764,3.004,765,3.004,766,4.191,767,4.191,768,4.191,769,4.191,770,3.004,771,2.196,772,3.004,773,3.004,774,3.004,775,4.191,776,3.004,777,3.004,778,3.004,779,3.004,780,3.004,781,4.827,782,4.191,783,4.191,784,3.004,785,4.827,786,3.004,787,2.517,788,3.004,789,3.004,790,3.004,791,3.004,792,3.004,793,3.004,794,3.004,795,3.004,796,3.004,797,3.004,798,3.004,799,3.004,800,3.004,801,3.004]],["title/interfaces/SchemaAnalyzer.html",[209,1.169,652,2.154]],["body/interfaces/SchemaAnalyzer.html",[3,0.499,4,0.499,5,0.499,6,0.389,7,0.212,8,0.212,10,1.139,15,0.681,16,1.833,22,1.393,36,0.03,38,0.748,65,1.286,71,0.557,83,0.443,93,1.232,117,0.02,118,0.025,119,0.02,209,1.556,210,2.354,270,3.04,652,3.507,771,3.219,802,4.404,803,4.404,804,5.386,805,5.386,806,5.078,807,4.512,808,5.386]],["title/injectables/SchemaService.html",[213,1,382,1.944]],["body/injectables/SchemaService.html",[0,0.307,3,0.275,4,0.275,5,0.275,6,0.467,7,0.211,8,0.218,10,1.107,11,1.579,15,0.375,22,0.929,33,1.206,35,1.294,36,0.031,37,1.107,38,0.61,39,1.107,42,1.512,61,1.324,62,0.733,63,0.927,65,1.395,71,0.693,76,0.412,83,0.244,85,2.34,92,1.959,93,0.678,107,2.287,114,1.92,117,0.011,118,0.016,119,0.011,149,1.296,150,1.425,204,1.547,206,2.111,213,1.087,221,1.757,232,1.92,243,1.636,260,1.186,270,2.588,273,2.34,287,3.01,314,1.487,365,1.425,368,3.459,370,2.032,371,2.626,382,2.111,413,3.806,414,3.965,415,3.965,417,3.01,429,1.773,437,3.01,447,3.01,454,1.425,458,1.773,483,2.032,558,2.032,641,2.626,652,2.34,682,2.032,688,2.032,695,3.01,704,3.965,757,2.626,771,1.773,806,3.586,807,3.965,809,2.425,810,3.593,811,4.433,812,3.593,813,2.425,814,5.053,815,3.593,816,3.586,817,3.593,818,2.425,819,2.626,820,3.593,821,2.425,822,2.425,823,2.425,824,2.425,825,3.593,826,2.425,827,2.425,828,3.01,829,3.593,830,3.593,831,3.593,832,3.593,833,2.425,834,2.425,835,2.425,836,2.425,837,3.593,838,2.425,839,2.425,840,2.425,841,3.01,842,3.593,843,2.425,844,2.425,845,2.425,846,2.425,847,2.425,848,2.425,849,2.425,850,2.425,851,3.593,852,2.425,853,4.28,854,2.425,855,2.425,856,2.425,857,2.425,858,2.425,859,2.425,860,2.032,861,2.425,862,2.425,863,2.032,864,2.032,865,2.032,866,2.425,867,2.425,868,2.425,869,2.425,870,2.425]],["title/components/SelectWidgetComponent.html",[120,1,168,1.618]],["body/components/SelectWidgetComponent.html",[0,0.284,1,2.652,3,0.254,4,0.254,5,0.254,6,0.361,7,0.152,8,0.164,10,0.877,11,2.208,12,2.987,13,2.987,15,0.632,16,1.026,17,2.208,18,2.208,19,2.208,20,2.661,21,1.836,22,0.877,23,1.992,24,2.208,25,3.424,26,3.424,27,2.613,28,1.008,30,2.227,31,2.434,32,2.046,33,1.391,35,1.026,36,0.031,37,1.264,38,0.974,39,0.877,40,3.006,41,0.929,42,1.444,43,0.929,45,1.462,46,1.462,47,3.02,48,0.536,51,1.462,53,0.929,54,1.734,56,1.462,57,1.74,59,1.319,60,1.992,61,0.628,62,1.236,63,1.869,65,0.976,67,2.197,69,2.184,70,1.881,71,0.618,73,2.401,75,1.881,76,0.381,78,1.462,79,1.319,82,1.2,83,0.226,91,2.841,92,2.024,93,0.949,97,2.479,103,1.641,106,1.881,117,0.01,118,0.015,119,0.01,120,1.479,121,1.098,122,1.812,123,1.098,124,1.462,125,1.008,126,1.462,129,2.479,131,1.319,132,3.02,134,2.479,136,1.992,139,4.112,140,1.641,141,1.641,142,1.641,143,1.641,144,1.641,145,1.641,147,1.641,148,1.462,149,1.2,156,1.641,157,0.858,158,1.198,159,1.524,160,1.462,161,2.965,162,1.462,163,1.462,164,1.098,165,1.462,166,1.098,167,1.462,168,2.227,169,2.688,170,1.462,171,1.462,204,0.734,228,1.319,243,0.858,274,2.208,322,2.208,336,2.661,544,2.479,545,2.479,550,2.841,679,1.641,712,1.641,819,2.479,871,3.424,872,2.245,873,3.391,874,3.391,875,2.841,876,4.086,877,3.391,878,4.086,879,2.245,880,4.553,881,3.902,882,3.391,883,3.391,884,2.245,885,2.245,886,2.245,887,4.889,888,3.391,889,3.391,890,3.391,891,2.245,892,2.245,893,2.245,894,3.391,895,2.245,896,2.245,897,2.245,898,4.086,899,2.245,900,2.245,901,1.881,902,2.245,903,2.245,904,2.245,905,2.245,906,2.245,907,2.245,908,2.245,909,2.245,910,2.245,911,2.245]],["title/modules/SelectWidgetModule.html",[172,0.855,334,1.768]],["body/modules/SelectWidgetModule.html",[0,0.529,3,0.474,4,0.474,5,0.474,6,0.369,7,0.14,8,0.14,36,0.031,71,0.719,76,0.71,83,0.421,117,0.019,118,0.024,119,0.019,154,1.879,157,1.599,168,3.237,169,2.046,172,1.082,174,1.732,175,1.879,176,2.554,177,2.046,178,1.879,179,3.039,183,2.788,184,1.599,186,3.814,187,2.551,188,2.046,189,2.344,191,1.879,334,3.386,336,2.724,871,3.505,912,3.505,913,3.505,914,3.505,915,4.183,916,4.183]],["title/interfaces/WidgetDecorator.html",[209,1.169,917,2.772]],["body/interfaces/WidgetDecorator.html",[3,0.528,4,0.528,5,0.528,6,0.412,7,0.156,8,0.156,10,1.206,15,0.721,16,1.804,36,0.03,38,0.792,54,1.804,63,2.279,83,0.469,117,0.021,118,0.025,119,0.021,152,2.776,209,1.647,210,2.492,687,4.67,917,4.67,918,4.663,919,4.663,920,4.663,921,5.574,922,5.574]],["title/injectables/WidgetLibraryService.html",[213,1,881,2.418]],["body/injectables/WidgetLibraryService.html",[0,0.668,1,2.372,3,0.405,4,0.405,5,0.405,6,0.417,7,0.158,8,0.158,10,1.22,15,0.553,22,1.22,27,2.521,33,0.854,35,1.081,36,0.031,37,0.925,38,1.084,39,0.925,41,1.48,48,1.34,54,1.812,62,1.081,63,1.367,71,0.597,76,0.607,83,0.474,92,1.48,93,1,114,1.911,117,0.016,118,0.022,119,0.016,120,1.848,152,1.607,204,1.169,213,1.427,243,1.803,260,1.749,270,2.582,273,3.072,311,2.996,312,2.614,314,1.48,341,2.614,357,1.749,389,2.101,396,2.328,576,2.771,757,3.448,828,3.952,881,3.448,923,3.952,924,2.996,925,4.717,926,4.717,927,4.717,928,3.576,929,3.576,930,2.996,931,2.996,932,2.996,933,3.952,934,2.996,935,3.952,936,2.996,937,2.614,938,2.996,939,2.996,940,2.996,941,3.576,942,3.576,943,3.576]],["title/changelog.html",[944,1.811,945,1.811,946,2.33]],["body/changelog.html",[36,0.027,89,2.986,117,0.023,118,0.027,119,0.023,294,3.715,397,3.31,946,4.913,947,5.083,948,4.258,949,4.258,950,5.083,951,4.258]],["title/contributing.html",[944,1.811,945,1.811,952,2.33]],["body/contributing.html",[4,0.503,7,0.149,8,0.149,36,0.02,60,2.964,117,0.015,118,0.02,119,0.015,150,1.92,155,3.247,222,2.128,283,1.747,284,2.738,289,2.389,310,2.128,314,2.241,353,2.609,354,1.747,357,1.598,358,2.128,366,2.389,369,2.738,389,1.92,450,2.738,451,2.738,458,2.389,578,2.738,611,2.128,634,2.738,635,2.738,659,2.738,734,2.389,787,2.738,948,2.738,949,3.721,952,3.721,953,5.413,954,5.839,955,3.268,956,3.268,957,5.661,958,3.268,959,3.268,960,3.268,961,3.268,962,5.221,963,5.413,964,4.442,965,3.268,966,3.957,967,3.268,968,3.268,969,5.974,970,3.268,971,4.442,972,5.045,973,5.413,974,5.413,975,5.045,976,4.138,977,3.268,978,4.442,979,3.268,980,3.268,981,3.268,982,3.268,983,3.268,984,3.268,985,3.268,986,3.268,987,4.442,988,2.738,989,4.442,990,5.413,991,4.442,992,4.442,993,5.413,994,5.661,995,3.268,996,3.268,997,3.268,998,2.738,999,3.268,1000,3.268,1001,3.268,1002,3.268,1003,3.268,1004,3.268,1005,3.268,1006,3.268,1007,3.268,1008,3.268,1009,3.268,1010,4.442,1011,3.268,1012,3.268,1013,3.268,1014,3.268,1015,3.268,1016,3.268,1017,3.268,1018,3.268,1019,3.268,1020,3.268,1021,2.389,1022,3.268,1023,3.268,1024,4.442,1025,3.268,1026,2.738,1027,3.268,1028,4.442,1029,3.268,1030,3.268,1031,3.268,1032,3.268,1033,3.268,1034,3.721,1035,3.268,1036,3.268,1037,3.268,1038,3.268,1039,3.268,1040,3.268,1041,3.268]],["title/dependencies.html",[175,1.783,1042,2.781]],["body/dependencies.html",[7,0.171,8,0.188,36,0.031,67,1.827,76,0.691,77,3.407,117,0.019,118,0.023,119,0.019,175,1.827,188,1.989,199,3.011,200,2.739,365,3.011,368,2.972,371,2.972,374,3.407,376,3.407,377,3.407,428,3.407,554,2.972,679,2.972,811,3.407,1043,4.066,1044,6.513,1045,4.066,1046,4.066,1047,4.066,1048,4.066,1049,4.066,1050,4.066,1051,4.066,1052,4.066,1053,4.066,1054,4.066,1055,4.066,1056,4.066,1057,4.066,1058,4.066,1059,4.066,1060,4.066,1061,4.066,1062,4.066,1063,4.066,1064,4.066,1065,4.066,1066,4.066,1067,4.066,1068,4.066,1069,4.066,1070,4.066,1071,4.066,1072,4.066,1073,4.066,1074,4.066,1075,4.066,1076,4.066]],["title/miscellaneous/functions.html",[1077,1.486,1078,3.325]],["body/miscellaneous/functions.html",[6,0.431,7,0.163,8,0.163,15,0.756,35,1.477,36,0.029,37,1.263,39,1.263,54,1.934,61,1.366,117,0.022,118,0.026,119,0.022,357,2.388,841,4.092,1077,2.61,1078,4.092,1079,4.884,1080,4.884,1081,4.884,1082,4.884,1083,4.884]],["title/index.html",[15,0.43,944,1.811,945,1.811]],["body/index.html",[0,0.469,7,0.206,8,0.209,36,0.03,71,0.747,76,0.63,83,0.373,89,2.181,117,0.017,118,0.022,119,0.017,120,1.123,123,1.815,172,0.96,176,1.668,177,1.815,184,1.848,189,2.172,191,1.668,199,2.181,200,1.984,271,2.714,283,1.984,310,2.417,353,2.84,354,3.236,357,1.815,358,3.846,454,2.181,455,2.714,459,3.11,513,2.84,611,3.148,694,2.714,816,3.11,819,2.714,937,2.714,966,4.164,988,3.11,1084,3.712,1085,3.712,1086,3.712,1087,3.712,1088,3.712,1089,3.712,1090,3.712,1091,3.712,1092,3.11,1093,3.712,1094,3.712,1095,3.712,1096,3.712,1097,3.712,1098,3.712,1099,3.712,1100,3.712,1101,4.835,1102,3.712,1103,3.712,1104,3.712,1105,4.835,1106,3.11,1107,3.712,1108,3.712,1109,3.712,1110,3.712,1111,3.712,1112,3.712,1113,3.712,1114,3.712,1115,4.835,1116,5.376,1117,3.712,1118,3.712,1119,3.712,1120,3.11,1121,3.11,1122,2.714,1123,3.712,1124,3.11,1125,3.712,1126,3.712,1127,3.712,1128,3.712,1129,3.712,1130,3.712]],["title/license.html",[944,1.811,945,1.811,976,2.033]],["body/license.html",[7,0.184,8,0.184,36,0.023,53,1.609,57,1.485,117,0.018,118,0.023,119,0.018,184,1.485,283,2.661,353,2.925,354,2.937,362,3.255,386,2.84,427,3.255,658,4.172,966,4.017,976,2.84,998,3.255,1034,3.255,1092,3.255,1122,2.84,1131,5.795,1132,4.979,1133,4.979,1134,3.885,1135,3.885,1136,3.885,1137,3.885,1138,3.255,1139,3.885,1140,3.885,1141,3.885,1142,3.885,1143,4.979,1144,3.885,1145,3.885,1146,3.885,1147,3.885,1148,3.255,1149,3.885,1150,6.375,1151,3.885,1152,3.885,1153,3.885,1154,5.495,1155,3.885,1156,4.979,1157,3.255,1158,3.885,1159,3.885,1160,3.885,1161,3.885,1162,3.885,1163,3.885,1164,3.885,1165,4.979,1166,3.885,1167,3.885,1168,3.885,1169,3.885,1170,4.979,1171,4.979,1172,3.255,1173,3.885,1174,3.885,1175,3.885,1176,3.885,1177,3.885,1178,3.885,1179,3.885,1180,3.885,1181,3.885,1182,3.885,1183,3.885,1184,3.885,1185,3.885,1186,3.885,1187,3.885,1188,3.885,1189,3.885,1190,3.885,1191,3.885,1192,3.885,1193,3.885,1194,3.885,1195,3.885,1196,3.885,1197,3.885]],["title/modules.html",[174,1.854]],["body/modules.html",[36,0.026,117,0.022,118,0.026,119,0.022,173,2.822,174,1.989,192,2.822,200,3.403,329,2.822,334,2.567,345,2.822,513,2.822,1198,6.366,1199,6.366,1200,6.454,1201,4.803,1202,4.803]],["title/overview.html",[1203,3.752]],["body/overview.html",[2,2.343,36,0.03,117,0.016,118,0.022,119,0.016,121,2.993,122,1.923,154,1.616,157,1.375,164,2.993,166,2.993,168,2.993,172,0.93,173,3.726,174,1.489,175,1.616,176,1.616,177,1.759,178,1.616,179,1.923,180,3.014,181,3.014,182,3.014,183,2.531,184,1.375,192,3.596,210,1.923,260,1.759,329,3.78,330,3.014,331,3.014,332,3.014,333,3.014,334,3.416,345,3.726,346,3.014,347,3.014,348,3.014,513,3.861,514,3.014,515,3.014,516,3.014,860,3.968,912,3.014,913,3.014,914,3.014,1021,2.63,1203,3.014,1204,3.014,1205,3.598]],["title/miscellaneous/typealiases.html",[1077,1.486,1206,3.969]],["body/miscellaneous/typealiases.html",[6,0.436,7,0.165,8,0.165,15,0.764,36,0.026,38,0.839,57,2.406,65,1.179,117,0.023,118,0.026,119,0.023,211,3.61,212,4.216,216,3.61,217,3.61,218,3.756,1077,2.64,1207,4.939,1208,4.939]],["title/miscellaneous/variables.html",[1077,1.486,1209,3.325]],["body/miscellaneous/variables.html",[1,1.969,6,0.387,7,0.147,8,0.147,15,0.678,36,0.03,38,0.986,41,2.403,42,1.897,48,1.046,54,1.624,62,1.325,63,1.675,117,0.02,118,0.025,119,0.02,120,1.756,152,1.969,270,2.839,314,1.814,357,2.143,389,2.575,396,2.854,576,3.41,923,3.671,924,4.863,930,3.671,931,3.671,932,4.498,933,3.671,934,3.671,935,3.671,936,3.671,937,3.203,938,3.671,939,3.671,940,3.671,1077,2.342,1209,3.671,1210,5.369]],["title/additional-documentation/introduction.html",[951,2.33,1211,2.781,1212,2.781]],["body/additional-documentation/introduction.html",[0,0.435,3,0.194,5,0.194,7,0.162,8,0.204,10,1.018,16,1.391,21,1.936,24,1.116,36,0.03,37,1.189,38,0.954,40,2.303,41,1.138,43,0.71,48,0.821,53,0.71,54,0.831,57,1.919,62,0.518,63,1.051,65,0.821,67,2.641,71,0.635,73,1.007,83,0.346,89,1.615,93,0.769,97,2.009,107,2.582,117,0.016,118,0.013,119,0.013,120,1.698,123,1.925,125,1.235,130,2.515,131,1.007,133,4.452,136,1.007,152,0.77,153,3.61,154,0.77,155,3.149,158,1.216,184,0.655,206,1.615,218,1.79,221,1.344,222,2.563,225,3.149,232,1.839,237,1.253,243,0.655,249,1.79,254,1.253,262,1.436,274,2.241,281,3.531,283,1.469,285,2.303,289,3.149,298,1.007,310,1.116,314,0.71,327,1.253,341,3.149,352,1.436,353,1.007,354,2.84,357,0.838,358,2.563,366,2.515,383,2.303,386,1.253,387,1.436,388,1.436,389,1.615,396,1.79,397,2.241,409,1.253,411,2.883,413,2.994,444,2.303,454,1.615,455,1.253,538,2.303,542,2.303,545,2.009,549,1.436,554,1.253,576,2.312,607,2.009,611,1.79,613,2.883,616,2.883,618,1.436,625,1.436,627,1.436,631,1.436,636,1.436,637,1.436,640,3.298,644,4.047,654,2.303,694,2.009,712,2.009,718,3.531,729,2.303,730,2.303,731,2.303,732,2.303,733,2.883,734,2.009,735,2.303,749,1.436,751,1.436,753,1.436,755,1.436,863,2.303,864,2.303,865,2.303,875,1.436,901,1.436,962,2.303,1021,1.253,1026,1.436,1106,2.303,1120,3.852,1121,2.303,1122,1.253,1124,1.436,1138,1.436,1148,2.303,1157,1.436,1172,1.436,1204,1.436,1213,1.714,1214,1.714,1215,4.308,1216,1.714,1217,3.936,1218,2.749,1219,2.749,1220,2.749,1221,2.749,1222,1.714,1223,4.83,1224,1.714,1225,1.714,1226,1.714,1227,1.714,1228,1.714,1229,1.714,1230,1.714,1231,3.44,1232,1.714,1233,1.714,1234,1.714,1235,1.714,1236,1.714,1237,1.714,1238,1.714,1239,2.749,1240,1.714,1241,3.44,1242,1.714,1243,1.714,1244,1.714,1245,1.714,1246,1.714,1247,2.749,1248,1.714,1249,1.714,1250,1.714,1251,1.714,1252,1.714,1253,1.714,1254,4.598,1255,1.714,1256,2.749,1257,1.714,1258,1.714,1259,1.714,1260,1.714,1261,2.749,1262,1.714,1263,1.714,1264,2.749,1265,2.749,1266,1.714,1267,1.714,1268,1.714,1269,1.714,1270,3.936,1271,2.749,1272,1.714,1273,1.714,1274,3.44,1275,3.936,1276,1.714,1277,2.749,1278,1.714,1279,1.714,1280,1.714,1281,1.714,1282,2.749,1283,1.714,1284,1.714,1285,1.714,1286,1.714,1287,1.714,1288,1.714,1289,1.714,1290,2.749,1291,2.749,1292,1.714,1293,1.714,1294,1.714,1295,1.714,1296,1.714,1297,1.714,1298,1.714,1299,1.714,1300,1.714,1301,1.714,1302,1.714,1303,1.714,1304,2.749,1305,1.714,1306,1.714,1307,2.749,1308,1.714,1309,1.714,1310,1.714,1311,4.83,1312,1.714,1313,1.714,1314,3.44,1315,3.936,1316,3.44,1317,2.749,1318,4.308,1319,1.714,1320,1.714,1321,1.714,1322,2.749,1323,1.714,1324,3.44,1325,1.714,1326,1.714,1327,1.714,1328,1.714,1329,1.714,1330,1.714,1331,1.714,1332,1.714,1333,1.714,1334,1.714,1335,1.714,1336,2.749,1337,1.714,1338,1.714,1339,2.749,1340,1.714,1341,1.714,1342,1.714,1343,1.714,1344,1.714,1345,1.714,1346,1.714,1347,1.714,1348,1.714,1349,1.714,1350,1.714,1351,1.714,1352,1.714,1353,1.714,1354,1.714,1355,1.714,1356,1.714,1357,1.714,1358,1.714,1359,1.714,1360,1.714]]],"invertedIndex":[["",{"_index":36,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["0",{"_index":327,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"injectables/LayoutService.html":{},"additional-documentation/introduction.html":{}}}],["0.0.36",{"_index":1055,"title":{},"body":{"dependencies.html":{}}}],["0.11.0",{"_index":1061,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1066,"title":{},"body":{"dependencies.html":{}}}],["0.3.9",{"_index":1071,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1067,"title":{},"body":{"dependencies.html":{}}}],["0.9.1",{"_index":1076,"title":{},"body":{"dependencies.html":{}}}],["07",{"_index":855,"title":{},"body":{"injectables/SchemaService.html":{}}}],["07/schema",{"_index":865,"title":{},"body":{"injectables/SchemaService.html":{},"additional-documentation/introduction.html":{}}}],["1",{"_index":782,"title":{},"body":{"injectables/LayoutService.html":{}}}],["1.9.0",{"_index":1074,"title":{},"body":{"dependencies.html":{}}}],["140",{"_index":1018,"title":{},"body":{"contributing.html":{}}}],["18",{"_index":1251,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["2",{"_index":1204,"title":{},"body":{"overview.html":{},"additional-documentation/introduction.html":{}}}],["2.5.4",{"_index":1064,"title":{},"body":{"dependencies.html":{}}}],["2014",{"_index":1137,"title":{},"body":{"license.html":{}}}],["2019",{"_index":1142,"title":{},"body":{"license.html":{}}}],["3",{"_index":1230,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["30",{"_index":1282,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["333",{"_index":1269,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["4",{"_index":1021,"title":{},"body":{"contributing.html":{},"overview.html":{},"additional-documentation/introduction.html":{}}}],["4.1.2",{"_index":1065,"title":{},"body":{"dependencies.html":{}}}],["4.14.136",{"_index":1059,"title":{},"body":{"dependencies.html":{}}}],["4.17.14",{"_index":1068,"title":{},"body":{"dependencies.html":{}}}],["4/6",{"_index":815,"title":{},"body":{"injectables/SchemaService.html":{}}}],["5",{"_index":1205,"title":{},"body":{"overview.html":{}}}],["6",{"_index":860,"title":{},"body":{"injectables/SchemaService.html":{},"overview.html":{}}}],["6.0.1",{"_index":1069,"title":{},"body":{"dependencies.html":{}}}],["6.10.0",{"_index":1060,"title":{},"body":{"dependencies.html":{}}}],["6.5.2",{"_index":1072,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":816,"title":{},"body":{"injectables/SchemaService.html":{},"index.html":{}}}],["7.0.0",{"_index":1048,"title":{},"body":{"dependencies.html":{}}}],["7.0.3",{"_index":1057,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1044,"title":{},"body":{"dependencies.html":{}}}],["_blank",{"_index":419,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["_layout",{"_index":774,"title":{},"body":{"injectables/LayoutService.html":{}}}],["_parent",{"_index":420,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["_schema",{"_index":834,"title":{},"body":{"injectables/SchemaService.html":{}}}],["_self",{"_index":418,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["_top",{"_index":421,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["above",{"_index":1092,"title":{},"body":{"index.html":{},"license.html":{}}}],["abstract",{"_index":84,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["abstractcontrol",{"_index":51,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["abstractwidget",{"_index":1,"title":{"classes/AbstractWidget.html":{}},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{}}}],["abstractwidget:12",{"_index":141,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["abstractwidget:14",{"_index":142,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["abstractwidget:16",{"_index":143,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["abstractwidget:18",{"_index":144,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["abstractwidget:20",{"_index":145,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["abstractwidget:23",{"_index":886,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["abstractwidget:25",{"_index":885,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["abstractwidget:27",{"_index":884,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["abstractwidget:65",{"_index":140,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["accepted",{"_index":1010,"title":{},"body":{"contributing.html":{}}}],["accessing",{"_index":664,"title":{},"body":{"classes/LayoutNode.html":{}}}],["accesskey",{"_index":729,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["accessors",{"_index":641,"title":{},"body":{"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{}}}],["accordingly",{"_index":1343,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["ace",{"_index":376,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"dependencies.html":{}}}],["act",{"_index":1342,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["action",{"_index":386,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"license.html":{},"additional-documentation/introduction.html":{}}}],["acts",{"_index":627,"title":{},"body":{"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["actual",{"_index":1261,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["actual_component",{"_index":171,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["add",{"_index":310,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"contributing.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["addeventlistener",{"_index":261,"title":{},"body":{"injectables/DataEventPluginService.html":{}}}],["addeventlistener(element",{"_index":239,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["addition",{"_index":372,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["additional",{"_index":1211,"title":{"additional-documentation/introduction.html":{}},"body":{}}],["adds",{"_index":236,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["afterviewinit",{"_index":14,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["against",{"_index":449,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["age",{"_index":1223,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["ajv",{"_index":368,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{},"dependencies.html":{}}}],["ajv.ajv",{"_index":845,"title":{},"body":{"injectables/SchemaService.html":{}}}],["ajv.validatefunction",{"_index":850,"title":{},"body":{"injectables/SchemaService.html":{}}}],["ajv]{@link",{"_index":480,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["aliases",{"_index":1207,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allerrors",{"_index":846,"title":{},"body":{"injectables/SchemaService.html":{}}}],["allow",{"_index":1003,"title":{},"body":{"contributing.html":{}}}],["allowing",{"_index":636,"title":{},"body":{"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["allows",{"_index":287,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"injectables/SchemaService.html":{}}}],["along",{"_index":626,"title":{},"body":{"classes/LayoutNode.html":{}}}],["already",{"_index":937,"title":{},"body":{"injectables/WidgetLibraryService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["alt",{"_index":749,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["analyzer.data",{"_index":682,"title":{},"body":{"classes/LayoutNode.html":{},"injectables/SchemaService.html":{}}}],["analyzer.data.ts",{"_index":803,"title":{},"body":{"interfaces/SchemaAnalyzer.html":{}}}],["and/or",{"_index":362,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"license.html":{}}}],["angular",{"_index":358,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"contributing.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["angular/animations",{"_index":1043,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1045,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":188,"title":{},"body":{"modules/ButtonModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/HiddenModule.html":{},"modules/JsonSchemaFormModule.html":{},"modules/SelectWidgetModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1046,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":76,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"injectables/WidgetLibraryService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/flex",{"_index":1047,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":77,"title":{},"body":{"classes/AbstractWidget.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1050,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1051,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":199,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/router",{"_index":1053,"title":{},"body":{"dependencies.html":{}}}],["angular2",{"_index":1139,"title":{},"body":{"license.html":{}}}],["angular]{@link",{"_index":476,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["angularjs",{"_index":462,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["another",{"_index":369,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"contributing.html":{}}}],["aot",{"_index":1290,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["api",{"_index":457,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{}}}],["app.component",{"_index":1117,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":1116,"title":{},"body":{"index.html":{}}}],["application",{"_index":1114,"title":{},"body":{"index.html":{}}}],["application/x",{"_index":401,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["applied",{"_index":230,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["appmodule",{"_index":1119,"title":{},"body":{"index.html":{}}}],["appropriate",{"_index":619,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["args",{"_index":841,"title":{},"body":{"injectables/SchemaService.html":{},"miscellaneous/functions.html":{}}}],["arising",{"_index":1195,"title":{},"body":{"license.html":{}}}],["array",{"_index":63,"title":{},"body":{"classes/AbstractWidget.html":{},"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["array.from(mappedpointers",{"_index":801,"title":{},"body":{"injectables/LayoutService.html":{}}}],["array.from(schemapointers.keys",{"_index":798,"title":{},"body":{"injectables/LayoutService.html":{}}}],["arrayitem",{"_index":723,"title":{},"body":{"classes/LayoutNode.html":{}}}],["arrayitemtype",{"_index":724,"title":{},"body":{"classes/LayoutNode.html":{}}}],["arrays",{"_index":280,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["assert",{"_index":1039,"title":{},"body":{"contributing.html":{}}}],["assets/submit.png",{"_index":1281,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["associated",{"_index":53,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"license.html":{},"additional-documentation/introduction.html":{}}}],["associating",{"_index":922,"title":{},"body":{"interfaces/WidgetDecorator.html":{}}}],["association",{"_index":1334,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["attemtps",{"_index":1086,"title":{},"body":{"index.html":{}}}],["attribute",{"_index":395,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutOptions.html":{}}}],["attributes",{"_index":274,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"interfaces/LayoutOptions.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/introduction.html":{}}}],["augmenting",{"_index":630,"title":{},"body":{"classes/LayoutNode.html":{}}}],["authors",{"_index":1185,"title":{},"body":{"license.html":{}}}],["autocomplete",{"_index":387,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{}}}],["automatically",{"_index":294,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"interfaces/LayoutItem.html":{},"changelog.html":{}}}],["available",{"_index":1202,"title":{},"body":{"modules.html":{}}}],["availablepointers",{"_index":797,"title":{},"body":{"injectables/LayoutService.html":{}}}],["backwards",{"_index":859,"title":{},"body":{"injectables/SchemaService.html":{}}}],["based",{"_index":819,"title":{},"body":{"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"index.html":{}}}],["basic",{"_index":1107,"title":{},"body":{"index.html":{}}}],["basic.component.ts",{"_index":1234,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["basiccomponent",{"_index":1235,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["become",{"_index":1245,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["before",{"_index":960,"title":{},"body":{"contributing.html":{}}}],["begin",{"_index":1108,"title":{},"body":{"index.html":{}}}],["behavior",{"_index":984,"title":{},"body":{"contributing.html":{}}}],["being",{"_index":1275,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["beta.24",{"_index":1049,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":992,"title":{},"body":{"contributing.html":{}}}],["bind",{"_index":542,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"additional-documentation/introduction.html":{}}}],["bindings",{"_index":1278,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["binds",{"_index":1286,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["boolean",{"_index":232,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"interfaces/LayoutOptions.html":{},"injectables/SchemaService.html":{},"additional-documentation/introduction.html":{}}}],["bootstrap",{"_index":177,"title":{},"body":{"modules/ButtonModule.html":{},"modules/FormModule.html":{},"modules/HiddenModule.html":{},"modules/JsonSchemaFormModule.html":{},"modules/SelectWidgetModule.html":{},"index.html":{},"overview.html":{}}}],["both",{"_index":439,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["bound",{"_index":1331,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["brace",{"_index":374,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"dependencies.html":{}}}],["brace]{@link",{"_index":484,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["bring",{"_index":1099,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1200,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":200,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browserified",{"_index":375,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["browsermodule",{"_index":1115,"title":{},"body":{"index.html":{}}}],["bubble",{"_index":1330,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["bug",{"_index":987,"title":{},"body":{"contributing.html":{}}}],["bugs",{"_index":968,"title":{},"body":{"contributing.html":{}}}],["builder",{"_index":1085,"title":{},"body":{"index.html":{}}}],["buildlayout(layout",{"_index":777,"title":{},"body":{"injectables/LayoutService.html":{}}}],["bunch",{"_index":1126,"title":{},"body":{"index.html":{}}}],["button",{"_index":133,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/introduction.html":{}}}],["button'},{'name",{"_index":163,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["button.component",{"_index":190,"title":{},"body":{"modules/ButtonModule.html":{}}}],["button.component.html",{"_index":137,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button.component.scss",{"_index":135,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button.html",{"_index":1284,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["button/button.module",{"_index":520,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["button1",{"_index":1314,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["button2",{"_index":1316,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["buttoncomponent",{"_index":121,"title":{"components/ButtonComponent.html":{}},"body":{"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"overview.html":{}}}],["buttonmodule",{"_index":173,"title":{"modules/ButtonModule.html":{}},"body":{"modules/ButtonModule.html":{},"modules/JsonSchemaFormModule.html":{},"modules.html":{},"overview.html":{}}}],["buttons",{"_index":1270,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["can't",{"_index":1353,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["care",{"_index":1247,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["case",{"_index":901,"title":{},"body":{"components/SelectWidgetComponent.html":{},"additional-documentation/introduction.html":{}}}],["catch",{"_index":792,"title":{},"body":{"injectables/LayoutService.html":{}}}],["cb",{"_index":840,"title":{},"body":{"injectables/SchemaService.html":{}}}],["change",{"_index":60,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"contributing.html":{}}}],["changedetection",{"_index":379,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["changedetectionstrategy",{"_index":426,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":380,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["changelog",{"_index":946,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":97,"title":{},"body":{"classes/AbstractWidget.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/introduction.html":{}}}],["changes.hasownproperty('schema",{"_index":495,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["changes.layoutnode",{"_index":99,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["changing",{"_index":861,"title":{},"body":{"injectables/SchemaService.html":{}}}],["characters",{"_index":1019,"title":{},"body":{"contributing.html":{}}}],["charge",{"_index":1147,"title":{},"body":{"license.html":{}}}],["check",{"_index":1101,"title":{},"body":{"index.html":{}}}],["checkmark",{"_index":1283,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["choice",{"_index":1349,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["claim",{"_index":1188,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractWidget.html":{},"classes/LayoutNode.html":{}},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"injectables/WidgetLibraryService.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractWidget.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"overview.html":{}}}],["click",{"_index":1309,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["click.data.layout",{"_index":1332,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["clicked",{"_index":1329,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["client",{"_index":355,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["clonedeep",{"_index":429,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"injectables/SchemaService.html":{}}}],["clonedeep(schema",{"_index":852,"title":{},"body":{"injectables/SchemaService.html":{}}}],["clonedeep(this.layoutitem",{"_index":708,"title":{},"body":{"classes/LayoutNode.html":{}}}],["cluster_buttonmodule",{"_index":180,"title":{},"body":{"modules/ButtonModule.html":{},"overview.html":{}}}],["cluster_buttonmodule_declarations",{"_index":181,"title":{},"body":{"modules/ButtonModule.html":{},"overview.html":{}}}],["cluster_buttonmodule_exports",{"_index":182,"title":{},"body":{"modules/ButtonModule.html":{},"overview.html":{}}}],["cluster_formmodule",{"_index":330,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_declarations",{"_index":331,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_exports",{"_index":333,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_imports",{"_index":332,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_hiddenmodule",{"_index":346,"title":{},"body":{"modules/HiddenModule.html":{},"overview.html":{}}}],["cluster_hiddenmodule_declarations",{"_index":347,"title":{},"body":{"modules/HiddenModule.html":{},"overview.html":{}}}],["cluster_hiddenmodule_exports",{"_index":348,"title":{},"body":{"modules/HiddenModule.html":{},"overview.html":{}}}],["cluster_jsonschemaformmodule",{"_index":514,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"overview.html":{}}}],["cluster_jsonschemaformmodule_exports",{"_index":516,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"overview.html":{}}}],["cluster_jsonschemaformmodule_imports",{"_index":515,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"overview.html":{}}}],["cluster_selectwidgetmodule",{"_index":912,"title":{},"body":{"modules/SelectWidgetModule.html":{},"overview.html":{}}}],["cluster_selectwidgetmodule_declarations",{"_index":913,"title":{},"body":{"modules/SelectWidgetModule.html":{},"overview.html":{}}}],["cluster_selectwidgetmodule_exports",{"_index":914,"title":{},"body":{"modules/SelectWidgetModule.html":{},"overview.html":{}}}],["code",{"_index":962,"title":{},"body":{"contributing.html":{},"additional-documentation/introduction.html":{}}}],["coding",{"_index":971,"title":{},"body":{"contributing.html":{}}}],["collector",{"_index":293,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["color",{"_index":1268,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["command",{"_index":1241,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["commit",{"_index":973,"title":{},"body":{"contributing.html":{}}}],["commonmodule",{"_index":187,"title":{},"body":{"modules/ButtonModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/HiddenModule.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"modules/SelectWidgetModule.html":{}}}],["compatible",{"_index":458,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{},"contributing.html":{}}}],["compilation",{"_index":1291,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["compile",{"_index":1292,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["compiler",{"_index":549,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"additional-documentation/introduction.html":{}}}],["compiler,private",{"_index":574,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["compiler.compilemoduleandallcomponentssync(runtimecomponentmodule",{"_index":567,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["compiles",{"_index":534,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["compileschema",{"_index":867,"title":{},"body":{"injectables/SchemaService.html":{}}}],["compiletemplate",{"_index":528,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["compiletemplate(template",{"_index":530,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["complies",{"_index":1040,"title":{},"body":{"contributing.html":{}}}],["component",{"_index":120,"title":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"injectables/WidgetLibraryService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["component's",{"_index":1123,"title":{},"body":{"index.html":{}}}],["component_template",{"_index":162,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["componentfactory",{"_index":883,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["componentfactoryresolver",{"_index":880,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["componentref",{"_index":550,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{}}}],["componentref.destroy",{"_index":600,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["componentref.hostview.detectchanges",{"_index":598,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["componentref.location.nativeelement).innerhtml",{"_index":572,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["components",{"_index":122,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"overview.html":{}}}],["conditions",{"_index":1169,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":963,"title":{},"body":{"contributing.html":{}}}],["connection",{"_index":1196,"title":{},"body":{"license.html":{}}}],["consist",{"_index":1038,"title":{},"body":{"contributing.html":{}}}],["console.error('buildlayout",{"_index":794,"title":{},"body":{"injectables/LayoutService.html":{}}}],["console.error(`widget",{"_index":936,"title":{},"body":{"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{}}}],["console.error(layoutitem",{"_index":796,"title":{},"body":{"injectables/LayoutService.html":{}}}],["console.warn(this",{"_index":501,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["const",{"_index":243,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{}}}],["constructor",{"_index":28,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"injectables/DataEventPluginService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{}}}],["constructor(componentfactory",{"_index":879,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["constructor(elementdatastorage",{"_index":263,"title":{},"body":{"injectables/DataEventPluginService.html":{}}}],["constructor(jsf",{"_index":29,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/HiddenComponent.html":{}}}],["constructor(layoutitem",{"_index":645,"title":{},"body":{"classes/LayoutNode.html":{}}}],["constructor(private",{"_index":228,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{}}}],["constructor(protected",{"_index":94,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["constructor(schemaservice",{"_index":390,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/LayoutService.html":{}}}],["consumption",{"_index":1096,"title":{},"body":{"index.html":{}}}],["contain",{"_index":285,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"additional-documentation/introduction.html":{}}}],["container",{"_index":610,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["contains",{"_index":623,"title":{},"body":{"classes/LayoutNode.html":{}}}],["content",{"_index":644,"title":{},"body":{"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["context",{"_index":531,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["contianer",{"_index":615,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["contract",{"_index":1192,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":952,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributions",{"_index":1035,"title":{},"body":{"contributing.html":{}}}],["control",{"_index":47,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{}}}],["control.controlname",{"_index":581,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["control.layoutnode.name",{"_index":582,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["controldisabled",{"_index":17,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["controlname",{"_index":18,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["controls",{"_index":442,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["controlvalue",{"_index":19,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["conversion",{"_index":1350,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["converted",{"_index":282,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"classes/LayoutNode.html":{}}}],["coordinate",{"_index":1004,"title":{},"body":{"contributing.html":{}}}],["copies",{"_index":1165,"title":{},"body":{"license.html":{}}}],["copy",{"_index":658,"title":{},"body":{"classes/LayoutNode.html":{},"license.html":{}}}],["copyright",{"_index":1131,"title":{},"body":{"license.html":{}}}],["core",{"_index":1062,"title":{},"body":{"dependencies.html":{}}}],["core/core.module",{"_index":521,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["core/decorators/widget.decorator",{"_index":146,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{}}}],["core/interfaces/layout",{"_index":432,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/LayoutService.html":{}}}],["core/interfaces/schema",{"_index":833,"title":{},"body":{"injectables/SchemaService.html":{}}}],["core/models/layout",{"_index":772,"title":{},"body":{"injectables/LayoutService.html":{}}}],["core/services/element",{"_index":147,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["core/services/widget",{"_index":891,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["core/widget/widget",{"_index":148,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{}}}],["coremodule",{"_index":192,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/JsonSchemaFormModule.html":{},"modules.html":{},"overview.html":{}}}],["coremodule.forroot().providers",{"_index":524,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["corresponding",{"_index":808,"title":{},"body":{"interfaces/SchemaAnalyzer.html":{}}}],["couple",{"_index":1310,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["covered",{"_index":1036,"title":{},"body":{"contributing.html":{}}}],["craft",{"_index":1008,"title":{},"body":{"contributing.html":{}}}],["crafted",{"_index":1013,"title":{},"body":{"contributing.html":{}}}],["create",{"_index":564,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{}}}],["create(layoutitem",{"_index":651,"title":{},"body":{"classes/LayoutNode.html":{}}}],["createcomponent",{"_index":902,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["createcomponent(template",{"_index":560,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["created",{"_index":875,"title":{},"body":{"components/SelectWidgetComponent.html":{},"additional-documentation/introduction.html":{}}}],["createmodule(component",{"_index":565,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["creates",{"_index":544,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"components/SelectWidgetComponent.html":{}}}],["creation",{"_index":577,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["ctx",{"_index":548,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["current",{"_index":1289,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["currentlayout",{"_index":786,"title":{},"body":{"injectables/LayoutService.html":{}}}],["currently",{"_index":1264,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["custom",{"_index":1273,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["damages",{"_index":1189,"title":{},"body":{"license.html":{}}}],["data",{"_index":65,"title":{"interfaces/Data.html":{}},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/introduction.html":{}}}],["dataevent",{"_index":218,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/introduction.html":{}}}],["dataeventpluginservice",{"_index":201,"title":{"injectables/DataEventPluginService.html":{}},"body":{"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["dataindex",{"_index":25,"title":{},"body":{"classes/AbstractWidget.html":{},"components/SelectWidgetComponent.html":{}}}],["dataname",{"_index":246,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["datapointer",{"_index":643,"title":{},"body":{"classes/LayoutNode.html":{}}}],["datapointermap",{"_index":806,"title":{},"body":{"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{}}}],["datatype",{"_index":725,"title":{},"body":{"classes/LayoutNode.html":{}}}],["david",{"_index":1134,"title":{},"body":{"license.html":{}}}],["davis",{"_index":1136,"title":{},"body":{"license.html":{}}}],["deal",{"_index":1153,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1197,"title":{},"body":{"license.html":{}}}],["deault",{"_index":1237,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["declarations",{"_index":176,"title":{},"body":{"modules/ButtonModule.html":{},"modules/FormModule.html":{},"modules/HiddenModule.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"modules/SelectWidgetModule.html":{},"index.html":{},"overview.html":{}}}],["decorating",{"_index":920,"title":{},"body":{"interfaces/WidgetDecorator.html":{}}}],["decorator",{"_index":1082,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decorator.data.ts",{"_index":919,"title":{},"body":{"interfaces/WidgetDecorator.html":{}}}],["decorators",{"_index":679,"title":{},"body":{"classes/LayoutNode.html":{},"components/SelectWidgetComponent.html":{},"dependencies.html":{}}}],["default",{"_index":41,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"components/SelectWidgetComponent.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["defaultto",{"_index":672,"title":{},"body":{"classes/LayoutNode.html":{}}}],["defaultto(key",{"_index":705,"title":{},"body":{"classes/LayoutNode.html":{}}}],["defaultto(this.layoutitem.options",{"_index":721,"title":{},"body":{"classes/LayoutNode.html":{}}}],["defaultto(this.schema",{"_index":714,"title":{},"body":{"classes/LayoutNode.html":{}}}],["defaultwidget",{"_index":941,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["define",{"_index":408,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["defined",{"_index":33,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"modules/CoreModule.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"injectables/WidgetLibraryService.html":{}}}],["defines",{"_index":804,"title":{},"body":{"interfaces/SchemaAnalyzer.html":{}}}],["definition",{"_index":696,"title":{},"body":{"classes/LayoutNode.html":{}}}],["definitions",{"_index":830,"title":{},"body":{"injectables/SchemaService.html":{}}}],["degree",{"_index":628,"title":{},"body":{"classes/LayoutNode.html":{}}}],["delete",{"_index":296,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["delete(element",{"_index":297,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["deleted",{"_index":324,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["demo",{"_index":1103,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":175,"title":{"dependencies.html":{}},"body":{"modules/ButtonModule.html":{},"modules/FormModule.html":{},"modules/HiddenModule.html":{},"modules/JsonSchemaFormModule.html":{},"modules/SelectWidgetModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":997,"title":{},"body":{"contributing.html":{}}}],["depends",{"_index":363,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["describing",{"_index":70,"title":{},"body":{"classes/AbstractWidget.html":{},"components/SelectWidgetComponent.html":{}}}],["description",{"_index":10,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{}}}],["destroyed",{"_index":493,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["determine",{"_index":229,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"interfaces/LayoutItem.html":{}}}],["determined",{"_index":1232,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["dialog",{"_index":411,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{}}}],["difference",{"_index":770,"title":{},"body":{"injectables/LayoutService.html":{}}}],["directive",{"_index":160,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["directives",{"_index":170,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["directly",{"_index":1014,"title":{},"body":{"contributing.html":{}}}],["dirname",{"_index":730,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["disable",{"_index":46,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["disabled",{"_index":731,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["discuss",{"_index":955,"title":{},"body":{"contributing.html":{}}}],["discussed",{"_index":1002,"title":{},"body":{"contributing.html":{}}}],["display",{"_index":1120,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["displayed",{"_index":768,"title":{},"body":{"injectables/LayoutService.html":{}}}],["displays",{"_index":128,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{}}}],["distribute",{"_index":1162,"title":{},"body":{"license.html":{}}}],["document",{"_index":536,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["document.createelement('template",{"_index":570,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["documentation",{"_index":1151,"title":{},"body":{"license.html":{}}}],["documentfragment",{"_index":540,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["dom",{"_index":125,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/introduction.html":{}}}],["don't",{"_index":1124,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["down",{"_index":1340,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["draft",{"_index":814,"title":{},"body":{"injectables/SchemaService.html":{}}}],["due",{"_index":1288,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["duplication",{"_index":1007,"title":{},"body":{"contributing.html":{}}}],["dynamic",{"_index":1052,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":873,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["easy",{"_index":831,"title":{},"body":{"injectables/SchemaService.html":{}}}],["editor",{"_index":377,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"dependencies.html":{}}}],["efforts",{"_index":1005,"title":{},"body":{"contributing.html":{}}}],["element",{"_index":159,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{}}}],["element.addeventlistener(type",{"_index":258,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["element.removeeventlistener(type",{"_index":259,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["elementdatastorage",{"_index":31,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["elementdatastorageservice",{"_index":32,"title":{"injectables/ElementDataStorageService.html":{}},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["elementref",{"_index":72,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["email",{"_index":958,"title":{},"body":{"contributing.html":{}}}],["enctype",{"_index":388,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{}}}],["entire",{"_index":448,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["entrycomponents",{"_index":186,"title":{},"body":{"modules/ButtonModule.html":{},"modules/HiddenModule.html":{},"modules/SelectWidgetModule.html":{}}}],["equal",{"_index":1225,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["err",{"_index":793,"title":{},"body":{"injectables/LayoutService.html":{}}}],["error",{"_index":686,"title":{},"body":{"classes/LayoutNode.html":{},"injectables/LayoutService.html":{}}}],["error('missing",{"_index":690,"title":{},"body":{"classes/LayoutNode.html":{}}}],["even",{"_index":578,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"contributing.html":{}}}],["event",{"_index":57,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/introduction.html":{}}}],["event.data",{"_index":254,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"additional-documentation/introduction.html":{}}}],["event.data.id",{"_index":1322,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["event.data.onclick",{"_index":1327,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["event.target",{"_index":250,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["event.target).value",{"_index":116,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["event_manager_plugins",{"_index":198,"title":{},"body":{"modules/CoreModule.html":{}}}],["eventhandler",{"_index":248,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["eventmanager",{"_index":215,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["eventname",{"_index":241,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["eventname.split",{"_index":247,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["events",{"_index":1307,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["everyone",{"_index":977,"title":{},"body":{"contributing.html":{}}}],["everything",{"_index":1239,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["example",{"_index":130,"title":{},"body":{"components/ButtonComponent.html":{},"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{}}}],["example.html",{"_index":465,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["examples",{"_index":1105,"title":{},"body":{"index.html":{}}}],["examples)]{@link",{"_index":463,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["exception",{"_index":1272,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["exists",{"_index":938,"title":{},"body":{"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{}}}],["expect",{"_index":1352,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["expected",{"_index":980,"title":{},"body":{"contributing.html":{}}}],["export",{"_index":83,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["exports",{"_index":179,"title":{},"body":{"modules/ButtonModule.html":{},"modules/FormModule.html":{},"modules/HiddenModule.html":{},"modules/JsonSchemaFormModule.html":{},"modules/SelectWidgetModule.html":{},"overview.html":{}}}],["express",{"_index":1176,"title":{},"body":{"license.html":{}}}],["extends",{"_index":129,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["external",{"_index":1324,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["f.componenttype",{"_index":595,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["factory",{"_index":593,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["factory.create(this.injector",{"_index":596,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["false",{"_index":43,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/introduction.html":{}}}],["favor",{"_index":1299,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["feature",{"_index":969,"title":{},"body":{"contributing.html":{}}}],["features",{"_index":1012,"title":{},"body":{"contributing.html":{}}}],["feedback",{"_index":445,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["few",{"_index":1248,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["fields",{"_index":1231,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{}}}],["files",{"_index":1152,"title":{},"body":{"license.html":{}}}],["filling",{"_index":446,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["find",{"_index":988,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["fired",{"_index":226,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["first",{"_index":222,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"contributing.html":{},"additional-documentation/introduction.html":{}}}],["firstname",{"_index":1219,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["fitness",{"_index":1181,"title":{},"body":{"license.html":{}}}],["fix",{"_index":995,"title":{},"body":{"contributing.html":{}}}],["flag",{"_index":45,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["fn",{"_index":1325,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["fn(event",{"_index":1328,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["folder",{"_index":1130,"title":{},"body":{"index.html":{}}}],["follow",{"_index":964,"title":{},"body":{"contributing.html":{}}}],["following",{"_index":1122,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/introduction.html":{}}}],["form",{"_index":354,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/LayoutService.html":{},"contributing.html":{},"index.html":{},"license.html":{},"additional-documentation/introduction.html":{}}}],["form's",{"_index":459,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"index.html":{}}}],["form'},{'name",{"_index":167,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["form.component",{"_index":338,"title":{},"body":{"modules/FormModule.html":{}}}],["form.component.html",{"_index":383,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{}}}],["form.component.ts",{"_index":352,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{}}}],["form.component.ts:123",{"_index":423,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:127",{"_index":425,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:64",{"_index":416,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:66",{"_index":407,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:71",{"_index":393,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:76",{"_index":400,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:81",{"_index":406,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:86",{"_index":412,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:91",{"_index":422,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:95",{"_index":391,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.module.ts",{"_index":518,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["form.module.ts:18",{"_index":519,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["form.service",{"_index":79,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["form.service.ts",{"_index":526,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["form.service.ts:47",{"_index":543,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["form.service.ts:56",{"_index":547,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["form.service.ts:65",{"_index":533,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["form/form.module",{"_index":522,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["form/services/json",{"_index":78,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["form/src/lib/button/button.component.ts",{"_index":127,"title":{},"body":{"components/ButtonComponent.html":{}}}],["form/src/lib/button/button.component.ts:21",{"_index":138,"title":{},"body":{"components/ButtonComponent.html":{}}}],["form/src/lib/button/button.module.ts",{"_index":185,"title":{},"body":{"modules/ButtonModule.html":{}}}],["form/src/lib/core/core.module.ts",{"_index":193,"title":{},"body":{"modules/CoreModule.html":{}}}],["form/src/lib/core/core.module.ts:13",{"_index":196,"title":{},"body":{"modules/CoreModule.html":{}}}],["form/src/lib/core/decorators/widget.decorator.ts",{"_index":1080,"title":{},"body":{"miscellaneous/functions.html":{}}}],["form/src/lib/core/interfaces/layout",{"_index":601,"title":{},"body":{"interfaces/LayoutItem.html":{},"interfaces/LayoutOptions.html":{}}}],["form/src/lib/core/interfaces/schema",{"_index":802,"title":{},"body":{"interfaces/SchemaAnalyzer.html":{}}}],["form/src/lib/core/interfaces/widget",{"_index":918,"title":{},"body":{"interfaces/WidgetDecorator.html":{}}}],["form/src/lib/core/models/layout",{"_index":621,"title":{},"body":{"classes/LayoutNode.html":{}}}],["form/src/lib/core/services/data",{"_index":211,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"miscellaneous/typealiases.html":{}}}],["form/src/lib/core/services/element",{"_index":267,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["form/src/lib/core/services/widget",{"_index":923,"title":{},"body":{"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{}}}],["form/src/lib/core/widget/widget.ts",{"_index":9,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["form/src/lib/core/widget/widget.ts:12",{"_index":44,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["form/src/lib/core/widget/widget.ts:14",{"_index":49,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["form/src/lib/core/widget/widget.ts:16",{"_index":50,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["form/src/lib/core/widget/widget.ts:18",{"_index":52,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["form/src/lib/core/widget/widget.ts:20",{"_index":55,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["form/src/lib/core/widget/widget.ts:23",{"_index":68,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["form/src/lib/core/widget/widget.ts:25",{"_index":66,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["form/src/lib/core/widget/widget.ts:27",{"_index":64,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["form/src/lib/core/widget/widget.ts:30",{"_index":34,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["form/src/lib/core/widget/widget.ts:65",{"_index":58,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["form/src/lib/form/form.module.ts",{"_index":335,"title":{},"body":{"modules/FormModule.html":{}}}],["form/src/lib/form/json",{"_index":351,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form/src/lib/form/services/json",{"_index":525,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["form/src/lib/form/services/layout.service.ts",{"_index":756,"title":{},"body":{"injectables/LayoutService.html":{}}}],["form/src/lib/form/services/layout.service.ts:19",{"_index":765,"title":{},"body":{"injectables/LayoutService.html":{}}}],["form/src/lib/form/services/layout.service.ts:21",{"_index":761,"title":{},"body":{"injectables/LayoutService.html":{}}}],["form/src/lib/form/services/layout.service.ts:25",{"_index":763,"title":{},"body":{"injectables/LayoutService.html":{}}}],["form/src/lib/form/services/schema.service.ts",{"_index":809,"title":{},"body":{"injectables/SchemaService.html":{}}}],["form/src/lib/form/services/schema.service.ts:22",{"_index":824,"title":{},"body":{"injectables/SchemaService.html":{}}}],["form/src/lib/form/services/schema.service.ts:26",{"_index":822,"title":{},"body":{"injectables/SchemaService.html":{}}}],["form/src/lib/form/services/schema.service.ts:35",{"_index":827,"title":{},"body":{"injectables/SchemaService.html":{}}}],["form/src/lib/form/services/schema.service.ts:53",{"_index":813,"title":{},"body":{"injectables/SchemaService.html":{}}}],["form/src/lib/form/services/schema.service.ts:69",{"_index":818,"title":{},"body":{"injectables/SchemaService.html":{}}}],["form/src/lib/hidden/hidden.component.ts",{"_index":339,"title":{},"body":{"components/HiddenComponent.html":{}}}],["form/src/lib/hidden/hidden.component.ts:20",{"_index":344,"title":{},"body":{"components/HiddenComponent.html":{}}}],["form/src/lib/hidden/hidden.module.ts",{"_index":349,"title":{},"body":{"modules/HiddenModule.html":{}}}],["form/src/lib/json",{"_index":517,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["form/src/lib/select",{"_index":871,"title":{},"body":{"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{}}}],["form@outlook.com",{"_index":985,"title":{},"body":{"contributing.html":{}}}],["form]{@link",{"_index":460,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["formcontrol",{"_index":20,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["forminitialized",{"_index":487,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["formmodule",{"_index":329,"title":{"modules/FormModule.html":{}},"body":{"modules/FormModule.html":{},"modules/JsonSchemaFormModule.html":{},"modules.html":{},"overview.html":{}}}],["forroot",{"_index":195,"title":{},"body":{"modules/CoreModule.html":{},"modules/JsonSchemaFormModule.html":{}}}],["found",{"_index":986,"title":{},"body":{"contributing.html":{}}}],["fragment",{"_index":537,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["free",{"_index":1146,"title":{},"body":{"license.html":{}}}],["fully",{"_index":858,"title":{},"body":{"injectables/SchemaService.html":{}}}],["function",{"_index":242,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{}}}],["function('event",{"_index":1326,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["functions",{"_index":1078,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1168,"title":{},"body":{"license.html":{}}}],["garbage",{"_index":292,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["generatengcontent",{"_index":909,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["generates",{"_index":359,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["get(element",{"_index":303,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["getcontent",{"_index":667,"title":{},"body":{"classes/LayoutNode.html":{}}}],["getdatapointer",{"_index":662,"title":{},"body":{"classes/LayoutNode.html":{}}}],["getdatapointermap",{"_index":826,"title":{},"body":{"injectables/SchemaService.html":{}}}],["getdocumentfragment(componentref",{"_index":569,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["getlayout",{"_index":764,"title":{},"body":{"injectables/LayoutService.html":{}}}],["getlayoutdefinition",{"_index":656,"title":{},"body":{"classes/LayoutNode.html":{}}}],["getname",{"_index":660,"title":{},"body":{"classes/LayoutNode.html":{}}}],["getoptions",{"_index":670,"title":{},"body":{"classes/LayoutNode.html":{}}}],["getpointer(key",{"_index":703,"title":{},"body":{"classes/LayoutNode.html":{}}}],["gets",{"_index":828,"title":{},"body":{"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{}}}],["getschema",{"_index":821,"title":{},"body":{"injectables/SchemaService.html":{}}}],["getting",{"_index":944,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettype",{"_index":665,"title":{},"body":{"classes/LayoutNode.html":{}}}],["getwidget",{"_index":926,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["getwidget(type",{"_index":927,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["github",{"_index":991,"title":{},"body":{"contributing.html":{}}}],["given",{"_index":655,"title":{},"body":{"classes/LayoutNode.html":{}}}],["gives",{"_index":632,"title":{},"body":{"classes/LayoutNode.html":{}}}],["global",{"_index":746,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["good",{"_index":1348,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["google",{"_index":1317,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["google's",{"_index":1015,"title":{},"body":{"contributing.html":{}}}],["governed",{"_index":979,"title":{},"body":{"contributing.html":{}}}],["granted",{"_index":1145,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1201,"title":{},"body":{"modules.html":{}}}],["greater",{"_index":1226,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["ground",{"_index":1094,"title":{},"body":{"index.html":{}}}],["guide",{"_index":1016,"title":{},"body":{"contributing.html":{}}}],["guidelines",{"_index":975,"title":{},"body":{"contributing.html":{}}}],["handle",{"_index":712,"title":{},"body":{"classes/LayoutNode.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/introduction.html":{}}}],["handlebars",{"_index":554,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"dependencies.html":{},"additional-documentation/introduction.html":{}}}],["handlebars.compile(template)({options",{"_index":588,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["handlebars/dist/cjs/handlebars",{"_index":555,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["handled",{"_index":1335,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["handler",{"_index":225,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"additional-documentation/introduction.html":{}}}],["handler(event",{"_index":256,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["handling",{"_index":758,"title":{},"body":{"injectables/LayoutService.html":{}}}],["has(element",{"_index":306,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["height",{"_index":751,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["held",{"_index":1133,"title":{},"body":{"license.html":{}}}],["help",{"_index":989,"title":{},"body":{"contributing.html":{}}}],["helper",{"_index":527,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["here",{"_index":1106,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["hereby",{"_index":1144,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":341,"title":{},"body":{"components/HiddenComponent.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{}}}],["hidden'},{'name",{"_index":165,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["hidden.component",{"_index":350,"title":{},"body":{"modules/HiddenModule.html":{}}}],["hidden.component.html",{"_index":343,"title":{},"body":{"components/HiddenComponent.html":{}}}],["hidden.component.scss",{"_index":342,"title":{},"body":{"components/HiddenComponent.html":{}}}],["hidden/hidden.module",{"_index":523,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["hiddencomponent",{"_index":164,"title":{"components/HiddenComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"overview.html":{}}}],["hiddenmodule",{"_index":345,"title":{"modules/HiddenModule.html":{}},"body":{"modules/HiddenModule.html":{},"modules/JsonSchemaFormModule.html":{},"modules.html":{},"overview.html":{}}}],["holders",{"_index":1186,"title":{},"body":{"license.html":{}}}],["html",{"_index":158,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/introduction.html":{}}}],["htmlclass",{"_index":732,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["htmlelement",{"_index":240,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{}}}],["http://json",{"_index":863,"title":{},"body":{"injectables/SchemaService.html":{},"additional-documentation/introduction.html":{}}}],["http://schemaform.io",{"_index":461,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["http://schemaform.io/examples/bootstrap",{"_index":464,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["http://thlorenz.github.io/brace",{"_index":485,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["http://ulion.github.io/jsonform/playground",{"_index":475,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["https://angular.io",{"_index":477,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["https://developer.mozilla.org/en",{"_index":398,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutOptions.html":{}}}],["https://example.com/person.schema.json",{"_index":1218,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["https://github.com/epoberezkin/ajv",{"_index":481,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["https://github.com/epoberezkin/json",{"_index":483,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{}}}],["https://github.com/joshfire/jsonform",{"_index":474,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["https://github.com/lodash/lodash",{"_index":479,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["https://github.com/mozilla",{"_index":469,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["https://mozilla",{"_index":471,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["icon",{"_index":733,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["id",{"_index":640,"title":{},"body":{"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["identifier",{"_index":650,"title":{},"body":{"classes/LayoutNode.html":{}}}],["ignore",{"_index":849,"title":{},"body":{"injectables/SchemaService.html":{}}}],["ignoring",{"_index":939,"title":{},"body":{"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{}}}],["image",{"_index":153,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/introduction.html":{}}}],["implement",{"_index":150,"title":{},"body":{"components/ButtonComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/SchemaService.html":{},"contributing.html":{}}}],["implements",{"_index":11,"title":{},"body":{"classes/AbstractWidget.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{}}}],["implied",{"_index":1177,"title":{},"body":{"license.html":{}}}],["import",{"_index":71,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"injectables/WidgetLibraryService.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["imported",{"_index":1305,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["imports",{"_index":191,"title":{},"body":{"modules/ButtonModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/HiddenModule.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"modules/SelectWidgetModule.html":{},"index.html":{}}}],["included",{"_index":1172,"title":{},"body":{"license.html":{},"additional-documentation/introduction.html":{}}}],["including",{"_index":1156,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":1298,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["indentation",{"_index":1023,"title":{},"body":{"contributing.html":{}}}],["index",{"_index":15,"title":{"index.html":{}},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":603,"title":{},"body":{"interfaces/LayoutItem.html":{},"interfaces/LayoutOptions.html":{}}}],["individual",{"_index":441,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{}}}],["information",{"_index":1027,"title":{},"body":{"contributing.html":{}}}],["inherited",{"_index":139,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["initial",{"_index":108,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["initialize",{"_index":101,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["initializecontrol",{"_index":529,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["initializecontrol(control",{"_index":541,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["initializeform",{"_index":504,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["initializelayout",{"_index":507,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["initializeschema",{"_index":509,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["injectable",{"_index":213,"title":{"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{}},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{}}}],["injectables",{"_index":260,"title":{},"body":{"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{},"overview.html":{}}}],["injecting",{"_index":890,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["injector",{"_index":551,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["innerhtml",{"_index":568,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["input",{"_index":73,"title":{},"body":{"classes/AbstractWidget.html":{},"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutOptions.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/introduction.html":{}}}],["input[name",{"_index":608,"title":{},"body":{"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{}}}],["input[type='hidden",{"_index":340,"title":{},"body":{"components/HiddenComponent.html":{}}}],["inputs",{"_index":24,"title":{},"body":{"classes/AbstractWidget.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/introduction.html":{}}}],["inserted",{"_index":1276,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["inside",{"_index":669,"title":{},"body":{"classes/LayoutNode.html":{}}}],["inspect",{"_index":1341,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["install",{"_index":1111,"title":{},"body":{"index.html":{}}}],["installing",{"_index":1109,"title":{},"body":{"index.html":{}}}],["instances",{"_index":1260,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["integer",{"_index":1228,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["interactions",{"_index":965,"title":{},"body":{"contributing.html":{}}}],["interface",{"_index":209,"title":{"interfaces/Data.html":{},"interfaces/LayoutItem.html":{},"interfaces/LayoutOptions.html":{},"interfaces/SchemaAnalyzer.html":{},"interfaces/WidgetDecorator.html":{}},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"interfaces/LayoutItem.html":{},"interfaces/LayoutOptions.html":{},"interfaces/SchemaAnalyzer.html":{},"interfaces/WidgetDecorator.html":{}}}],["interfaces",{"_index":210,"title":{},"body":{"interfaces/Data.html":{},"interfaces/LayoutItem.html":{},"interfaces/LayoutOptions.html":{},"interfaces/SchemaAnalyzer.html":{},"interfaces/WidgetDecorator.html":{},"overview.html":{}}}],["interfaces/layout",{"_index":680,"title":{},"body":{"classes/LayoutNode.html":{}}}],["interfaces/schema",{"_index":681,"title":{},"body":{"classes/LayoutNode.html":{}}}],["internal",{"_index":396,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["internally",{"_index":1336,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["introduction",{"_index":1212,"title":{"additional-documentation/introduction.html":{}},"body":{}}],["isplainobject",{"_index":430,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["isplainobject(this.schema",{"_index":510,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["isstring",{"_index":673,"title":{},"body":{"classes/LayoutNode.html":{}}}],["isstring(layoutitem",{"_index":697,"title":{},"body":{"classes/LayoutNode.html":{}}}],["isstring(this.layoutitem.content",{"_index":715,"title":{},"body":{"classes/LayoutNode.html":{}}}],["issue",{"_index":957,"title":{},"body":{"contributing.html":{}}}],["issues",{"_index":967,"title":{},"body":{"contributing.html":{}}}],["it's",{"_index":1091,"title":{},"body":{"index.html":{}}}],["item",{"_index":607,"title":{},"body":{"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["item.data",{"_index":433,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{}}}],["item.data.ts",{"_index":602,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["item.data.ts:18",{"_index":605,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["items",{"_index":726,"title":{},"body":{"classes/LayoutNode.html":{}}}],["itself",{"_index":276,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["james",{"_index":1140,"title":{},"body":{"license.html":{}}}],["javascript",{"_index":366,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"contributing.html":{},"additional-documentation/introduction.html":{}}}],["joshfire's",{"_index":473,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["jquery",{"_index":272,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"components/JsonSchemaFormComponent.html":{}}}],["jquery's",{"_index":1338,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["js",{"_index":1063,"title":{},"body":{"dependencies.html":{}}}],["jsf",{"_index":40,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/introduction.html":{}}}],["json",{"_index":7,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["json/path",{"_index":702,"title":{},"body":{"classes/LayoutNode.html":{}}}],["jsonpointers",{"_index":847,"title":{},"body":{"injectables/SchemaService.html":{}}}],["jsonschema",{"_index":468,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["jsonschema4",{"_index":415,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{}}}],["jsonschema6",{"_index":414,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{}}}],["jsonschema7",{"_index":413,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"injectables/SchemaService.html":{},"additional-documentation/introduction.html":{}}}],["jsonschema7definition",{"_index":771,"title":{},"body":{"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{}}}],["jsonschemaformcomponent",{"_index":166,"title":{"components/JsonSchemaFormComponent.html":{}},"body":{"components/ButtonComponent.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"overview.html":{}}}],["jsonschemaformmodule",{"_index":513,"title":{"modules/JsonSchemaFormModule.html":{}},"body":{"modules/JsonSchemaFormModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["jsonschemaformmodule.forroot",{"_index":1118,"title":{},"body":{"index.html":{}}}],["jsonschemaformservice",{"_index":30,"title":{"injectables/JsonSchemaFormService.html":{}},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{}}}],["jsonschemaformservice.createcomponent(template",{"_index":590,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["jsonschemaformservice.createmodule(component",{"_index":591,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["jsonschemaformservice.getdocumentfragment(componentref",{"_index":599,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["key",{"_index":298,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["key's",{"_index":305,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["key(object.path",{"_index":701,"title":{},"body":{"classes/LayoutNode.html":{}}}],["key/value",{"_index":300,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["keys",{"_index":921,"title":{},"body":{"interfaces/WidgetDecorator.html":{}}}],["kind",{"_index":998,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["laid",{"_index":1244,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["last",{"_index":1222,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["lastly",{"_index":1320,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["lastname",{"_index":1221,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["layout",{"_index":67,"title":{},"body":{"classes/AbstractWidget.html":{},"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{},"dependencies.html":{},"additional-documentation/introduction.html":{}}}],["layout.component.ts",{"_index":1255,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["layout.json",{"_index":1254,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["layout.onclick",{"_index":1313,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["layout.reduce((currentlayout",{"_index":784,"title":{},"body":{"injectables/LayoutService.html":{}}}],["layout.type",{"_index":687,"title":{},"body":{"classes/LayoutNode.html":{},"interfaces/WidgetDecorator.html":{}}}],["layoutcomponent",{"_index":1256,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["layoutdefinition",{"_index":642,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layoutindex",{"_index":26,"title":{},"body":{"classes/AbstractWidget.html":{},"components/SelectWidgetComponent.html":{}}}],["layoutitem",{"_index":431,"title":{"interfaces/LayoutItem.html":{}},"body":{"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{}}}],["layoutitem.type",{"_index":689,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layoutnode",{"_index":27,"title":{"classes/LayoutNode.html":{}},"body":{"classes/AbstractWidget.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{},"injectables/WidgetLibraryService.html":{}}}],["layoutnode(item",{"_index":699,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layoutnode.create(layoutitem",{"_index":788,"title":{},"body":{"injectables/LayoutService.html":{}}}],["layoutnode.getpointer(this.layoutitem.key",{"_index":711,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layoutoptions",{"_index":609,"title":{"interfaces/LayoutOptions.html":{}},"body":{"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{}}}],["layouts",{"_index":759,"title":{},"body":{"injectables/LayoutService.html":{}}}],["layoutservice",{"_index":381,"title":{"injectables/LayoutService.html":{}},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/LayoutService.html":{}}}],["left",{"_index":1090,"title":{},"body":{"index.html":{}}}],["legend",{"_index":157,"title":{},"body":{"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"overview.html":{}}}],["less",{"_index":1020,"title":{},"body":{"contributing.html":{}}}],["liability",{"_index":1190,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1187,"title":{},"body":{"license.html":{}}}],["library",{"_index":357,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/WidgetLibraryService.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["library.service",{"_index":892,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["library.service.ts",{"_index":924,"title":{},"body":{"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{}}}],["library.service.ts:32",{"_index":928,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["license",{"_index":976,"title":{"license.html":{}},"body":{"contributing.html":{},"license.html":{}}}],["limitation",{"_index":1157,"title":{},"body":{"license.html":{},"additional-documentation/introduction.html":{}}}],["limited",{"_index":1178,"title":{},"body":{"license.html":{}}}],["link",{"_index":486,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutOptions.html":{}}}],["list",{"_index":766,"title":{},"body":{"injectables/LayoutService.html":{}}}],["listener",{"_index":238,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["listners",{"_index":490,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["literal",{"_index":532,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutOptions.html":{}}}],["live",{"_index":1102,"title":{},"body":{"index.html":{}}}],["load",{"_index":1302,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["location",{"_index":1249,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["lodash",{"_index":365,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"dependencies.html":{}}}],["lodash]{@link",{"_index":478,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["logic",{"_index":624,"title":{},"body":{"classes/LayoutNode.html":{}}}],["login.component.html",{"_index":1262,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["look",{"_index":87,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["looking",{"_index":693,"title":{},"body":{"classes/LayoutNode.html":{}}}],["lookup",{"_index":832,"title":{},"body":{"injectables/SchemaService.html":{}}}],["lot",{"_index":1098,"title":{},"body":{"index.html":{}}}],["main",{"_index":1113,"title":{},"body":{"index.html":{}}}],["major",{"_index":999,"title":{},"body":{"contributing.html":{}}}],["make",{"_index":451,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"contributing.html":{}}}],["making",{"_index":961,"title":{},"body":{"contributing.html":{}}}],["manager",{"_index":227,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["manually",{"_index":584,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["map",{"_index":270,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{}}}],["map()).get(element",{"_index":318,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["mapkeys",{"_index":674,"title":{},"body":{"classes/LayoutNode.html":{}}}],["mapkeys(pick(this.schema",{"_index":719,"title":{},"body":{"classes/LayoutNode.html":{}}}],["mappeddata",{"_index":315,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["mappeddata.delete(key",{"_index":325,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["mappeddata.set(key",{"_index":319,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["mappeddata.size",{"_index":326,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["mappedlayout",{"_index":783,"title":{},"body":{"injectables/LayoutService.html":{}}}],["mappedlayout.splice(starindex",{"_index":799,"title":{},"body":{"injectables/LayoutService.html":{}}}],["mappedpointers",{"_index":780,"title":{},"body":{"injectables/LayoutService.html":{}}}],["mappedpointers.add(layoutnode.datapointer",{"_index":790,"title":{},"body":{"injectables/LayoutService.html":{}}}],["mapping",{"_index":925,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["matched",{"_index":1355,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["matching",{"_index":118,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["max",{"_index":557,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["means",{"_index":223,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["memoize",{"_index":678,"title":{},"body":{"classes/LayoutNode.html":{}}}],["merchantability",{"_index":1180,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1160,"title":{},"body":{"license.html":{}}}],["message",{"_index":974,"title":{},"body":{"contributing.html":{}}}],["metadata",{"_index":131,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/introduction.html":{}}}],["method",{"_index":389,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/WidgetLibraryService.html":{},"contributing.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["methods",{"_index":22,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"modules/CoreModule.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"injectables/WidgetLibraryService.html":{}}}],["migrate",{"_index":811,"title":{},"body":{"injectables/SchemaService.html":{},"dependencies.html":{}}}],["migrate(schema",{"_index":812,"title":{},"body":{"injectables/SchemaService.html":{}}}],["migrate.draft6(migratedschema",{"_index":856,"title":{},"body":{"injectables/SchemaService.html":{}}}],["migrate/issues/1",{"_index":857,"title":{},"body":{"injectables/SchemaService.html":{}}}],["migratedschema",{"_index":851,"title":{},"body":{"injectables/SchemaService.html":{}}}],["migratedschema.$schema",{"_index":853,"title":{},"body":{"injectables/SchemaService.html":{}}}],["migratedschema.$schema.includes('draft",{"_index":854,"title":{},"body":{"injectables/SchemaService.html":{}}}],["migration",{"_index":835,"title":{},"body":{"injectables/SchemaService.html":{}}}],["minimum",{"_index":1229,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["miscellaneous",{"_index":1077,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":996,"title":{},"body":{"contributing.html":{}}}],["mit",{"_index":1034,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["mode",{"_index":1303,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["model",{"_index":361,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["models/layout",{"_index":80,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["modify",{"_index":1159,"title":{},"body":{"license.html":{}}}],["module",{"_index":172,"title":{"modules/ButtonModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/HiddenModule.html":{},"modules/JsonSchemaFormModule.html":{},"modules/SelectWidgetModule.html":{}},"body":{"modules/ButtonModule.html":{},"modules/FormModule.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"modules/SelectWidgetModule.html":{},"index.html":{},"overview.html":{}}}],["module.componentfactories.find((f",{"_index":594,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["moduleref",{"_index":575,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["modules",{"_index":174,"title":{"modules.html":{}},"body":{"modules/ButtonModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/HiddenModule.html":{},"modules/JsonSchemaFormModule.html":{},"modules/SelectWidgetModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithcomponentfactories",{"_index":552,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["modulewithproviders",{"_index":197,"title":{},"body":{"modules/CoreModule.html":{},"modules/JsonSchemaFormModule.html":{}}}],["more",{"_index":1026,"title":{},"body":{"contributing.html":{},"additional-documentation/introduction.html":{}}}],["mostly",{"_index":456,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["mozilla's",{"_index":466,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["multi",{"_index":205,"title":{},"body":{"modules/CoreModule.html":{}}}],["multipart/form",{"_index":404,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["n",{"_index":1266,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["name",{"_index":37,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/functions.html":{},"additional-documentation/introduction.html":{}}}],["native",{"_index":1258,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["necessary",{"_index":1359,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["need",{"_index":281,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"additional-documentation/introduction.html":{}}}],["needed",{"_index":631,"title":{},"body":{"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["never",{"_index":1357,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["new",{"_index":314,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{},"contributing.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["newcomponent",{"_index":893,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["newlayout",{"_index":785,"title":{},"body":{"injectables/LayoutService.html":{}}}],["newlayout.concat(layoutnode",{"_index":791,"title":{},"body":{"injectables/LayoutService.html":{}}}],["ng2",{"_index":1070,"title":{},"body":{"dependencies.html":{}}}],["ngafterviewinit",{"_index":109,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["ngdestroy",{"_index":492,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["ngmodule",{"_index":189,"title":{},"body":{"modules/ButtonModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/HiddenModule.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"modules/SelectWidgetModule.html":{},"index.html":{}}}],["ngmoduleref",{"_index":553,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["ngonchanges",{"_index":895,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["ngonchanges(changes",{"_index":98,"title":{},"body":{"classes/AbstractWidget.html":{},"components/JsonSchemaFormComponent.html":{}}}],["ngondestroy",{"_index":497,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["ngoninit",{"_index":103,"title":{},"body":{"classes/AbstractWidget.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["ngx",{"_index":353,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"contributing.html":{},"index.html":{},"license.html":{},"additional-documentation/introduction.html":{}}}],["ngxjsonschemaform",{"_index":1084,"title":{},"body":{"index.html":{}}}],["ngzone",{"_index":214,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["node",{"_index":69,"title":{},"body":{"classes/AbstractWidget.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{}}}],["node.ts",{"_index":622,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:22",{"_index":646,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:40",{"_index":653,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:58",{"_index":657,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:62",{"_index":661,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:66",{"_index":663,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:73",{"_index":666,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:77",{"_index":668,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:81",{"_index":671,"title":{},"body":{"classes/LayoutNode.html":{}}}],["nodes",{"_index":767,"title":{},"body":{"injectables/LayoutService.html":{}}}],["non",{"_index":286,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["noninfringement",{"_index":1184,"title":{},"body":{"license.html":{}}}],["normalizes",{"_index":700,"title":{},"body":{"classes/LayoutNode.html":{}}}],["note",{"_index":611,"title":{},"body":{"interfaces/LayoutItem.html":{},"contributing.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["notice",{"_index":1170,"title":{},"body":{"license.html":{}}}],["npm",{"_index":1110,"title":{},"body":{"index.html":{}}}],["null",{"_index":392,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["number",{"_index":743,"title":{},"body":{"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{}}}],["numerous",{"_index":1263,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["object",{"_index":454,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutItem.html":{},"injectables/SchemaService.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["objects",{"_index":279,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["observable",{"_index":488,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["obtaining",{"_index":1149,"title":{},"body":{"license.html":{}}}],["obviously",{"_index":364,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["older",{"_index":1252,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["omit",{"_index":675,"title":{},"body":{"classes/LayoutNode.html":{}}}],["omit(this.layoutitem",{"_index":720,"title":{},"body":{"classes/LayoutNode.html":{}}}],["once",{"_index":1233,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["onchanges",{"_index":12,"title":{},"body":{"classes/AbstractWidget.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["onclick",{"_index":1318,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["onclick(event",{"_index":1321,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["ondestroy",{"_index":378,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["oninit",{"_index":13,"title":{},"body":{"classes/AbstractWidget.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["onto",{"_index":874,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["open",{"_index":1315,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["opendialog",{"_index":1344,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["opendialog(event",{"_index":1323,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["option",{"_index":1274,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["optional",{"_index":39,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":21,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/introduction.html":{}}}],["options.data",{"_index":620,"title":{},"body":{"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{}}}],["options.data.ts",{"_index":728,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["options.data.ts:32",{"_index":736,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["options.title",{"_index":1280,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["order",{"_index":1215,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["original",{"_index":659,"title":{},"body":{"classes/LayoutNode.html":{},"contributing.html":{}}}],["others",{"_index":604,"title":{},"body":{"interfaces/LayoutItem.html":{},"interfaces/LayoutOptions.html":{}}}],["otherwise",{"_index":1194,"title":{},"body":{"license.html":{}}}],["out",{"_index":184,"title":{},"body":{"modules/ButtonModule.html":{},"modules/FormModule.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"modules/SelectWidgetModule.html":{},"index.html":{},"license.html":{},"overview.html":{},"additional-documentation/introduction.html":{}}}],["outlines",{"_index":1001,"title":{},"body":{"contributing.html":{}}}],["over",{"_index":1088,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1203,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owners",{"_index":959,"title":{},"body":{"contributing.html":{}}}],["package",{"_index":1042,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":951,"title":{"additional-documentation/introduction.html":{}},"body":{"changelog.html":{}}}],["pairing",{"_index":301,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["param",{"_index":114,"title":{},"body":{"classes/AbstractWidget.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{}}}],["parameters",{"_index":35,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/functions.html":{}}}],["parentschema",{"_index":842,"title":{},"body":{"injectables/SchemaService.html":{}}}],["parentschema.type",{"_index":843,"title":{},"body":{"injectables/SchemaService.html":{}}}],["parity",{"_index":1100,"title":{},"body":{"index.html":{}}}],["parse",{"_index":625,"title":{},"body":{"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["parsing",{"_index":810,"title":{},"body":{"injectables/SchemaService.html":{}}}],["part",{"_index":1138,"title":{},"body":{"license.html":{},"additional-documentation/introduction.html":{}}}],["participating",{"_index":978,"title":{},"body":{"contributing.html":{}}}],["particular",{"_index":1182,"title":{},"body":{"license.html":{}}}],["pass",{"_index":637,"title":{},"body":{"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["passed",{"_index":545,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/introduction.html":{}}}],["path",{"_index":606,"title":{},"body":{"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{}}}],["per",{"_index":558,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"injectables/SchemaService.html":{}}}],["permission",{"_index":1143,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1166,"title":{},"body":{"license.html":{}}}],["person",{"_index":1148,"title":{},"body":{"license.html":{},"additional-documentation/introduction.html":{}}}],["person's",{"_index":1220,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["persons",{"_index":1167,"title":{},"body":{"license.html":{}}}],["pertains",{"_index":683,"title":{},"body":{"classes/LayoutNode.html":{}}}],["pick",{"_index":676,"title":{},"body":{"classes/LayoutNode.html":{}}}],["pick(this.schema",{"_index":717,"title":{},"body":{"classes/LayoutNode.html":{}}}],["piggybacking",{"_index":217,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"miscellaneous/typealiases.html":{}}}],["placeholder",{"_index":889,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["play",{"_index":1104,"title":{},"body":{"index.html":{}}}],["playground",{"_index":373,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["please",{"_index":954,"title":{},"body":{"contributing.html":{}}}],["plugin",{"_index":220,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["plugin.service",{"_index":203,"title":{},"body":{"modules/CoreModule.html":{}}}],["plugin.service.ts",{"_index":212,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"miscellaneous/typealiases.html":{}}}],["plugin.service.ts:21",{"_index":264,"title":{},"body":{"injectables/DataEventPluginService.html":{}}}],["plugin.service.ts:26",{"_index":266,"title":{},"body":{"injectables/DataEventPluginService.html":{}}}],["plugin.service.ts:31",{"_index":265,"title":{},"body":{"injectables/DataEventPluginService.html":{}}}],["pointer",{"_index":704,"title":{},"body":{"classes/LayoutNode.html":{},"injectables/SchemaService.html":{}}}],["pointer.charat(0",{"_index":706,"title":{},"body":{"classes/LayoutNode.html":{}}}],["pointer.replace(/\\./g",{"_index":707,"title":{},"body":{"classes/LayoutNode.html":{}}}],["pointers",{"_index":807,"title":{},"body":{"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{}}}],["pointers.set(pointer.replace(/\\/properties/g",{"_index":844,"title":{},"body":{"injectables/SchemaService.html":{}}}],["populate",{"_index":102,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["popup",{"_index":1345,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["portions",{"_index":1132,"title":{},"body":{"license.html":{}}}],["possible",{"_index":1295,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["post",{"_index":410,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["predecesor",{"_index":1089,"title":{},"body":{"index.html":{}}}],["present",{"_index":224,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["presented",{"_index":654,"title":{},"body":{"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["prevent",{"_index":1006,"title":{},"body":{"contributing.html":{}}}],["primitive",{"_index":278,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["private",{"_index":92,"title":{},"body":{"classes/AbstractWidget.html":{},"injectables/ElementDataStorageService.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"injectables/WidgetLibraryService.html":{}}}],["project",{"_index":966,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{}}}],["projects/.../data",{"_index":1208,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../widget",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../widget.decorator.ts",{"_index":1079,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/demo/src/assets/examples",{"_index":1129,"title":{},"body":{"index.html":{}}}],["projects/ngx",{"_index":6,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["propagate",{"_index":96,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["properties",{"_index":16,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"interfaces/SchemaAnalyzer.html":{},"components/SelectWidgetComponent.html":{},"interfaces/WidgetDecorator.html":{},"additional-documentation/introduction.html":{}}}],["property",{"_index":613,"title":{},"body":{"interfaces/LayoutItem.html":{},"additional-documentation/introduction.html":{}}}],["propley",{"_index":1354,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["proposed",{"_index":1000,"title":{},"body":{"contributing.html":{}}}],["protected",{"_index":95,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["provide",{"_index":207,"title":{},"body":{"modules/CoreModule.html":{},"components/JsonSchemaFormComponent.html":{}}}],["provided",{"_index":1174,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":311,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"injectables/WidgetLibraryService.html":{}}}],["providers",{"_index":178,"title":{},"body":{"modules/ButtonModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"modules/SelectWidgetModule.html":{},"overview.html":{}}}],["provides",{"_index":273,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{}}}],["proxy",{"_index":629,"title":{},"body":{"classes/LayoutNode.html":{}}}],["prs",{"_index":1037,"title":{},"body":{"contributing.html":{}}}],["public",{"_index":639,"title":{},"body":{"classes/LayoutNode.html":{},"injectables/LayoutService.html":{}}}],["publish",{"_index":1161,"title":{},"body":{"license.html":{}}}],["pull",{"_index":993,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":1183,"title":{},"body":{"license.html":{}}}],["put",{"_index":614,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["question1",{"_index":1250,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["question2",{"_index":1253,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["react",{"_index":467,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["read",{"_index":91,"title":{},"body":{"classes/AbstractWidget.html":{},"components/SelectWidgetComponent.html":{}}}],["readonly",{"_index":93,"title":{},"body":{"classes/AbstractWidget.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{}}}],["ready",{"_index":1095,"title":{},"body":{"index.html":{}}}],["real",{"_index":443,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["recent",{"_index":1296,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["recognized",{"_index":795,"title":{},"body":{"injectables/LayoutService.html":{}}}],["recursivereference",{"_index":727,"title":{},"body":{"classes/LayoutNode.html":{}}}],["redering",{"_index":1287,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["reducing",{"_index":1300,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["ref",{"_index":722,"title":{},"body":{"classes/LayoutNode.html":{}}}],["reference",{"_index":85,"title":{},"body":{"classes/AbstractWidget.html":{},"injectables/ElementDataStorageService.html":{},"classes/LayoutNode.html":{},"injectables/SchemaService.html":{}}}],["referenced",{"_index":302,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["referencing",{"_index":288,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["register",{"_index":932,"title":{},"body":{"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{}}}],["registered",{"_index":930,"title":{},"body":{"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{}}}],["registering",{"_index":931,"title":{},"body":{"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{}}}],["registers",{"_index":1083,"title":{},"body":{"miscellaneous/functions.html":{}}}],["related",{"_index":695,"title":{},"body":{"classes/LayoutNode.html":{},"injectables/SchemaService.html":{}}}],["release",{"_index":949,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["released",{"_index":1032,"title":{},"body":{"contributing.html":{}}}],["releases",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["relevant",{"_index":829,"title":{},"body":{"injectables/SchemaService.html":{}}}],["remove",{"_index":295,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{}}}],["removed",{"_index":291,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["render",{"_index":538,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"additional-documentation/introduction.html":{}}}],["rendered",{"_index":409,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["rendering",{"_index":539,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["replace",{"_index":88,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["report",{"_index":982,"title":{},"body":{"contributing.html":{}}}],["repository",{"_index":953,"title":{},"body":{"contributing.html":{}}}],["represent",{"_index":617,"title":{},"body":{"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{}}}],["request",{"_index":994,"title":{},"body":{"contributing.html":{}}}],["requests",{"_index":970,"title":{},"body":{"contributing.html":{}}}],["requirement",{"_index":1213,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["requirements",{"_index":1041,"title":{},"body":{"contributing.html":{}}}],["requires",{"_index":1029,"title":{},"body":{"contributing.html":{}}}],["reset",{"_index":154,"title":{},"body":{"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"modules/FormModule.html":{},"modules/HiddenModule.html":{},"modules/JsonSchemaFormModule.html":{},"modules/SelectWidgetModule.html":{},"overview.html":{},"additional-documentation/introduction.html":{}}}],["respond",{"_index":1306,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["restricted",{"_index":1297,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["restriction",{"_index":1155,"title":{},"body":{"license.html":{}}}],["result",{"_index":117,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["results",{"_index":119,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["return",{"_index":204,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"injectables/WidgetLibraryService.html":{}}}],["returned",{"_index":453,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["returns",{"_index":61,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"modules/CoreModule.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"miscellaneous/functions.html":{}}}],["review",{"_index":1024,"title":{},"body":{"contributing.html":{}}}],["rewritten",{"_index":1093,"title":{},"body":{"index.html":{}}}],["rights",{"_index":1158,"title":{},"body":{"license.html":{}}}],["root",{"_index":312,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/WidgetLibraryService.html":{}}}],["rules",{"_index":972,"title":{},"body":{"contributing.html":{}}}],["run",{"_index":1311,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["running",{"_index":1346,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["runtime",{"_index":561,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["runtimecomponent",{"_index":563,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["runtimecomponentmodule",{"_index":566,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["rxjs",{"_index":428,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"dependencies.html":{}}}],["sample",{"_index":562,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["samples",{"_index":1127,"title":{},"body":{"index.html":{}}}],["savethen",{"_index":1112,"title":{},"body":{"index.html":{}}}],["scharett",{"_index":1141,"title":{},"body":{"license.html":{}}}],["schema",{"_index":8,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["schema(value",{"_index":836,"title":{},"body":{"injectables/SchemaService.html":{}}}],["schema.json",{"_index":1217,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["schema.org/draft",{"_index":864,"title":{},"body":{"injectables/SchemaService.html":{},"additional-documentation/introduction.html":{}}}],["schema.service",{"_index":773,"title":{},"body":{"injectables/LayoutService.html":{}}}],["schema.type",{"_index":688,"title":{},"body":{"classes/LayoutNode.html":{},"injectables/SchemaService.html":{}}}],["schemaanalyzer",{"_index":652,"title":{"interfaces/SchemaAnalyzer.html":{}},"body":{"classes/LayoutNode.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{}}}],["schemaanalyzer.datapointermap.get(layoutnode.getpointer(item.key",{"_index":698,"title":{},"body":{"classes/LayoutNode.html":{}}}],["schemapointers",{"_index":778,"title":{},"body":{"injectables/LayoutService.html":{}}}],["schemas",{"_index":1125,"title":{},"body":{"index.html":{}}}],["schemaservice",{"_index":382,"title":{"injectables/SchemaService.html":{}},"body":{"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{}}}],["schnell",{"_index":1135,"title":{},"body":{"license.html":{}}}],["second",{"_index":1312,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["see",{"_index":397,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutOptions.html":{},"changelog.html":{},"additional-documentation/introduction.html":{}}}],["seems",{"_index":579,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["select",{"_index":169,"title":{},"body":{"components/ButtonComponent.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{}}}],["selector",{"_index":132,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{}}}],["selectwidgetcomponent",{"_index":168,"title":{"components/SelectWidgetComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"overview.html":{}}}],["selectwidgetmodule",{"_index":334,"title":{"modules/SelectWidgetModule.html":{}},"body":{"modules/FormModule.html":{},"modules/JsonSchemaFormModule.html":{},"modules/SelectWidgetModule.html":{},"modules.html":{},"overview.html":{}}}],["sell",{"_index":1164,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":948,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["sematic",{"_index":1031,"title":{},"body":{"contributing.html":{}}}],["service",{"_index":269,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{}}}],["services",{"_index":757,"title":{},"body":{"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{}}}],["services.github.io/react",{"_index":472,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["services/data",{"_index":202,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/element",{"_index":81,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["services/json",{"_index":434,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["services/layout.service",{"_index":435,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["services/react",{"_index":470,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["services/schema.service",{"_index":436,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["set",{"_index":107,"title":{},"body":{"classes/AbstractWidget.html":{},"injectables/ElementDataStorageService.html":{},"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"additional-documentation/introduction.html":{}}}],["set(element",{"_index":308,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["setlayout",{"_index":760,"title":{},"body":{"injectables/LayoutService.html":{}}}],["setlayout(value",{"_index":762,"title":{},"body":{"injectables/LayoutService.html":{}}}],["sets",{"_index":394,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{}}}],["setschema(value",{"_index":823,"title":{},"body":{"injectables/SchemaService.html":{}}}],["setting",{"_index":747,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["shall",{"_index":1171,"title":{},"body":{"license.html":{}}}],["shown",{"_index":1257,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["side",{"_index":356,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["silly",{"_index":580,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["similar",{"_index":271,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"components/JsonSchemaFormComponent.html":{},"index.html":{}}}],["similarly",{"_index":1337,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["simple",{"_index":1277,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["simplechanges",{"_index":74,"title":{},"body":{"classes/AbstractWidget.html":{},"components/JsonSchemaFormComponent.html":{}}}],["simply",{"_index":1121,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["size",{"_index":1301,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["sm",{"_index":1267,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["small",{"_index":1011,"title":{},"body":{"contributing.html":{}}}],["software",{"_index":1150,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"contributing.html":{}}}],["spaces",{"_index":1022,"title":{},"body":{"contributing.html":{}}}],["special",{"_index":1240,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["specific",{"_index":634,"title":{},"body":{"classes/LayoutNode.html":{},"contributing.html":{}}}],["specifically",{"_index":1243,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["specified",{"_index":618,"title":{},"body":{"interfaces/LayoutItem.html":{},"additional-documentation/introduction.html":{}}}],["specify",{"_index":616,"title":{},"body":{"interfaces/LayoutItem.html":{},"additional-documentation/introduction.html":{}}}],["specifying",{"_index":1285,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["src",{"_index":753,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["standard",{"_index":1259,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["standards",{"_index":1030,"title":{},"body":{"contributing.html":{}}}],["starindex",{"_index":781,"title":{},"body":{"injectables/LayoutService.html":{}}}],["started",{"_index":945,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{}},"body":{}}],["static",{"_index":194,"title":{},"body":{"modules/CoreModule.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{}}}],["still",{"_index":1097,"title":{},"body":{"index.html":{}}}],["storage",{"_index":313,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["storage.service",{"_index":82,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["storage.service.ts",{"_index":268,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["storage.service.ts:21",{"_index":309,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["storage.service.ts:29",{"_index":304,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["storage.service.ts:36",{"_index":307,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["storage.service.ts:41",{"_index":299,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["store",{"_index":275,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["string",{"_index":48,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["strings",{"_index":1294,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["structured",{"_index":360,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["style",{"_index":734,"title":{},"body":{"interfaces/LayoutOptions.html":{},"contributing.html":{},"additional-documentation/introduction.html":{}}}],["styles",{"_index":124,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["styleurls",{"_index":134,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["subject",{"_index":427,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"license.html":{}}}],["sublicense",{"_index":1163,"title":{},"body":{"license.html":{}}}],["submit",{"_index":155,"title":{},"body":{"components/ButtonComponent.html":{},"contributing.html":{},"additional-documentation/introduction.html":{}}}],["submitform",{"_index":384,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["submits",{"_index":500,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["submittal",{"_index":1358,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["submitted",{"_index":450,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"contributing.html":{}}}],["submitting",{"_index":990,"title":{},"body":{"contributing.html":{}}}],["substantial",{"_index":1173,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":1009,"title":{},"body":{"contributing.html":{}}}],["such",{"_index":1308,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["suffice",{"_index":862,"title":{},"body":{"injectables/SchemaService.html":{}}}],["super(jsf",{"_index":156,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["supply",{"_index":1214,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["support",{"_index":1198,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":237,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"additional-documentation/introduction.html":{}}}],["supports",{"_index":262,"title":{},"body":{"injectables/DataEventPluginService.html":{},"additional-documentation/introduction.html":{}}}],["supports(eventname",{"_index":231,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["sure",{"_index":452,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["svg",{"_index":1199,"title":{},"body":{"modules.html":{}}}],["system",{"_index":633,"title":{},"body":{"classes/LayoutNode.html":{}}}],["t",{"_index":219,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["tabindex",{"_index":735,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["tag",{"_index":1271,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["take",{"_index":1087,"title":{},"body":{"index.html":{}}}],["target",{"_index":249,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{}}}],["target.parentelement",{"_index":252,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["tells",{"_index":1242,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["tempalte",{"_index":535,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["template",{"_index":123,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["template.content",{"_index":573,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["template.innerhtml",{"_index":571,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["templatetag",{"_index":586,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["templatetag.content",{"_index":589,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["templatetag.innerhtml",{"_index":587,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["templateurl",{"_index":136,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/introduction.html":{}}}],["test",{"_index":1128,"title":{},"body":{"index.html":{}}}],["text",{"_index":1265,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["text/plain",{"_index":405,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["therefore",{"_index":1304,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["therfore",{"_index":1360,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["this._layout",{"_index":775,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this._schema",{"_index":837,"title":{},"body":{"injectables/SchemaService.html":{}}}],["this.ajv.compile(this.schema",{"_index":870,"title":{},"body":{"injectables/SchemaService.html":{}}}],["this.ajv.removeschema(this.schema",{"_index":868,"title":{},"body":{"injectables/SchemaService.html":{}}}],["this.buildlayout(difference(availablepointers",{"_index":800,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.buildlayout(value",{"_index":776,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.compiler",{"_index":592,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["this.compileschema",{"_index":838,"title":{},"body":{"injectables/SchemaService.html":{}}}],["this.componentfactory.resolvecomponentfactory",{"_index":906,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.control",{"_index":111,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["this.createcomponent",{"_index":897,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.datapointer.split('/').pop",{"_index":710,"title":{},"body":{"classes/LayoutNode.html":{}}}],["this.destroyed$.complete",{"_index":499,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.destroyed$.next",{"_index":498,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.elementdatastorage.get(target",{"_index":253,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["this.elementdatastorage.has(target",{"_index":251,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["this.elementdatastorage.set(this.control.nativeelement",{"_index":112,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["this.forminitialized",{"_index":496,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.generatengcontent",{"_index":908,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.initializeform",{"_index":503,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.initializelayout",{"_index":506,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.initializeschema",{"_index":505,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.jsf.compiletemplate(this.layoutnode.content",{"_index":911,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.jsf.formoptions.disableinvalidsubmit",{"_index":151,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.jsf.initializecontrol(this",{"_index":104,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["this.jsf.updatevalue(this",{"_index":115,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["this.layoutitem",{"_index":691,"title":{},"body":{"classes/LayoutNode.html":{}}}],["this.layoutitem.content",{"_index":716,"title":{},"body":{"classes/LayoutNode.html":{}}}],["this.layoutitem.name",{"_index":709,"title":{},"body":{"classes/LayoutNode.html":{}}}],["this.layoutitem.type",{"_index":713,"title":{},"body":{"classes/LayoutNode.html":{}}}],["this.layoutnode",{"_index":903,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.layoutnode.content",{"_index":910,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.layoutnode.layoutdefinition",{"_index":113,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["this.layoutnode.options",{"_index":106,"title":{},"body":{"classes/AbstractWidget.html":{},"components/SelectWidgetComponent.html":{}}}],["this.layoutnode.type",{"_index":904,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.layoutservice.setlayout(clonedeep(this.layout",{"_index":508,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.manager.getzone",{"_index":245,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["this.moduleref",{"_index":597,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["this.newcomponent",{"_index":898,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.newcomponent.instance[input",{"_index":899,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.options",{"_index":105,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["this.schema",{"_index":692,"title":{},"body":{"classes/LayoutNode.html":{}}}],["this.schemaservice",{"_index":789,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.schemaservice.datapointermap",{"_index":779,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.schemaservice.migrate(this.schema",{"_index":512,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.schemaservice.schema",{"_index":511,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.storage.delete(element",{"_index":328,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["this.storage.get(element",{"_index":316,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["this.storage.get(element).get(key",{"_index":321,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["this.storage.get(element).has(key",{"_index":323,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["this.storage.has(element",{"_index":320,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["this.storage.set(element",{"_index":317,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["this.updatecomponent",{"_index":894,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.updatedata",{"_index":100,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["this.updateform",{"_index":494,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.validator",{"_index":869,"title":{},"body":{"injectables/SchemaService.html":{}}}],["this.validator(data",{"_index":866,"title":{},"body":{"injectables/SchemaService.html":{}}}],["this.widgetcontainer.createcomponent",{"_index":905,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.widgetlibraryservice.getwidget(this.layoutnode.type",{"_index":907,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.x",{"_index":585,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["this[input",{"_index":900,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["throw",{"_index":685,"title":{},"body":{"classes/LayoutNode.html":{}}}],["throws",{"_index":684,"title":{},"body":{"classes/LayoutNode.html":{}}}],["thus",{"_index":284,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"contributing.html":{}}}],["time",{"_index":444,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{}}}],["title",{"_index":718,"title":{},"body":{"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["todo",{"_index":149,"title":{},"body":{"components/ButtonComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{}}}],["tort",{"_index":1193,"title":{},"body":{"license.html":{}}}],["trackbyfn",{"_index":385,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["trackbyfn(index",{"_index":424,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["translates",{"_index":1238,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["transpile",{"_index":1293,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["traverse",{"_index":371,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{},"dependencies.html":{}}}],["traverse(this.schema",{"_index":839,"title":{},"body":{"injectables/SchemaService.html":{}}}],["traverse]{@link",{"_index":482,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["tree",{"_index":126,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["trigger",{"_index":1333,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["triggered",{"_index":1339,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["true",{"_index":206,"title":{},"body":{"modules/CoreModule.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/SchemaService.html":{},"additional-documentation/introduction.html":{}}}],["try",{"_index":787,"title":{},"body":{"injectables/LayoutService.html":{},"contributing.html":{}}}],["tslib",{"_index":1073,"title":{},"body":{"dependencies.html":{}}}],["tslint",{"_index":1025,"title":{},"body":{"contributing.html":{}}}],["tslint:disable",{"_index":556,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["type",{"_index":38,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["typealiases",{"_index":1206,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":933,"title":{},"body":{"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":152,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"classes/LayoutNode.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["types.foreach((type",{"_index":934,"title":{},"body":{"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{}}}],["types/ace",{"_index":1054,"title":{},"body":{"dependencies.html":{}}}],["types/json",{"_index":1056,"title":{},"body":{"dependencies.html":{}}}],["types/lodash",{"_index":1058,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":769,"title":{},"body":{"injectables/LayoutService.html":{}}}],["unacceptable",{"_index":983,"title":{},"body":{"contributing.html":{}}}],["undeclared",{"_index":612,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["undefined",{"_index":322,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"components/SelectWidgetComponent.html":{}}}],["under",{"_index":1033,"title":{},"body":{"contributing.html":{}}}],["underlying",{"_index":86,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["unique",{"_index":649,"title":{},"body":{"classes/LayoutNode.html":{}}}],["uniqueid",{"_index":677,"title":{},"body":{"classes/LayoutNode.html":{}}}],["uniqueid('control",{"_index":648,"title":{},"body":{"classes/LayoutNode.html":{}}}],["unknownformats",{"_index":848,"title":{},"body":{"injectables/SchemaService.html":{}}}],["unnecessary",{"_index":583,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["unsubscribe",{"_index":489,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["up",{"_index":694,"title":{},"body":{"classes/LayoutNode.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["update",{"_index":59,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{}}}],["updatecomponent",{"_index":896,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["updated",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["updatedata",{"_index":110,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["updateform",{"_index":502,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["updatevalue",{"_index":23,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{}}}],["updatevalue(ctx",{"_index":546,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["updatevalue(event",{"_index":56,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["uphold",{"_index":981,"title":{},"body":{"contributing.html":{}}}],["upon",{"_index":491,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{}}}],["urlencoded",{"_index":403,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["us/docs/web/html/element/form#attributes",{"_index":399,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["us/docs/web/html/element/input#dirname",{"_index":738,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/element/input#disabled",{"_index":739,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/element/input#readonly",{"_index":741,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/element/input/image#alt",{"_index":748,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/element/input/image#height",{"_index":750,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/element/input/image#src",{"_index":752,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/element/input/image#width",{"_index":754,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/global_attributes/accesskey",{"_index":737,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/global_attributes/class",{"_index":740,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/global_attributes/style",{"_index":742,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/global_attributes/tabindex",{"_index":744,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/global_attributes/title",{"_index":745,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["use",{"_index":283,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"contributing.html":{},"index.html":{},"license.html":{},"additional-documentation/introduction.html":{}}}],["useclass",{"_index":208,"title":{},"body":{"modules/CoreModule.html":{}}}],["used",{"_index":221,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"injectables/SchemaService.html":{},"additional-documentation/introduction.html":{}}}],["useful",{"_index":1246,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["user",{"_index":438,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{}}}],["uses",{"_index":1028,"title":{},"body":{"contributing.html":{}}}],["using",{"_index":89,"title":{},"body":{"classes/AbstractWidget.html":{},"components/JsonSchemaFormComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["usually",{"_index":1347,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["utility",{"_index":367,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["valdiated",{"_index":820,"title":{},"body":{"injectables/SchemaService.html":{}}}],["valid",{"_index":455,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["validate",{"_index":417,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{}}}],["validate(data",{"_index":817,"title":{},"body":{"injectables/SchemaService.html":{}}}],["validates",{"_index":437,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{}}}],["validating",{"_index":447,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{}}}],["validation",{"_index":825,"title":{},"body":{"injectables/SchemaService.html":{}}}],["validator",{"_index":370,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{}}}],["validators",{"_index":440,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["value",{"_index":42,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":161,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["variable",{"_index":638,"title":{},"body":{"classes/LayoutNode.html":{}}}],["variables",{"_index":1209,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1279,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["via",{"_index":289,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"contributing.html":{},"additional-documentation/introduction.html":{}}}],["viewchild",{"_index":75,"title":{},"body":{"classes/AbstractWidget.html":{},"components/SelectWidgetComponent.html":{}}}],["viewchild('control",{"_index":90,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["viewchild('widgetcontainer",{"_index":888,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["viewcontainerref",{"_index":887,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["void",{"_index":62,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["warranties",{"_index":1179,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1175,"title":{},"body":{"license.html":{}}}],["weakmap",{"_index":290,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["whether",{"_index":1191,"title":{},"body":{"license.html":{}}}],["widget",{"_index":54,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"components/SelectWidgetComponent.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["widget(args",{"_index":1081,"title":{},"body":{"miscellaneous/functions.html":{}}}],["widget.component",{"_index":916,"title":{},"body":{"modules/SelectWidgetModule.html":{}}}],["widget.component.css",{"_index":876,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["widget.component.html",{"_index":877,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["widget.component.ts",{"_index":872,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["widget.component.ts:25",{"_index":882,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["widget.module",{"_index":337,"title":{},"body":{"modules/FormModule.html":{},"modules/JsonSchemaFormModule.html":{}}}],["widget.module.ts",{"_index":915,"title":{},"body":{"modules/SelectWidgetModule.html":{}}}],["widget/select",{"_index":336,"title":{},"body":{"modules/FormModule.html":{},"modules/JsonSchemaFormModule.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{}}}],["widget/widget",{"_index":929,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["widgetcontainer",{"_index":878,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["widgetdecorator",{"_index":917,"title":{"interfaces/WidgetDecorator.html":{}},"body":{"interfaces/WidgetDecorator.html":{}}}],["widgetlibraryservice",{"_index":881,"title":{"injectables/WidgetLibraryService.html":{}},"body":{"components/SelectWidgetComponent.html":{},"injectables/WidgetLibraryService.html":{}}}],["widgets",{"_index":576,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["widgets.get(this.defaultwidget",{"_index":943,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["widgets.get(type",{"_index":942,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["widgets.has(type",{"_index":935,"title":{},"body":{"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{}}}],["widgets.set(type",{"_index":940,"title":{},"body":{"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{}}}],["width",{"_index":755,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["window.open('http://www.google.com",{"_index":1319,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["wire",{"_index":1236,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["wish",{"_index":956,"title":{},"body":{"contributing.html":{}}}],["within",{"_index":1216,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["without",{"_index":1154,"title":{},"body":{"license.html":{}}}],["wont",{"_index":1356,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["work",{"_index":635,"title":{},"body":{"classes/LayoutNode.html":{},"contributing.html":{}}}],["working",{"_index":805,"title":{},"body":{"interfaces/SchemaAnalyzer.html":{}}}],["works",{"_index":277,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["wrap",{"_index":1017,"title":{},"body":{"contributing.html":{}}}],["wrapper",{"_index":216,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"miscellaneous/typealiases.html":{}}}],["www",{"_index":402,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["x",{"_index":559,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["years",{"_index":1224,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["yes",{"_index":647,"title":{},"body":{"classes/LayoutNode.html":{}}}],["yourself",{"_index":1351,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["z]+/.test(eventname",{"_index":235,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["z]+\\.data\\.[a",{"_index":233,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["za",{"_index":234,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["zero",{"_index":1227,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["zone",{"_index":244,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["zone.js",{"_index":1075,"title":{},"body":{"dependencies.html":{}}}],["zone.runguarded",{"_index":255,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["zone.runoutsideangular",{"_index":257,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["zoom",{"_index":183,"title":{},"body":{"modules/ButtonModule.html":{},"modules/FormModule.html":{},"modules/HiddenModule.html":{},"modules/JsonSchemaFormModule.html":{},"modules/SelectWidgetModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractWidget.html":{"url":"classes/AbstractWidget.html","title":"class - AbstractWidget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractWidget\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/core/widget/widget.ts\n        \n\n            \n                Description\n            \n            \n                AbstractWidget \n\n            \n\n\n            \n                Implements\n            \n            \n                            OnChanges\n                            OnInit\n                            AfterViewInit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                controlDisabled\n                            \n                            \n                                controlName\n                            \n                            \n                                controlValue\n                            \n                            \n                                formControl\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataIndex\n                            \n                            \n                                layoutIndex\n                            \n                            \n                                layoutNode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jsf: JsonSchemaFormService, elementDataStorage: ElementDataStorageService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/core/widget/widget.ts:30\n                            \n                        \n\n                \n                    \n                            constructor \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jsf\n                                                  \n                                                        \n                                                                        JsonSchemaFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementDataStorage\n                                                  \n                                                        \n                                                                        ElementDataStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/widget/widget.ts:12\n                            \n                        \n\n                \n                    \n                        Flag to disable the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/widget/widget.ts:14\n                            \n                        \n\n                \n                    \n                        Name for the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/widget/widget.ts:16\n                            \n                        \n\n                \n                    \n                        Value of the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AbstractControl\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/widget/widget.ts:18\n                            \n                        \n\n                \n                    \n                        Associated FormControl for widget \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/widget/widget.ts:20\n                            \n                        \n\n                \n                    \n                        Options for the control \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/core/widget/widget.ts:65\n                \n            \n\n\n            \n                \n                    Update the value of the control\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nChange event\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataIndex\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/widget/widget.ts:27\n                            \n                        \n                \n                    \n                        Index of the data in data array \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutIndex\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/widget/widget.ts:25\n                            \n                        \n                \n                    \n                        Index of the layout in the Layout array \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutNode\n                    \n                \n                \n                    \n                        Type :         LayoutNode\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/widget/widget.ts:23\n                            \n                        \n                \n                    \n                        Layout Node describing the control \n\n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { AfterViewInit, ElementRef, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../form/services/json-schema-form.service';\n\nimport { LayoutNode } from '../models/layout-node';\nimport { ElementDataStorageService } from '../services/element-data-storage.service';\n\n/** AbstractWidget */\nexport abstract class AbstractWidget implements OnChanges, OnInit, AfterViewInit {\n    /** Flag to disable the control */\n    controlDisabled = false;\n    /** Name for the control */\n    controlName: string;\n    /** Value of the control */\n    controlValue: any;\n    /** Associated FormControl for widget */\n    formControl: AbstractControl;\n    /** Options for the control */\n    options: any;\n\n    /** Layout Node describing the control */\n    @Input() layoutNode: LayoutNode;\n    /** Index of the layout in the Layout array */\n    @Input() layoutIndex: Array;\n    /** Index of the data in data array */\n    @Input() dataIndex: Array;\n\n    /** Reference to the underlying control. Look to replace using FormControl */\n    @ViewChild('control', {read: ElementRef}) private readonly control: ElementRef;\n\n    /** constructor */\n    constructor(protected jsf: JsonSchemaFormService, protected elementDataStorage: ElementDataStorageService) {}\n\n    /** Propagate layoutNode changes to the ElementDataStorage */\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.layoutNode) {\n            this.updateData();\n        }\n    }\n    /**\n     * Initialize the control and populate the options\n     */\n    ngOnInit() {\n        this.jsf.initializeControl(this);\n        this.options = this.layoutNode.options;\n    }\n\n    /** Set the initial layout in the ElementDataStorage */\n    ngAfterViewInit() {\n        this.updateData();\n    }\n\n    /** Update the ElementDataStorage */\n    private updateData(): void {\n        if (this.control) {\n            this.elementDataStorage.set(this.control.nativeElement, 'layout', this.layoutNode.layoutDefinition);\n        }\n    }\n\n    /**\n     * Update the value of the control\n     * @param event - Change event\n     */\n    updateValue(event: Event) {\n        this.jsf.updateValue(this, (event.target).value);\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-json-schema-form/src/lib/button/button.component.ts\n\n\n    \n        Description\n    \n    \n        Displays a  control\n\n    \n\n    \n        Extends\n    \n    \n                AbstractWidget\n    \n\n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                jsf-button\n            \n\n            \n                styleUrls\n                ./button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                controlDisabled\n                            \n                            \n                                controlName\n                            \n                            \n                                controlValue\n                            \n                            \n                                formControl\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(jsf: JsonSchemaFormService, elementDataStorage: ElementDataStorageService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/button/button.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jsf\n                                                  \n                                                        \n                                                                        JsonSchemaFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementDataStorage\n                                                  \n                                                        \n                                                                        ElementDataStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(event: Event)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractWidget\n\n                \n            \n            \n                \n                        Defined in         AbstractWidget:65\n\n                \n            \n\n\n            \n                \n                    Update the value of the control\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nChange event\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:12\n\n                            \n                        \n\n                \n                    \n                        Flag to disable the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:14\n\n                            \n                        \n\n                \n                    \n                        Name for the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:16\n\n                            \n                        \n\n                \n                    \n                        Value of the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AbstractControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:18\n\n                            \n                        \n\n                \n                    \n                        Associated FormControl for widget \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:20\n\n                            \n                        \n\n                \n                    \n                        Options for the control \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { Widget } from '../core/decorators/widget.decorator';\nimport { ElementDataStorageService } from '../core/services/element-data-storage.service';\nimport { AbstractWidget } from '../core/widget/widget';\n\nimport { JsonSchemaFormService } from '../form/services/json-schema-form.service';\n\n/**\n * Displays a  control\n * @todo implement this.jsf.formOptions.disableInvalidSubmit\n */\n@Widget({\n    types: ['button', 'image', 'reset', 'submit']\n})\n@Component({\n    selector: 'jsf-button',\n    styleUrls: ['./button.component.scss'],\n    templateUrl: './button.component.html'\n})\nexport class ButtonComponent extends AbstractWidget {\n    constructor(jsf: JsonSchemaFormService, elementDataStorage: ElementDataStorageService) {\n        super(jsf, elementDataStorage);\n    }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n\n    \n                \n                    ./button.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'jsf-button'},{'name': 'HiddenComponent', 'selector': 'jsf-hidden'},{'name': 'JsonSchemaFormComponent', 'selector': 'jsf-json-schema-form'},{'name': 'SelectWidgetComponent', 'selector': 'jsf-select-widget'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ButtonModule.html":{"url":"modules/ButtonModule.html","title":"module - ButtonModule","body":"\n                   \n\n\n\n\n    Modules\n    ButtonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ButtonModule\n\n\n\ncluster_ButtonModule_declarations\n\n\n\ncluster_ButtonModule_exports\n\n\n\n\nButtonComponent\n\nButtonComponent\n\n\n\nButtonModule\n\nButtonModule\n\nButtonModule -->\n\nButtonComponent->ButtonModule\n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nButtonModule->ButtonComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/button/button.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ButtonComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ButtonComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ButtonComponent } from './button.component';\n\n@NgModule({\n    declarations: [ ButtonComponent ],\n    entryComponents: [ ButtonComponent ],\n    exports: [ ButtonComponent ],\n    imports: [ CommonModule ]\n})\nexport class ButtonModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/core/core.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/core/core.module.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { EVENT_MANAGER_PLUGINS } from '@angular/platform-browser';\n\nimport { DataEventPluginService } from './services/data-event-plugin.service';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ]\n})\nexport class CoreModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: CoreModule,\n            providers: [{\n                multi: true,\n                provide: EVENT_MANAGER_PLUGINS,\n                useClass: DataEventPluginService\n            }]\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Data.html":{"url":"interfaces/Data.html","title":"interface - Data","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Data\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/core/services/data-event-plugin.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data associated with an HTML Element \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { EventManager } from '@angular/platform-browser';\n\nimport { ElementDataStorageService } from './element-data-storage.service';\n\nexport interface Data {\n    /** Data associated with an HTML Element */\n    data: any;\n}\n/** Event wrapper for piggybacking data on an event */\nexport type DataEvent = Data & T;\n\n/**\n * Plugin used to return data, associated with an element, in the event.  Data must first be\n * \"associated\" with an element by means of the ElementDataStorageService.  If no data is\n * present, then the event handler will not be fired.\n */\n@Injectable()\nexport class DataEventPluginService {\n    /** Event manager used to get the ngZone */\n    manager: EventManager;\n\n    constructor(private readonly elementDataStorage: ElementDataStorageService) {}\n\n    /** Determine if the plugin should be applied to an event */\n    supports(eventName: string): boolean {\n        return  /[a-z]+\\.data\\.[a-zA-Z]+/.test(eventName);\n    }\n\n    /** Adds a supported event listener to a dom node */\n    addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n        const zone: NgZone = this.manager.getZone();\n        const [type, , dataName] = eventName.split('.');\n        const eventHandler = (event: DataEvent): void => {\n            let target: HTMLElement = event.target as HTMLElement;\n            while (target && !this.elementDataStorage.has(target, dataName)) {\n                target = target.parentElement;\n            }\n\n            if (target) {\n                const data = this.elementDataStorage.get(target, dataName);\n                event.data = data;\n\n                zone.runGuarded(() => {\n                    handler(event);\n                });\n            }\n        };\n\n        zone.runOutsideAngular(() => {\n            element.addEventListener(type, eventHandler, false);\n        });\n\n        return () => {\n            element.removeEventListener(type, eventHandler, false);\n        };\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataEventPluginService.html":{"url":"injectables/DataEventPluginService.html","title":"injectable - DataEventPluginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataEventPluginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/core/services/data-event-plugin.service.ts\n        \n\n            \n                Description\n            \n            \n                Plugin used to return data, associated with an element, in the event.  Data must first be\n\"associated\" with an element by means of the ElementDataStorageService.  If no data is\npresent, then the event handler will not be fired.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                manager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEventListener\n                            \n                            \n                                supports\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementDataStorage: ElementDataStorageService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/core/services/data-event-plugin.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementDataStorage\n                                                  \n                                                        \n                                                                        ElementDataStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addEventListener\n                        \n                        \n                    \n                \n            \n            \n                \naddEventListener(element: HTMLElement, eventName: string, handler: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/core/services/data-event-plugin.service.ts:31\n                \n            \n\n\n            \n                \n                    Adds a supported event listener to a dom node \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handler\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            supports\n                        \n                        \n                    \n                \n            \n            \n                \nsupports(eventName: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/core/services/data-event-plugin.service.ts:26\n                \n            \n\n\n            \n                \n                    Determine if the plugin should be applied to an event \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventManager\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/services/data-event-plugin.service.ts:21\n                            \n                        \n\n                \n                    \n                        Event manager used to get the ngZone \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { EventManager } from '@angular/platform-browser';\n\nimport { ElementDataStorageService } from './element-data-storage.service';\n\nexport interface Data {\n    /** Data associated with an HTML Element */\n    data: any;\n}\n/** Event wrapper for piggybacking data on an event */\nexport type DataEvent = Data & T;\n\n/**\n * Plugin used to return data, associated with an element, in the event.  Data must first be\n * \"associated\" with an element by means of the ElementDataStorageService.  If no data is\n * present, then the event handler will not be fired.\n */\n@Injectable()\nexport class DataEventPluginService {\n    /** Event manager used to get the ngZone */\n    manager: EventManager;\n\n    constructor(private readonly elementDataStorage: ElementDataStorageService) {}\n\n    /** Determine if the plugin should be applied to an event */\n    supports(eventName: string): boolean {\n        return  /[a-z]+\\.data\\.[a-zA-Z]+/.test(eventName);\n    }\n\n    /** Adds a supported event listener to a dom node */\n    addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n        const zone: NgZone = this.manager.getZone();\n        const [type, , dataName] = eventName.split('.');\n        const eventHandler = (event: DataEvent): void => {\n            let target: HTMLElement = event.target as HTMLElement;\n            while (target && !this.elementDataStorage.has(target, dataName)) {\n                target = target.parentElement;\n            }\n\n            if (target) {\n                const data = this.elementDataStorage.get(target, dataName);\n                event.data = data;\n\n                zone.runGuarded(() => {\n                    handler(event);\n                });\n            }\n        };\n\n        zone.runOutsideAngular(() => {\n            element.addEventListener(type, eventHandler, false);\n        });\n\n        return () => {\n            element.removeEventListener(type, eventHandler, false);\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ElementDataStorageService.html":{"url":"injectables/ElementDataStorageService.html","title":"injectable - ElementDataStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ElementDataStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/core/services/element-data-storage.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to map data to an DOM element similar to jQuery $.data\nWhile HTML provides its data-* attributes to store data on the node\nitself, this only works for primitive data.  Objects and arrays would need\nto be converted to json for then to use data-* and thus would not\nbe able to contain non-json types like Function.  This service allows\nfor referencing data to a HTML element via a WeakMap so that when the element\nis removed from the DOM, the garbage collector can automatically remove the\nreference in the Service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                has\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(element: HTMLElement, key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/core/services/element-data-storage.service.ts:41\n                \n            \n\n\n            \n                \n                    Remove a key/value pairing from map referenced by element \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(element: HTMLElement, key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/core/services/element-data-storage.service.ts:29\n                \n            \n\n\n            \n                \n                    Return a key's value for an element \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            has\n                        \n                        \n                    \n                \n            \n            \n                \nhas(element: HTMLElement, key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/core/services/element-data-storage.service.ts:36\n                \n            \n\n\n            \n                \n                    Determine if an element has a key/value pairing referenced \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset(element: HTMLElement, key: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/core/services/element-data-storage.service.ts:21\n                \n            \n\n\n            \n                \n                    Add key/value pairing to map referenced by element \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ElementDataStorageService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Service to map data to an DOM element similar to jQuery $.data\n * While HTML provides its data-* attributes to store data on the node\n * itself, this only works for primitive data.  Objects and arrays would need\n * to be converted to json for then to use data-* and thus would not\n * be able to contain non-json types like Function.  This service allows\n * for referencing data to a HTML element via a WeakMap so that when the element\n * is removed from the DOM, the garbage collector can automatically remove the\n * reference in the Service.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ElementDataStorageService {\n    /** Map to reference data to an element */\n    private readonly storage: WeakMap> = new WeakMap>();\n\n    /** Add key/value pairing to map referenced by element */\n    set(element: HTMLElement, key: string, value: any): ElementDataStorageService {\n        const mappedData = this.storage.get(element) || this.storage.set(element, new Map()).get(element);\n        mappedData.set(key, value);\n\n        return this;\n    }\n\n    /** Return a key's value for an element */\n    get(element: HTMLElement, key: string): any {\n        return this.storage.has(element)\n            ? this.storage.get(element).get(key)\n            : undefined;\n    }\n\n    /** Determine if an element has a key/value pairing referenced */\n    has(element: HTMLElement, key: string): boolean {\n        return this.storage.has(element) && this.storage.get(element).has(key);\n    }\n\n    /** Remove a key/value pairing from map referenced by element */\n    delete(element: HTMLElement, key: string): boolean {\n        let deleted = this.storage.has(element);\n        if (deleted) {\n            const mappedData = this.storage.get(element);\n            deleted = mappedData.delete(key);\n            if (mappedData.size === 0) {\n                this.storage.delete(element);\n            }\n        }\n\n        return deleted;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormModule.html":{"url":"modules/FormModule.html","title":"module - FormModule","body":"\n                   \n\n\n\n\n    Modules\n    FormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_imports\n\n\n\ncluster_FormModule_exports\n\n\n\n\nJsonSchemaFormComponent\n\nJsonSchemaFormComponent\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nJsonSchemaFormComponent->FormModule\n\n\n\n\n\nJsonSchemaFormComponent \n\nJsonSchemaFormComponent \n\nJsonSchemaFormComponent  -->\n\nFormModule->JsonSchemaFormComponent \n\n\n\n\n\nSelectWidgetModule\n\nSelectWidgetModule\n\nFormModule -->\n\nSelectWidgetModule->FormModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/form/form.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            JsonSchemaFormComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SelectWidgetModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JsonSchemaFormComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { SelectWidgetModule } from '../select-widget/select-widget.module';\nimport { JsonSchemaFormComponent } from './json-schema-form.component';\n\n@NgModule({\n    declarations: [ JsonSchemaFormComponent ],\n    exports: [ JsonSchemaFormComponent ],\n    imports: [\n        CommonModule, SelectWidgetModule\n    ]\n})\nexport class FormModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HiddenComponent.html":{"url":"components/HiddenComponent.html","title":"component - HiddenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HiddenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-json-schema-form/src/lib/hidden/hidden.component.ts\n\n\n    \n        Description\n    \n    \n        Displays an input[type='hidden']\n\n    \n\n    \n        Extends\n    \n    \n                AbstractWidget\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                jsf-hidden\n            \n\n            \n                styleUrls\n                ./hidden.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./hidden.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                controlDisabled\n                            \n                            \n                                controlName\n                            \n                            \n                                controlValue\n                            \n                            \n                                formControl\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(jsf: JsonSchemaFormService, elementDataStorage: ElementDataStorageService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/hidden/hidden.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jsf\n                                                  \n                                                        \n                                                                        JsonSchemaFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementDataStorage\n                                                  \n                                                        \n                                                                        ElementDataStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(event: Event)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractWidget\n\n                \n            \n            \n                \n                        Defined in         AbstractWidget:65\n\n                \n            \n\n\n            \n                \n                    Update the value of the control\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nChange event\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:12\n\n                            \n                        \n\n                \n                    \n                        Flag to disable the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:14\n\n                            \n                        \n\n                \n                    \n                        Name for the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:16\n\n                            \n                        \n\n                \n                    \n                        Value of the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AbstractControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:18\n\n                            \n                        \n\n                \n                    \n                        Associated FormControl for widget \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:20\n\n                            \n                        \n\n                \n                    \n                        Options for the control \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { Widget } from '../core/decorators/widget.decorator';\nimport { ElementDataStorageService } from '../core/services/element-data-storage.service';\nimport { AbstractWidget } from '../core/widget/widget';\n\nimport { JsonSchemaFormService } from '../form/services/json-schema-form.service';\n\n/**\n * Displays an input[type='hidden']\n */\n@Widget({\n    types: ['hidden']\n})\n@Component({\n    selector: 'jsf-hidden',\n    styleUrls: ['./hidden.component.scss'],\n    templateUrl: './hidden.component.html'\n})\nexport class HiddenComponent extends AbstractWidget {\n    constructor(jsf: JsonSchemaFormService, elementDataStorage: ElementDataStorageService) {\n        super(jsf, elementDataStorage);\n    }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./hidden.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'jsf-button'},{'name': 'HiddenComponent', 'selector': 'jsf-hidden'},{'name': 'JsonSchemaFormComponent', 'selector': 'jsf-json-schema-form'},{'name': 'SelectWidgetComponent', 'selector': 'jsf-select-widget'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HiddenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HiddenModule.html":{"url":"modules/HiddenModule.html","title":"module - HiddenModule","body":"\n                   \n\n\n\n\n    Modules\n    HiddenModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HiddenModule\n\n\n\ncluster_HiddenModule_declarations\n\n\n\ncluster_HiddenModule_exports\n\n\n\n\nHiddenComponent\n\nHiddenComponent\n\n\n\nHiddenModule\n\nHiddenModule\n\nHiddenModule -->\n\nHiddenComponent->HiddenModule\n\n\n\n\n\nHiddenComponent \n\nHiddenComponent \n\nHiddenComponent  -->\n\nHiddenModule->HiddenComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/hidden/hidden.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HiddenComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            HiddenComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HiddenComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { HiddenComponent } from './hidden.component';\n\n@NgModule({\n    declarations: [ HiddenComponent ],\n    entryComponents: [ HiddenComponent ],\n    exports: [ HiddenComponent ],\n    imports: [ CommonModule ]\n})\nexport class HiddenModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/JsonSchemaFormComponent.html":{"url":"components/JsonSchemaFormComponent.html","title":"component - JsonSchemaFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  JsonSchemaFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-json-schema-form/src/lib/form/json-schema-form.component.ts\n\n\n    \n        Description\n    \n    \n        NGX JSON Schema Form\nRoot module of the NGX JSON Schema Form client-side library,\nan Angular library which generates an HTML form from a JSON schema\nstructured data model and/or a JSON Schema Form layout description.\nThis library depends on:\n\nAngular (obviously)\nlodash, JavaScript utility library\najv, Another JSON Schema validator\njson-schema-traverse, JSON Schema Traverse\n\nIn addition, the Example Playground also depends on:\n\nbrace, Browserified Ace editor\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnChanges\n                    OnDestroy\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                JsonSchemaFormService\n                                LayoutService\n                                SchemaService\n                \n            \n\n\n            \n                selector\n                jsf-json-schema-form\n            \n\n\n\n\n            \n                templateUrl\n                ./json-schema-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submitForm\n                            \n                            \n                                trackByFn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                autocomplete\n                            \n                            \n                                enctype\n                            \n                            \n                                layout\n                            \n                            \n                                method\n                            \n                            \n                                schema\n                            \n                            \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(schemaService: SchemaService, layoutService: LayoutService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/form/json-schema-form.component.ts:95\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        schemaService\n                                                  \n                                                        \n                                                                        SchemaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        action\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/form/json-schema-form.component.ts:71\n                            \n                        \n                \n                    \n                        Sets the action attribute of the internal form\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\" | null\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/form/json-schema-form.component.ts:76\n                            \n                        \n                \n                    \n                        Sets the autocomplete attribute of the internal form\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enctype\n                    \n                \n                \n                    \n                        Type :     \"application/x-www-form-urlencoded\" | \"multipart/form-data\" | \"text/plain\" | null\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/form/json-schema-form.component.ts:81\n                            \n                        \n                \n                    \n                        Sets the enctype attribute of the internal form\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layout\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/form/json-schema-form.component.ts:66\n                            \n                        \n                \n                    \n                        Layout used to define how the form is rendered \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        method\n                    \n                \n                \n                    \n                        Type :     \"get\" | \"post\" | \"dialog\" | null\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/form/json-schema-form.component.ts:86\n                            \n                        \n                \n                    \n                        Sets the method attribute of the internal form\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schema\n                    \n                \n                \n                    \n                        Type :     JSONSchema7 | JSONSchema6 | JSONSchema4\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/form/json-schema-form.component.ts:64\n                            \n                        \n                \n                    \n                        JSON Schema used to validate form data \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        target\n                    \n                \n                \n                    \n                        Type :     \"_self\" | \"_blank\" | \"_parent\" | \"_top\" | string | null\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/form/json-schema-form.component.ts:91\n                            \n                        \n                \n                    \n                        Sets the target attribute of the internal form\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitForm\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/form/json-schema-form.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trackByFn\n                        \n                        \n                    \n                \n            \n            \n                \ntrackByFn(index)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/form/json-schema-form.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n    ChangeDetectionStrategy, Component, Input,\n    OnChanges, OnDestroy, OnInit, SimpleChanges\n} from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\nimport { cloneDeep, isPlainObject } from 'lodash';\n\nimport { JSONSchema4, JSONSchema6, JSONSchema7 } from 'json-schema';\n\nimport { LayoutItem } from '../core/interfaces/layout-item.data';\n\nimport { JsonSchemaFormService } from './services/json-schema-form.service';\nimport { LayoutService } from './services/layout.service';\nimport { SchemaService } from './services/schema.service';\n\n// * This library also validates input data by the user, using both validators on\n// * individual controls to provide real-time feedback while the user is filling\n// * out the form, and then validating the entire input against the schema when\n// * the form is submitted to make sure the returned JSON data object is valid.\n// *\n// * This library is similar to, and mostly API compatible with:\n// *\n// * - JSON Schema Form's [Angular Schema Form]{@link http://schemaform.io} library for AngularJs\n// *   [(examples)]{@link http://schemaform.io/examples/bootstrap-example.html}\n// *\n// * - Mozilla's [react-jsonschema-form]{@link https://github.com/mozilla-services/react-jsonschema-form} library for React\n// *   [(examples)]{@link https://mozilla-services.github.io/react-jsonschema-form}\n// *\n// * - Joshfire's [JSON Form]{@link https://github.com/joshfire/jsonform} library for jQuery\n// *   [(examples)]{@link http://ulion.github.io/jsonform/playground}\n/**\n * NGX JSON Schema Form\n *\n * Root module of the NGX JSON Schema Form client-side library,\n * an Angular library which generates an HTML form from a JSON schema\n * structured data model and/or a JSON Schema Form layout description.\n *\n * This library depends on:\n *\n * - [Angular]{@link https://angular.io} (obviously)\n * - [lodash]{@link https://github.com/lodash/lodash}, JavaScript utility library\n * - [ajv]{@link https://github.com/epoberezkin/ajv}, Another JSON Schema validator\n * - [json-schema-traverse]{@link https://github.com/epoberezkin/json-schema-traverse}, JSON Schema Traverse\n *\n * In addition, the Example Playground also depends on:\n *\n * - [brace]{@link http://thlorenz.github.io/brace}, Browserified Ace editor\n */\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        JsonSchemaFormService,\n        LayoutService,\n        SchemaService\n    ],\n    selector: 'jsf-json-schema-form',\n    styles: [],\n    templateUrl: './json-schema-form.component.html'\n})\nexport class JsonSchemaFormComponent implements OnChanges, OnDestroy, OnInit {\n    /** JSON Schema used to validate form data */\n    @Input() schema: JSONSchema7 | JSONSchema6 | JSONSchema4;\n    /** Layout used to define how the form is rendered */\n    @Input() layout: Array;\n    /**\n     * Sets the action attribute of the internal form\n     * See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes}\n     */\n    @Input() action: string | null;\n    /**\n     * Sets the autocomplete attribute of the internal form\n     * See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes}\n     */\n    @Input() autocomplete: 'on' | 'off' | null;\n    /**\n     * Sets the enctype attribute of the internal form\n     * See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes}\n     */\n    @Input() enctype: 'application/x-www-form-urlencoded' | 'multipart/form-data' | 'text/plain' | null;\n    /**\n     * Sets the method attribute of the internal form\n     * See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes}\n     */\n    @Input() method: 'get' | 'post' | 'dialog' | null;\n    /**\n     * Sets the target attribute of the internal form\n     * See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes}\n     */\n    @Input() target: '_self' | '_blank' | '_parent' | '_top' | string | null;\n\n    private formInitialized = false;\n    /** Observable to used to unsubscribe listners upon ngDestroy */\n    private readonly destroyed$: Subject = new Subject();\n\n    constructor(\n        // private readonly jsf: JsonSchemaFormService,\n        private readonly schemaService: SchemaService,\n        readonly layoutService: LayoutService\n    ) {}\n\n    ngOnInit() {\n        this.updateForm();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.hasOwnProperty('schema')) {\n            this.formInitialized = false;\n        }\n        this.updateForm();\n    }\n\n    ngOnDestroy() {\n        this.destroyed$.next();\n        this.destroyed$.complete();\n    }\n\n    /**\n     * @todo Implement submitForm method\n     * Submits the form\n     */\n    submitForm(): void {\n        console.warn(this);\n    }\n\n    trackByFn(index) {\n        return index;\n    }\n\n    private updateForm(): void {\n        if (!this.formInitialized) {\n            this.initializeForm();\n        }\n    }\n\n    private initializeForm(): void {\n        this.initializeSchema();\n        this.initializeLayout();\n        this.formInitialized = true;\n    }\n\n    private initializeLayout(): void {\n        this.layoutService.setLayout(cloneDeep(this.layout || ['*']));\n    }\n\n    private initializeSchema(): void {\n        if (isPlainObject(this.schema)) {\n            this.schemaService.schema = this.schemaService.migrate(this.schema);\n        }\n    }\n}\n\n    \n\n    \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'jsf-button'},{'name': 'HiddenComponent', 'selector': 'jsf-hidden'},{'name': 'JsonSchemaFormComponent', 'selector': 'jsf-json-schema-form'},{'name': 'SelectWidgetComponent', 'selector': 'jsf-select-widget'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'JsonSchemaFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JsonSchemaFormModule.html":{"url":"modules/JsonSchemaFormModule.html","title":"module - JsonSchemaFormModule","body":"\n                   \n\n\n\n\n    Modules\n    JsonSchemaFormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JsonSchemaFormModule\n\n\n\ncluster_JsonSchemaFormModule_imports\n\n\n\ncluster_JsonSchemaFormModule_exports\n\n\n\n\nButtonModule\n\nButtonModule\n\n\n\nJsonSchemaFormModule\n\nJsonSchemaFormModule\n\nJsonSchemaFormModule -->\n\nButtonModule->JsonSchemaFormModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nJsonSchemaFormModule -->\n\nCoreModule->JsonSchemaFormModule\n\n\n\n\n\nFormModule\n\nFormModule\n\nJsonSchemaFormModule -->\n\nFormModule->JsonSchemaFormModule\n\n\n\n\n\nHiddenModule\n\nHiddenModule\n\nJsonSchemaFormModule -->\n\nHiddenModule->JsonSchemaFormModule\n\n\n\n\n\nSelectWidgetModule\n\nSelectWidgetModule\n\nJsonSchemaFormModule -->\n\nSelectWidgetModule->JsonSchemaFormModule\n\n\n\n\n\nButtonModule \n\nButtonModule \n\nButtonModule  -->\n\nJsonSchemaFormModule->ButtonModule \n\n\n\n\n\nCoreModule \n\nCoreModule \n\nCoreModule  -->\n\nJsonSchemaFormModule->CoreModule \n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nJsonSchemaFormModule->FormModule \n\n\n\n\n\nHiddenModule \n\nHiddenModule \n\nHiddenModule  -->\n\nJsonSchemaFormModule->HiddenModule \n\n\n\n\n\nSelectWidgetModule \n\nSelectWidgetModule \n\nSelectWidgetModule  -->\n\nJsonSchemaFormModule->SelectWidgetModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/json-schema-form.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ButtonModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            FormModule\n                        \n                        \n                            HiddenModule\n                        \n                        \n                            SelectWidgetModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ButtonModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            FormModule\n                        \n                        \n                            HiddenModule\n                        \n                        \n                            SelectWidgetModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.module.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { ButtonModule } from './button/button.module';\nimport { CoreModule } from './core/core.module';\nimport { FormModule } from './form/form.module';\nimport { HiddenModule } from './hidden/hidden.module';\nimport { SelectWidgetModule } from './select-widget/select-widget.module';\n\n@NgModule({\n    exports: [ ButtonModule, CoreModule, FormModule, HiddenModule, SelectWidgetModule ],\n    imports: [\n        CommonModule,\n        ButtonModule, CoreModule, FormModule, HiddenModule, SelectWidgetModule\n    ]\n})\nexport class JsonSchemaFormModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: JsonSchemaFormModule,\n            providers: [\n                ...CoreModule.forRoot().providers\n            ]\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JsonSchemaFormService.html":{"url":"injectables/JsonSchemaFormService.html","title":"injectable - JsonSchemaFormService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JsonSchemaFormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/form/services/json-schema-form.service.ts\n        \n\n            \n                Description\n            \n            \n                Helper service \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                compileTemplate\n                            \n                            \n                                initializeControl\n                            \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            compileTemplate\n                        \n                        \n                    \n                \n            \n            \n                \ncompileTemplate(template: string, context: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/form/services/json-schema-form.service.ts:65\n                \n            \n\n\n            \n                \n                    Compiles an HTML tempalte and data into a document fragment\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    template\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nHTML template to render\n\n\n                                    \n                                \n                                \n                                    context\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                    \n                                        \noptions to use when rendering the template\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DocumentFragment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeControl\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeControl(control: AbstractWidget, bind)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/form/services/json-schema-form.service.ts:47\n                \n            \n\n\n            \n                \n                    Creates a component with passed in template and associated context \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractWidget\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    bind\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(ctx: any, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/form/services/json-schema-form.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n// import {\n//     Compiler, Component, ComponentRef, Injectable, Injector,\n//     ModuleWithComponentFactories, NgModule, NgModuleRef\n// } from '@angular/core';\n\nimport Handlebars from 'handlebars/dist/cjs/handlebars';\n\nimport { AbstractWidget } from '../../core/widget/widget';\n\n/* tslint:disable: max-classes-per-file */\n/** Helper service */\n@Injectable()\nexport class JsonSchemaFormService {\n    private x = false;\n\n    /** Creates a component with passed in template and associated context */\n    // private static createComponent(template: string, context: {[key: string]: any}): any {\n    //     return Component({\n    //         selector: `runtime-component-sample`,\n    //         template\n    //     })(class RuntimeComponent {\n    //         options: any = context;\n    //     });\n    // }\n\n    /** Create a module for use with the RuntimeComponent */\n    // private static createModule(component: any, compiler: Compiler): ModuleWithComponentFactories {\n    //     @NgModule({ imports: [CommonModule], declarations: [component] })\n    //     class RuntimeComponentModule { }\n\n    //     return compiler.compileModuleAndAllComponentsSync(RuntimeComponentModule);\n    // }\n\n    /** Get a components innerHTML as a document Fragment */\n    // private static getDocumentFragment(componentRef: ComponentRef): DocumentFragment {\n    //     const template = document.createElement('template');\n    //     template.innerHTML = (componentRef.location.nativeElement).innerHTML;\n\n    //     return template.content;\n    // }\n\n    // constructor(private readonly compiler: Compiler,private readonly injector: Injector, private readonly moduleRef: NgModuleRef) {}\n\n    /** Sets a widgets properties upon widget creation */\n    initializeControl(control: AbstractWidget, bind = true): void {\n        // Do we even need to do this?  seems silly\n        control.controlName = control.layoutNode.name;\n    }\n\n    /**\n     * @todo Implement updateValue or remove if unnecessary\n     * Manually update value\n     */\n    updateValue(ctx: any, value: any): void {\n        this.x = !this.x;\n    }\n\n    /**\n     * Compiles an HTML tempalte and data into a document fragment\n     * @param template - HTML template to render\n     * @param context - options to use when rendering the template\n     */\n    compileTemplate(template: string, context: {[key: string]: any} = {}): DocumentFragment {\n        const templateTag = document.createElement('template');\n        templateTag.innerHTML = Handlebars.compile(template)({options: context});\n\n        return templateTag.content;\n    }\n\n    // /**\n    //  * Compiles an HTML tempalte and data into a document fragment\n    //  * @param template - HTML template to render\n    //  * @param context - options to use when rendering the template\n    //  */\n    // compileTemplate(template: string, context: {[key: string]: any} = {}): DocumentFragment {\n    //     const component: any = JsonSchemaFormService.createComponent(template, context);\n    //     const module = JsonSchemaFormService.createModule(component, this.compiler);\n    //     const factory = module.componentFactories.find((f) => f.componentType === component);\n    //     const componentRef: ComponentRef = factory.create(this.injector, undefined, undefined, this.moduleRef);\n\n    //     componentRef.hostView.detectChanges();\n    //     const fragment = JsonSchemaFormService.getDocumentFragment(componentRef);\n    //     componentRef.destroy();\n\n    //     return fragment;\n    // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LayoutItem.html":{"url":"interfaces/LayoutItem.html","title":"interface - LayoutItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LayoutItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/core/interfaces/layout-item.data.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        key\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        options\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [others: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/core/interfaces/layout-item.data.ts:18\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Object path to map this item to a data value \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name for the item.  Will be used as the input[name] \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:         LayoutOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LayoutOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Container for options to set on widgets.\nNOTE: this is optional as any undeclared property will automatically be put into an options contianer\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Specify what type of widget is used to represent the data.\nIf not is specified, the JSON Schema will be used to determine the most appropriate widget\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { LayoutOptions } from './layout-options.data';\n\n/**  */\nexport interface LayoutItem {\n    /** Object path to map this item to a data value */\n    key?: string;\n    /** Name for the item.  Will be used as the input[name] */\n    name?: string;\n    /**\n     * Container for options to set on widgets.\n     * NOTE: this is optional as any undeclared property will automatically be put into an options contianer\n     */\n    options?: LayoutOptions;\n    /**\n     * Specify what type of widget is used to represent the data.\n     * If not is specified, the JSON Schema will be used to determine the most appropriate widget\n     */\n    type?: string;\n\n    [others: string]: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LayoutNode.html":{"url":"classes/LayoutNode.html","title":"class - LayoutNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LayoutNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/core/models/layout-node.ts\n        \n\n            \n                Description\n            \n            \n                The LayoutNode contains the logic to parse a LayoutItem along with its Schema.\nA LayoutNode acts, to some degree, as a proxy of the LayoutItem, augmenting data\nas needed. This gives the system a specific api to work with while allowing the\nuser to pass in variable data, so a degree.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    layoutDefinition\n                                \n                                \n                                    name\n                                \n                                \n                                    dataPointer\n                                \n                                \n                                    type\n                                \n                                \n                                    content\n                                \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutItem: LayoutItem, schema?: JSONSchema7)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/core/models/layout-node.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        layoutItem\n                                                  \n                                                        \n                                                                        LayoutItem\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                    JSONSchema7\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : uniqueId('control')\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/models/layout-node.ts:22\n                            \n                        \n\n                \n                    \n                        Unique Identifier for the item \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(layoutItem: LayoutItem | string, schemaAnalyzer: SchemaAnalyzer)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/core/models/layout-node.ts:40\n                \n            \n\n\n            \n                \n                    Creates a LayoutNode\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    layoutItem\n                                    \n                                                LayoutItem | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nA LayoutItem presented by the user.  If a string is given, it is converted into a LayoutItem\n\n\n                                    \n                                \n                                \n                                    schemaAnalyzer\n                                    \n                                                SchemaAnalyzer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LayoutNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        layoutDefinition\n                    \n                \n\n                \n                    \n                        getlayoutDefinition()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/models/layout-node.ts:58\n                                \n                            \n                    \n                        \n                                Copy of the original layoutItem \n\n\n                                \n                                    Returns :         LayoutItem\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/models/layout-node.ts:62\n                                \n                            \n                    \n                        \n                                Name for the item.  Will be used as the input[name] \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        dataPointer\n                    \n                \n\n                \n                    \n                        getdataPointer()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/models/layout-node.ts:66\n                                \n                            \n                    \n                        \n                                JSON path for accessing data for this layout item \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/models/layout-node.ts:73\n                                \n                            \n                    \n                        \n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n\n                \n                    \n                        getcontent()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/models/layout-node.ts:77\n                                \n                            \n                    \n                        \n                                HTML content to be rendered inside the widget \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/models/layout-node.ts:81\n                                \n                            \n                    \n                        \n                                Options for the widget \n\n\n                                \n                                    Returns :         LayoutOptions\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { JSONSchema7 } from 'json-schema';\nimport { cloneDeep, defaultTo, isString, mapKeys, omit, pick, uniqueId } from 'lodash';\nimport { Memoize } from 'lodash-decorators';\n\nimport { LayoutItem } from '../interfaces/layout-item.data';\nimport { LayoutOptions } from '../interfaces/layout-options.data';\nimport { SchemaAnalyzer } from '../interfaces/schema-analyzer.data';\n\n/**\n * The LayoutNode contains the logic to parse a LayoutItem along with its Schema.\n * A LayoutNode acts, to some degree, as a proxy of the LayoutItem, augmenting data\n * as needed. This gives the system a specific api to work with while allowing the\n * user to pass in variable data, so a degree.\n */\nexport class LayoutNode {\n    /** Reference to the user defined layout item */\n    private readonly layoutItem: LayoutItem;\n    /** Reference to the schema that pertains the layout */\n    private readonly schema: JSONSchema7;\n\n    /** Unique Identifier for the item */\n    public readonly id: string = uniqueId('control');\n\n    /**\n     * @throws Will throw an error if there is no layout.type or schema.type\n     */\n    constructor(layoutItem: LayoutItem, schema?: JSONSchema7) {\n        if (!layoutItem.type && !(schema && schema.type)) {\n            throw new Error('Missing \"type\"....');\n        }\n        this.layoutItem = layoutItem;\n        this.schema = schema;\n    }\n\n    /**\n     * Creates a LayoutNode\n     * @param layoutItem - A LayoutItem presented by the user.  If a string is given, it is converted into a LayoutItem\n     * @param schemaService - Service for looking up related Schema definition\n     */\n    public static create(layoutItem: LayoutItem | string, schemaAnalyzer: SchemaAnalyzer): LayoutNode {\n        const item: LayoutItem = isString(layoutItem)\n            ? {key: layoutItem}\n            : layoutItem;\n        const schema: JSONSchema7 = schemaAnalyzer.dataPointerMap.get(LayoutNode.getPointer(item.key));\n\n        return new LayoutNode(item, schema);\n    }\n\n    /** Normalizes a key(object.path or json/path) to json path */\n    private static getPointer(key: string): string {\n        const pointer = defaultTo(key, '');\n\n        return pointer.charAt(0) === '/'\n            ? pointer\n            : `/${pointer.replace(/\\./g, '/')}`;\n    }\n    /** Copy of the original layoutItem */\n    @Memoize() get layoutDefinition(): LayoutItem {\n        return cloneDeep(this.layoutItem);\n    }\n    /** Name for the item.  Will be used as the input[name] */\n    @Memoize() get name(): string {\n        return this.layoutItem.name || this.dataPointer.split('/').pop();\n    }\n    /** JSON path for accessing data for this layout item */\n    @Memoize() get dataPointer(): string {\n        return LayoutNode.getPointer(this.layoutItem.key);\n    }\n    /**\n     * @todo Handle array of types from schema\n     * Type of widget is used to represent the data\n     */\n    @Memoize() get type(): string {\n        return this.layoutItem.type || defaultTo(this.schema, {}).type;\n    }\n    /** HTML content to be rendered inside the widget */\n    @Memoize() get content(): string {\n        return isString(this.layoutItem.content) ? this.layoutItem.content : undefined;\n    }\n    /** Options for the widget */\n    @Memoize() get options(): LayoutOptions {\n        return {\n            ...pick(this.schema, ['title', 'description']),\n            ...mapKeys(pick(this.schema, ['readOnly']), () => 'readonly'),\n            ...omit(this.layoutItem, ['key', 'type', 'name', 'content', 'options']),\n            ...defaultTo(this.layoutItem.options, {})\n        };\n    }\n\n    // $ref?: any;\n    // arrayItem?;\n    // arrayItemType?;\n    // dataType?;\n    // items?: Array;\n    // recursiveReference?;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LayoutOptions.html":{"url":"interfaces/LayoutOptions.html","title":"interface - LayoutOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LayoutOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/core/interfaces/layout-options.data.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        accesskey\n                                \n                                \n                                            Optional\n                                        dirname\n                                \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        htmlClass\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        readonly\n                                \n                                \n                                            Optional\n                                        style\n                                \n                                \n                                            Optional\n                                        tabindex\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [others: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/core/interfaces/layout-options.data.ts:32\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accesskey\n                                    \n                                \n                                \n                                    \n                                        accesskey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/accesskey \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dirname\n                                    \n                                \n                                \n                                    \n                                        dirname:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#dirname \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#disabled \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        htmlClass\n                                    \n                                \n                                \n                                    \n                                        htmlClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/class \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readonly\n                                    \n                                \n                                \n                                    \n                                        readonly:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#readonly \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                    \n                                \n                                \n                                    \n                                        style:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/style \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tabindex\n                                    \n                                \n                                \n                                    \n                                        tabindex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/title \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface LayoutOptions {\n    /* Global HTML attributes */\n    /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/accesskey} */\n    accesskey?: string;\n    /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/class} */\n    htmlClass?: string;\n    /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/style} */\n    style?: string;\n    /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex} */\n    tabindex?: number;\n    /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/title} */\n    title?: string;\n\n    /* Global HTML Input attributes */\n    /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#dirname} */\n    dirname?: boolean;\n    /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#disabled} */\n    disabled?: boolean;\n    /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#readonly} */\n    readonly?: boolean;\n\n    /* Attribute for setting a icon */\n    icon?: {\n        /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/image#alt} */\n        alt?: string;\n        /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/image#height} */\n        height?: number;\n        /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/image#src} */\n        src: string;\n        /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/image#width} */\n        width?: number;\n    };\n\n    [others: string]: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LayoutService.html":{"url":"injectables/LayoutService.html","title":"injectable - LayoutService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LayoutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/form/services/layout.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides services for handling layouts \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setLayout\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    layout\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(schemaService: SchemaService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/form/services/layout.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        schemaService\n                                                  \n                                                        \n                                                                        SchemaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLayout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLayout(value: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/form/services/layout.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        layout\n                    \n                \n\n                \n                    \n                        getlayout()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/form/services/layout.service.ts:19\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                        \n\n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nList of Layout Nodes to be displayed in the UI\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         Array\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { difference } from 'lodash';\n\nimport { JSONSchema7Definition } from 'json-schema';\n\nimport { LayoutItem } from '../../core/interfaces/layout-item.data';\nimport { LayoutNode } from '../../core/models/layout-node';\n\nimport { SchemaService } from './schema.service';\n\n/** Provides services for handling layouts */\n@Injectable()\nexport class LayoutService {\n    private _layout: Array = [];\n    /**\n     * @param value - List of Layout Nodes to be displayed in the UI\n     */\n    get layout(): Array {\n        return this._layout;\n    }\n\n    constructor(private readonly schemaService: SchemaService) {}\n\n    public setLayout(value: Array): void {\n        this._layout = this.buildLayout(value);\n    }\n\n    private buildLayout(layout: Array): Array {\n        const schemaPointers: Map = this.schemaService.dataPointerMap;\n        const mappedPointers: Set = new Set();\n        let starIndex = -1;\n\n        const mappedLayout: Array =\n            layout.reduce((currentLayout: Array, layoutItem: LayoutItem | string, i: number): Array => {\n            let newLayout: Array = currentLayout;\n\n            if (layoutItem === '*') {\n                starIndex = i;\n            } else {\n                try {\n                    const layoutNode: LayoutNode = LayoutNode.create(layoutItem, this.schemaService);\n                    mappedPointers.add(layoutNode.dataPointer);\n                    newLayout = newLayout.concat(layoutNode);\n                } catch (err) {\n                    console.error('buildLayout error: Form layout element not recognized:');\n                    console.error(layoutItem);\n                }\n            }\n\n            return newLayout;\n        }, []);\n\n        if (starIndex !== -1) {\n            const availablePointers: Array = Array.from(schemaPointers.keys());\n            mappedLayout.splice(starIndex, 0, ...this.buildLayout(difference(availablePointers, Array.from(mappedPointers))));\n        }\n\n        return mappedLayout;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SchemaAnalyzer.html":{"url":"interfaces/SchemaAnalyzer.html","title":"interface - SchemaAnalyzer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SchemaAnalyzer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/core/interfaces/schema-analyzer.data.ts\n        \n\n            \n                Description\n            \n            \n                Defines properties and methods for working with a json schema \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dataPointerMap\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dataPointerMap\n                                    \n                                \n                                \n                                    \n                                        dataPointerMap:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Map of json data pointers and their corresponding schema \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { JSONSchema7Definition } from 'json-schema';\n\n/** Defines properties and methods for working with a json schema */\nexport interface SchemaAnalyzer {\n    /** Map of json data pointers and their corresponding schema */\n    readonly dataPointerMap: Map;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchemaService.html":{"url":"injectables/SchemaService.html","title":"injectable - SchemaService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SchemaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/form/services/schema.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides services for parsing JSON Schema and validating data \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                migrate\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    schema\n                                \n                                \n                                    dataPointerMap\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            migrate\n                        \n                        \n                    \n                \n            \n            \n                \nmigrate(schema: JSONSchema4 | JSONSchema6 | JSONSchema7)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/form/services/schema.service.ts:53\n                \n            \n\n\n            \n                \n                    Migrate a schema from draft 4/6 to draft 7\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schema\n                                    \n                                            JSONSchema4 | JSONSchema6 | JSONSchema7\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     JSONSchema7\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/form/services/schema.service.ts:69\n                \n            \n\n\n            \n                \n                    Validates data based on set JSON Schema\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ndata to be valdiated\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        schema\n                    \n                \n\n                \n                    \n                        getschema()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/form/services/schema.service.ts:26\n                                \n                            \n\n                \n                    \n                        setschema(value)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/form/services/schema.service.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nJSON Schema to be used for validation\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        dataPointerMap\n                    \n                \n\n                \n                    \n                        getdataPointerMap()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/form/services/schema.service.ts:35\n                                \n                            \n                    \n                        \n                                Gets a map of all the relevant json data pointers\nand their related schema definitions.  This allows for\neasy lookup of a schema reference from a json pointer.\n\n\n                                \n                                    Returns :     Map\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { cloneDeep } from 'lodash';\n\nimport { JSONSchema4, JSONSchema6, JSONSchema7, JSONSchema7Definition } from 'json-schema';\n\nimport migrate from 'json-schema-migrate';\nimport traverse from 'json-schema-traverse';\n\nimport Ajv from 'ajv';\n\nimport { SchemaAnalyzer } from '../../core/interfaces/schema-analyzer.data';\n\n/** Provides services for parsing JSON Schema and validating data */\n@Injectable()\nexport class SchemaService implements SchemaAnalyzer {\n    private _schema: JSONSchema7 = {};\n    /**\n     * @param value - JSON Schema to be used for validation\n     * @todo implement schema migration?\n     */\n    set schema(value: JSONSchema7) {\n        this._schema = value;\n        this.compileSchema();\n    }\n    get schema(): JSONSchema7 {\n        return this._schema;\n    }\n\n    /**\n     * Gets a map of all the relevant json data pointers\n     * and their related schema definitions.  This allows for\n     * easy lookup of a schema reference from a json pointer.\n     */\n    get dataPointerMap(): Map {\n        const pointers: Map = new Map();\n        traverse(this.schema, {cb: (...args) => {\n            const [schema, pointer, , , , parentSchema] = args;\n            if (pointer && parentSchema && parentSchema.type !== 'array' && schema.type !== 'object') {\n                pointers.set(pointer.replace(/\\/properties/g, ''), schema);\n            }\n        }});\n\n        return pointers;\n    }\n\n    private readonly ajv: Ajv.Ajv = new Ajv({ allErrors: true, jsonPointers: true, unknownFormats: 'ignore' });\n    private validator: Ajv.ValidateFunction;\n\n    /**\n     * Migrate a schema from draft 4/6 to draft 7\n     */\n    migrate(schema: JSONSchema4 | JSONSchema6 | JSONSchema7): JSONSchema7 {\n        const migratedSchema = cloneDeep(schema);\n        if (!migratedSchema.$schema || (migratedSchema.$schema && !migratedSchema.$schema.includes('draft-07'))) {\n            migrate.draft6(migratedSchema);\n            // Per https://github.com/epoberezkin/json-schema-migrate/issues/1, draft 7 is\n            // fully backwards compatible with 6, so changing $schema should suffice?\n            migratedSchema.$schema = 'http://json-schema.org/draft-07/schema#';\n        }\n\n        return migratedSchema as JSONSchema7;\n    }\n\n    /**\n     * Validates data based on set JSON Schema\n     * @param data - data to be valdiated\n     */\n    validate(data: any): boolean {\n        return this.validator(data);\n    }\n\n    private compileSchema() {\n        this.ajv.removeSchema(this.schema);\n        this.validator = this.ajv.compile(this.schema);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectWidgetComponent.html":{"url":"components/SelectWidgetComponent.html","title":"component - SelectWidgetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectWidgetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-json-schema-form/src/lib/select-widget/select-widget.component.ts\n\n\n    \n        Description\n    \n    \n        Dynamically creates a widget component based on a layout node.\nChanges in @Input attributes will be passed onto the created widget.\n\n    \n\n    \n        Extends\n    \n    \n                AbstractWidget\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                jsf-select-widget\n            \n\n            \n                styleUrls\n                ./select-widget.component.css\n            \n\n\n\n            \n                templateUrl\n                ./select-widget.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                widgetContainer\n                            \n                            \n                                controlDisabled\n                            \n                            \n                                controlName\n                            \n                            \n                                controlValue\n                            \n                            \n                                formControl\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataIndex\n                            \n                            \n                                layoutIndex\n                            \n                            \n                                layoutNode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactory: ComponentFactoryResolver, widgetLibraryService: WidgetLibraryService, jsf: JsonSchemaFormService, elementDataStorage: ElementDataStorageService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/select-widget/select-widget.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactory\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        widgetLibraryService\n                                                  \n                                                        \n                                                                        WidgetLibraryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jsf\n                                                  \n                                                        \n                                                                        JsonSchemaFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementDataStorage\n                                                  \n                                                        \n                                                                        ElementDataStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataIndex\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:27\n\n                            \n                        \n                \n                    \n                        Index of the data in data array \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutIndex\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:25\n\n                            \n                        \n                \n                    \n                        Index of the layout in the Layout array \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutNode\n                    \n                \n                \n                    \n                        Type :         LayoutNode\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:23\n\n                            \n                        \n                \n                    \n                        Layout Node describing the control \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(event: Event)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractWidget\n\n                \n            \n            \n                \n                        Defined in         AbstractWidget:65\n\n                \n            \n\n\n            \n                \n                    Update the value of the control\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nChange event\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            widgetContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ViewContainerRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('widgetContainer', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/select-widget/select-widget.component.ts:25\n                            \n                        \n\n                \n                    \n                        Placeholder for injecting widget \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:12\n\n                            \n                        \n\n                \n                    \n                        Flag to disable the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:14\n\n                            \n                        \n\n                \n                    \n                        Name for the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:16\n\n                            \n                        \n\n                \n                    \n                        Value of the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AbstractControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:18\n\n                            \n                        \n\n                \n                    \n                        Associated FormControl for widget \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:20\n\n                            \n                        \n\n                \n                    \n                        Options for the control \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n    Component, ComponentFactoryResolver, ComponentRef,\n    OnChanges, OnInit, ViewChild, ViewContainerRef\n} from '@angular/core';\n\nimport { ElementDataStorageService } from '../core/services/element-data-storage.service';\nimport { WidgetLibraryService } from '../core/services/widget-library.service';\nimport { AbstractWidget } from '../core/widget/widget';\n\nimport { JsonSchemaFormService } from '../form/services/json-schema-form.service';\n\n/**\n * Dynamically creates a widget component based on a layout node.\n * Changes in @Input attributes will be passed onto the created widget.\n */\n@Component({\n    selector: 'jsf-select-widget',\n    styleUrls: ['./select-widget.component.css'],\n    templateUrl: './select-widget.component.html'\n})\nexport class SelectWidgetComponent extends AbstractWidget implements OnInit, OnChanges {\n    private newComponent: ComponentRef;\n\n    /** Placeholder for injecting widget */\n    @ViewChild('widgetContainer', { read: ViewContainerRef }) widgetContainer: ViewContainerRef;\n\n    constructor(private readonly componentFactory: ComponentFactoryResolver,\n        private readonly widgetLibraryService: WidgetLibraryService,\n        jsf: JsonSchemaFormService,\n        elementDataStorage: ElementDataStorageService) {\n            super(jsf, elementDataStorage);\n    }\n\n    ngOnInit() {\n        this.updateComponent();\n    }\n\n    ngOnChanges() {\n        this.updateComponent();\n    }\n\n    private updateComponent(): void {\n        this.createComponent();\n        if (this.newComponent) {\n            for (const input of ['layoutNode', 'layoutIndex', 'dataIndex']) {\n                this.newComponent.instance[input] = this[input];\n            }\n        }\n    }\n\n    /**\n     * @todo Handle case of layoutNode change\n     */\n    private createComponent(): void {\n        if (!this.newComponent && this.layoutNode && this.layoutNode.type) {\n            this.newComponent = this.widgetContainer.createComponent(\n                this.componentFactory.resolveComponentFactory(\n                    this.widgetLibraryService.getWidget(this.layoutNode.type) as any\n                ),\n                undefined,\n                undefined,\n                this.generateNgContent()\n            );\n        }\n    }\n\n    private generateNgContent(): Array> {\n        if (this.layoutNode.content) {\n            return [ [ this.jsf.compileTemplate(this.layoutNode.content, this.layoutNode.options) ] ];\n        }\n    }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./select-widget.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'jsf-button'},{'name': 'HiddenComponent', 'selector': 'jsf-hidden'},{'name': 'JsonSchemaFormComponent', 'selector': 'jsf-json-schema-form'},{'name': 'SelectWidgetComponent', 'selector': 'jsf-select-widget'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectWidgetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SelectWidgetModule.html":{"url":"modules/SelectWidgetModule.html","title":"module - SelectWidgetModule","body":"\n                   \n\n\n\n\n    Modules\n    SelectWidgetModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SelectWidgetModule\n\n\n\ncluster_SelectWidgetModule_declarations\n\n\n\ncluster_SelectWidgetModule_exports\n\n\n\n\nSelectWidgetComponent\n\nSelectWidgetComponent\n\n\n\nSelectWidgetModule\n\nSelectWidgetModule\n\nSelectWidgetModule -->\n\nSelectWidgetComponent->SelectWidgetModule\n\n\n\n\n\nSelectWidgetComponent \n\nSelectWidgetComponent \n\nSelectWidgetComponent  -->\n\nSelectWidgetModule->SelectWidgetComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/select-widget/select-widget.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SelectWidgetComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            SelectWidgetComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SelectWidgetComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { SelectWidgetComponent } from './select-widget.component';\n\n@NgModule({\n    declarations: [ SelectWidgetComponent ],\n    entryComponents: [ SelectWidgetComponent ],\n    exports: [ SelectWidgetComponent ],\n    imports: [ CommonModule ]\n})\nexport class SelectWidgetModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WidgetDecorator.html":{"url":"interfaces/WidgetDecorator.html","title":"interface - WidgetDecorator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WidgetDecorator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/core/interfaces/widget-decorator.data.ts\n        \n\n            \n                Description\n            \n            \n                Properties for decorating a widget \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        types\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        types\n                                    \n                                \n                                \n                                    \n                                        types:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    keys for associating a widget with a layout.type \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface WidgetDecorator {\n    /** keys for associating a widget with a layout.type */\n    types: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WidgetLibraryService.html":{"url":"injectables/WidgetLibraryService.html","title":"injectable - WidgetLibraryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WidgetLibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/core/services/widget-library.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides services for mapping a widget component to a layoutNode type\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWidget\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWidget\n                        \n                        \n                    \n                \n            \n            \n                \ngetWidget(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/core/services/widget-library.service.ts:32\n                \n            \n\n\n            \n                \n                    Gets a widget class from the type\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntype of component\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { AbstractWidget } from '../widget/widget';\n\n/** Map of the default registered widgets */\nconst widgets: Map = new Map();\n\n/** Internal method for registering a widget with the widget library */\nexport const register = (component: typeof AbstractWidget, types: Array): void => {\n    types.forEach((type: string) => {\n        if (widgets.has(type)) {\n            console.error(`Widget type \"${type}\" already exists.  Ignoring.`, component);\n        } else {\n            widgets.set(type, component);\n        }\n    });\n};\n\n/**\n * Provides services for mapping a widget component to a layoutNode type\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class WidgetLibraryService {\n    private readonly defaultWidget = 'hidden';\n\n    /**\n     * Gets a widget class from the type\n     * @param type - type of component\n     */\n    getWidget(type: string): typeof AbstractWidget {\n        return widgets.has(type)\n            ? widgets.get(type)\n            : widgets.get(this.defaultWidget);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nCHANGELOG\nThe changelog is automatically updated using\nsemantic-release. You\ncan see it on the releases page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing to NGX-JSON-Schema-Form\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\nCode of Conduct\nIssues and Bugs\nFeature Requests\nCoding Rules\nCommit Message Guidelines\nLicense\n\n Code of Conduct\nThis project and everyone participating in it is governed by the Code of Conduct. By participating, you are expected to uphold this code. Please report unacceptable behavior to ngx-json-schema-form@outlook.com.\n Found a Bug?\nIf you find a bug in the source code, you can help us by submitting an issue to our GitHub Repository. Even better, you can submit a Pull Request with a fix.\n Missing a Feature?\nYou can request a new feature by submitting a new issue to our GitHub Repository.\nIf you would like to implement a new feature, please submit an issue or a pull request, depending on what kind of feature it is:\n\nA major feature should be proposed in a new issue that outlines the feature you would like to add, so it can be discussed. This will allow us to better coordinate our efforts, prevent duplication of work, and help you to craft the change so that it is successfully accepted into the project.\nA small features can be crafted and directly submitted as a pull request.\n\n Coding Rules\nWe try to follow Google's JavaScript Style Guide, but wrap all code at 140 characters or less and use 4 spaces for indentation.  Review our TSLint rules for more information.\n Commit Message Guidelines\nThis project uses semantic-release and thus requires specific commit message standards.  Sematic-release uses the Angular Commit Message Guidelines; please review.\n License\nThis library is released under the MIT License. All contributions, if accepted, will be covered by this license. So PRs must either consist of original code, or code from another source with an MIT-compatible license. By submitting a pull request, you assert that the code you are submitting complies with these requirements.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.0\n        \n            @angular/cdk : ^7.2.0\n        \n            @angular/common : ~7.2.0\n        \n            @angular/compiler : ~7.2.0\n        \n            @angular/core : ~7.2.0\n        \n            @angular/flex-layout : 7.0.0-beta.24\n        \n            @angular/forms : ~7.2.0\n        \n            @angular/http : ~7.2.0\n        \n            @angular/material : ~7.2.0\n        \n            @angular/platform-browser : ~7.2.0\n        \n            @angular/platform-browser-dynamic : ~7.2.0\n        \n            @angular/router : ~7.2.0\n        \n            @types/ace : 0.0.36\n        \n            @types/json-schema : ^7.0.3\n        \n            @types/lodash : ^4.14.136\n        \n            ajv : ^6.10.0\n        \n            brace : ^0.11.0\n        \n            core-js : ^2.5.4\n        \n            handlebars : ^4.1.2\n        \n            json-schema-migrate : ^0.2.0\n        \n            json-schema-traverse : ^0.4.1\n        \n            lodash : ^4.17.14\n        \n            lodash-decorators : ^6.0.1\n        \n            ng2-ace-editor : 0.3.9\n        \n            rxjs : ~6.5.2\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Widget   (projects/.../widget.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-json-schema-form/src/lib/core/decorators/widget.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Widget\n                        \n                        \n                    \n                \n            \n            \n                \nWidget(args)\n                \n            \n\n\n\n\n            \n                \n                    Widget Decorator\nRegisters widget with widget library\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n\n\nNgxJsonSchemaForm\nA JSON Schema Form builder for Angular 7+, similar to\n\nAngular JSON Schema Form's \n\nNote: This project attemtps to take over where its predecesor left off.\nIt's based off of the above project, but rewritten from the ground up.\nNote: This project is not ready for consumption.  There is still a lot to do to\nbring parity with Angular JSON Schema Form\nCheck out the live demo and play with the examples\nCheck out some examples here.\nUsing Angular JSON Schema Form\nBasic use\nBegin by installing the library in your project\nnpm install ngx-json-schema-form --saveThen import JsonSchemaFormModule in your main application module:\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { JsonSchemaFormModule } from 'ngx-json-schema-form';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n    declarations: [ AppComponent ],\n    imports: [\n        BrowserModule,\n        JsonSchemaFormModule.forRoot()\n    ],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule { }To display a form in your Angular component, simply add the following to your component's template:\nWhere schema is a valid JSON schema object. If you don't already have your own schemas, you can find a bunch of samples to test with in the projects/demo/src/assets/examples folder.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License\nCopyright for portions of project NGX-Json-Schema-Form are held by [David Schnell-Davis, 2014]\nas part of project Angular2-Json-Schema-Form. All other copyright for project NGX-Json-Schema-Form\nare held by [James Scharett, 2019]\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ButtonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HiddenModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JsonSchemaFormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SelectWidgetModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ButtonModule\n\n\n\ncluster_ButtonModule_declarations\n\n\n\ncluster_ButtonModule_exports\n\n\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_imports\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_HiddenModule\n\n\n\ncluster_HiddenModule_declarations\n\n\n\ncluster_HiddenModule_exports\n\n\n\ncluster_JsonSchemaFormModule\n\n\n\ncluster_JsonSchemaFormModule_imports\n\n\n\ncluster_JsonSchemaFormModule_exports\n\n\n\ncluster_SelectWidgetModule\n\n\n\ncluster_SelectWidgetModule_declarations\n\n\n\ncluster_SelectWidgetModule_exports\n\n\n\n\nButtonComponent\n\nButtonComponent\n\n\n\nButtonModule\n\nButtonModule\n\nButtonModule -->\n\nButtonComponent->ButtonModule\n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nButtonModule->ButtonComponent \n\n\n\n\n\nJsonSchemaFormModule\n\nJsonSchemaFormModule\n\nJsonSchemaFormModule -->\n\nButtonModule->JsonSchemaFormModule\n\n\n\n\n\nJsonSchemaFormComponent\n\nJsonSchemaFormComponent\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nJsonSchemaFormComponent->FormModule\n\n\n\n\n\nJsonSchemaFormComponent \n\nJsonSchemaFormComponent \n\nJsonSchemaFormComponent  -->\n\nFormModule->JsonSchemaFormComponent \n\n\n\nJsonSchemaFormModule -->\n\nFormModule->JsonSchemaFormModule\n\n\n\n\n\nSelectWidgetModule\n\nSelectWidgetModule\n\nFormModule -->\n\nSelectWidgetModule->FormModule\n\n\n\nJsonSchemaFormModule -->\n\nSelectWidgetModule->JsonSchemaFormModule\n\n\n\n\n\nSelectWidgetComponent \n\nSelectWidgetComponent \n\nSelectWidgetComponent  -->\n\nSelectWidgetModule->SelectWidgetComponent \n\n\n\n\n\nHiddenComponent\n\nHiddenComponent\n\n\n\nHiddenModule\n\nHiddenModule\n\nHiddenModule -->\n\nHiddenComponent->HiddenModule\n\n\n\n\n\nHiddenComponent \n\nHiddenComponent \n\nHiddenComponent  -->\n\nHiddenModule->HiddenComponent \n\n\n\nJsonSchemaFormModule -->\n\nHiddenModule->JsonSchemaFormModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nJsonSchemaFormModule -->\n\nCoreModule->JsonSchemaFormModule\n\n\n\n\n\nButtonModule \n\nButtonModule \n\nButtonModule  -->\n\nJsonSchemaFormModule->ButtonModule \n\n\n\n\n\nCoreModule \n\nCoreModule \n\nCoreModule  -->\n\nJsonSchemaFormModule->CoreModule \n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nJsonSchemaFormModule->FormModule \n\n\n\n\n\nHiddenModule \n\nHiddenModule \n\nHiddenModule  -->\n\nJsonSchemaFormModule->HiddenModule \n\n\n\n\n\nSelectWidgetModule \n\nSelectWidgetModule \n\nSelectWidgetModule  -->\n\nJsonSchemaFormModule->SelectWidgetModule \n\n\n\n\n\nSelectWidgetComponent\n\nSelectWidgetComponent\n\nSelectWidgetModule -->\n\nSelectWidgetComponent->SelectWidgetModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DataEvent   (projects/.../data-event-plugin.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-json-schema-form/src/lib/core/services/data-event-plugin.service.ts\n    \n    \n        \n            \n                \n                    \n                    DataEvent\n                \n            \n            \n                \n                    Event wrapper for piggybacking data on an event \n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            register   (projects/.../widget-library.service.ts)\n                        \n                        \n                            widgets   (projects/.../widget-library.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-json-schema-form/src/lib/core/services/widget-library.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            register\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (component: typeof AbstractWidget, types: Array): void => {\n    types.forEach((type: string) => {\n        if (widgets.has(type)) {\n            console.error(`Widget type \"${type}\" already exists.  Ignoring.`, component);\n        } else {\n            widgets.set(type, component);\n        }\n    });\n}\n                        \n                    \n\n                \n                    \n                        Internal method for registering a widget with the widget library \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            widgets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n\n                \n                    \n                        Map of the default registered widgets \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/introduction.html":{"url":"additional-documentation/introduction.html","title":"additional-page - Introduction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n\n\n\nJson Schema\nThe only requirement to using the component is to supply a valid JSON Schema.  The component will parse the schema and display all properties in the order they\nare presented within the schema.\n\nschema.json\n\n{\n    \"$id\": \"https://example.com/person.schema.json\",\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"Person\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"firstName\": {\n            \"type\": \"string\",\n            \"description\": \"The person's first name.\"\n        },\n        \"lastName\": {\n            \"type\": \"string\",\n            \"description\": \"The person's last name.\"\n        },\n        \"age\": {\n            \"description\": \"Age in years which must be equal to or greater than zero.\",\n            \"type\": \"integer\",\n            \"minimum\": 0\n        }\n    }\n}\n\nIn this example, the form will display 3 fields; firstName, lastName and age.  The order is determined by the order of the fields in the schema.  Once you have your schema set, all you need to do is pass it to the component\n\nbasic.component.ts\n\nimport { JSONSchema7 } from 'json-schema';\nimport schema from './schema.json';\n\n@Component({\n    template: ``,\n    ...\n})\nexport class BasicComponent {\n    schema: JSONSchema7 = schema as JSONSchema7;\n    ...\n}\n\nHere we import the schema json and set it as a property on our component.  Then you wire up the schema in the template and\nLayout\nThe deault layout is simply ['*'].  This translates to display everything in the the schema.  The * key is a special command that tells the component to display everything that has not specifically been laid out.  This can become useful when you only care about a few fields and their location.  For example:\n\nschema.json\n\n{\n    \"$id\": \"https://example.com/person.schema.json\",\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"Person\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"question1\": {\n            \"type\": \"boolean\"\n        },\n        \"age\": {\n            \"description\": \"Are you 18 or older?\",\n            \"type\": \"boolean\"\n        },\n        \"question2\": {\n            \"type\": \"boolean\"\n        }\n    }\n}\n\nlayout.json\n\n[\n    \"age\",\n    '*'\n]\n\nlayout.component.ts\n\nimport { JSONSchema7 } from 'json-schema';\nimport schema from './schema.json';\nimport layout from './layout.json';\n\n@Component({\n    template: ``,\n    ...\n})\nexport class LayoutComponent {\n    schema: JSONSchema7 = schema as JSONSchema7;\n    layout: Array = layout;\n    ...\n}\n\nAs you can see, we only care that age is presented first.  All the other properties in the schema are shown after age.\nForm Options\nJust like a native form, you can set the standard form attributes (action, autocomplete, enctype, method, target) on the jsf component.  Most of the time you will not need to set these, but there may be instances in which you need your form to do an actual submit and need these set. For more info on these see Form Attributes.\n\nlogin.component.html\n\n\n\nWidgets\nOptions\nThere are numerous attributes that can be set on a widget which are set via the layout.  The following are currently supported\n\naccesskey\ndirname\ndisabled\nhtmlClass\nname\nreadonly\nstyle\ntabindex\ntitle\n\n\nlayout.json\n\n[{\n    \"type\": \"text\",\n    \"accesskey\": \"n\",\n    \"dirname\": true,\n    \"disabled\": false,\n    \"htmlClass\": \"input-sm\",\n    \"name\": \"name\",\n    \"readonly\": true,\n    \"style\": \"color: #333;\",\n    \"tabindex\": 2,\n    \"title\": \"Name\"\n}]\n\nButton\nThere are 4 types of buttons that jsf supports, button, image, reset and submit.  By default, these will all use the  tag for display.  However, with the exception of image, you can specify custom html via the content option.  This will result in the  being used for display and the content being inserted.  Content can contain simple bindings so that you can bind to various properties of the layout.  For example:\n\nbutton-layout.json\n\n[{\n    \"type\": \"submit\",\n    \"title\": \"Submit\",\n    \"content\": \"{{ options.title }}\",\n    \"icon\": {\n        \"src\": \"/assets/submit.png\",\n        \"width\": 30,\n        \"height\": 30,\n        \"alt\": \"Checkmark\"\n    }\n}]\n\nwill result in\n\nbutton.html\n\n\n    \n    Submit\n\n\nHere you can see we are specifying that the button should contain an image via the content options.  The template binds to the properties of the icon option which results in an image tag being rendered.  The icon option is also used when redering a simple button of type image.\n\nNote: due to current limitation of Angular AOT compilation, use of the angular compile to transpile content strings into HTML DOM is not possible.  Recent Angular changes have restricted the inclusion of the compiler in favor of reducing the file size and load time when in AOT mode.  Therefore, Handlebars is currently being imported to handle the compilation of content string to HTML DOM.\n\n\nWe can also respond to events such as a click.  To do this, we must first bind an event handler to the jsf component\n\nform.component.html\n\n\n\nThen we add a layout with a couple of buttons.  The first button will run an internal command where as the second will run a command specified by layout.onClick.\n\nbuttons-layout.json\n\n[{\n    \"type\": \"button\",\n    \"id\": \"button1\",\n    \"title\": \"Open dialog\"\n}, {\n    \"type\": \"button\",\n    \"id\": \"button2\",\n    \"title\": \"Open Google\",\n    \"onClick\": \"window.open('http://www.google.com/');\"\n}]\n\nLastly, we specify our onClick handler in our component.\n\nform.component.ts\n\nimport layout from './buttons-layout.json';\nimport { DataEvent } from 'ngx-json-schema-form';\n\n@Component({\n    templateUrl: './form.component.html',\n    ...\n})\nexport class LayoutComponent {\n    layout: Array = layout;\n\n    onClick(event: DataEvent): void {\n        if (event.data.id === 'button1') {\n            openDialog(event);\n        } else if (event.data.id === 'button2') {\n            // Run some external code\n            const fn = new Function('event', event.data.onClick);\n            fn(event);\n        }\n    }\n    ...\n}\n\nWhen a button is clicked, the event will bubble up to the jsf form component to which we bound our onClick handler.  Using event metadata (click.data.layout), we can specify that only events in which a target that has an associated data property of layout will trigger the event.  This association is handled internally when a widget is created and acts similarly to jQuery's $.data.  When the event handler is triggered, the layout is passed down with the event via event.data , allowing us to inspect which layout item triggered the event and act accordingly.  In the case of \"button1\", we run and internal method openDialog in order to open an angular dialog component.  With \"button2\" however, we run the external javascript passed in via the onClick property in the layout in order to open a popup dialog to Google.\nNote: running external javascript is usually not a good choice, therefore the jsf library does not internally run the onClick handler.  You will need to handle the conversion from text to javascript yourself and run the code.\nHidden\nHidden widgets are as you expect, then render an .  This is the default for any layout item that can't be propley matched.  For the most part, hidden widgets wont be needed as you simply don't need to render them, their data never changes.  However, in the event that you need to do an actual form submittal, hidden inputs may be necessary and are therfore included.\n\n\n\n\n\nJSON Schema\nLayout\nForm Options\nWidgets\nOptions\nButton\nHidden\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
