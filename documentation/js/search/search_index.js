var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AbstractWidget.html",[0,0.437,1,1.604]],["body/classes/AbstractWidget.html",[0,0.326,1,2.299,2,1.786,3,0.326,4,0.326,5,0.326,6,0.665,7,0.317,8,0.32,9,2.656,10,0.921,11,2.199,12,2.84,13,4.634,14,0.98,15,1.115,16,2.609,17,2.609,18,2.609,19,3.206,20,1.966,21,1.046,22,2.033,23,2.199,24,3.464,25,3.464,26,2.978,27,2.627,28,1.947,29,1.627,30,2.299,31,2.63,32,2.147,33,1.616,34,2.656,35,1.409,36,0.025,37,1.459,38,0.94,39,1.165,40,1.758,41,0.86,42,2.032,43,1.535,44,2.656,45,2.199,46,2.033,47,3.409,48,0.982,49,2.656,50,2.656,51,2.609,52,2.656,53,1.535,54,1.115,55,2.656,56,2.199,57,2.032,58,2.656,59,2.411,60,2.033,61,1.115,62,1.409,63,1.956,64,2.656,65,1.202,66,2.656,67,1.79,68,3.906,69,2.656,70,2.656,71,2.656,72,0.667,73,4.634,74,2.877,75,1.985,76,0.445,77,2.251,78,1.495,79,1.382,80,2.656,81,1.887,82,2.656,83,1.283,84,0.272,85,2.656,86,2.656,87,1.821,88,2.656,89,1.887,90,2.656,91,3.906,92,2.656,93,2.656,94,3.906,95,0.86,96,1.786,97,2.656,98,2.656,99,2.251,100,1.283,101,2.656,102,1.985,103,0.808,104,2.656,105,2.656,106,2.656,107,2.656,108,1.627,109,2.656,110,2.656,111,2.656,112,2.656,113,2.656,114,2.656,115,2.656,116,1.495,117,2.656,118,2.656,119,0.009,120,0.014,121,0.009]],["title/components/ButtonComponent.html",[122,0.896,123,1.604]],["body/components/ButtonComponent.html",[0,0.398,1,2.59,3,0.255,4,0.255,5,0.398,6,0.333,7,0.22,8,0.239,10,0.766,14,0.375,15,1.288,16,1.83,17,1.83,18,1.83,19,2.25,20,1.558,21,0.871,22,1.692,28,0.876,29,1.992,30,2.031,31,2.181,32,1.896,33,1.361,35,0.988,36,0.025,37,1.311,38,0.917,39,0.817,40,2.778,41,1.053,42,1.38,43,0.819,45,1.173,46,1.085,47,2.818,48,0.817,51,1.173,53,1.278,54,1.288,56,1.173,57,2.07,59,1.085,60,1.085,61,0.595,62,0.988,63,0.675,65,0.882,67,1.75,72,0.664,76,0.349,78,1.173,79,1.085,83,1.007,84,0.333,100,1.007,119,0.014,120,0.011,121,0.011,122,1.408,123,2.031,124,1.463,125,1.402,126,1.987,127,1.173,128,1.679,129,1.173,130,2.084,131,2.43,132,1.992,133,1.83,134,1.692,135,2.915,136,4.483,137,1.992,138,3.996,139,2.08,140,3.251,141,2.084,142,3.178,143,1.277,144,1.277,145,1.277,146,1.277,147,1.277,148,1.277,149,3.292,150,1.277,151,1.278,152,1.558,153,4.396,154,1.366,155,3.292,156,1.692,157,2.756,158,1.83,159,1.767,160,2.449,161,1.277,162,1.488,163,2.766,164,3.388,165,3.827,166,1.122,167,1.767,168,1.402,169,2.43,170,2.756,171,1.767,172,2.43,173,1.402,174,2.08,175,2.08,176,1.558,177,2.987,178,1.558,179,1.767,180,1.558,181,2.756,182,1.558,183,1.558,184,1.767,185,1.767,186,1.402,187,1.173,188,1.767,189,1.767,190,1.173,191,1.767,192,1.692,193,1.402,194,1.767,195,1.277,196,2.349,197,2.186,198,2.43,199,1.767,200,1.767,201,1.767,202,1.558,203,1.767,204,1.277,205,1.767,206,1.767,207,1.558,208,1.767,209,1.767,210,1.767,211,1.767,212,1.402,213,1.402,214,2.756,215,1.173,216,1.558,217,1.767,218,2.186,219,1.767,220,2.756,221,1.767,222,1.767,223,1.57,224,3.292,225,2.43,226,1.277,227,1.767,228,4.591,229,1.992,230,2.43,231,1.767,232,1.558,233,1.767,234,2.186,235,3.388,236,3.374,237,2.987,238,3.388,239,2.756,240,4.149,241,1.767,242,1.767,243,1.558,244,1.992,245,1.173,246,0.988,247,1.558,248,1.767,249,2.756,250,1.767,251,3.388,252,2.43,253,0.675,254,1.767,255,0.819,256,1.767,257,1.767,258,1.767,259,1.767,260,1.767,261,1.277,262,1.767,263,1.767,264,1.173,265,2.186,266,1.767,267,1.767,268,1.767,269,2.756,270,1.558,271,1.277,272,1.767,273,1.767,274,2.756,275,2.186,276,1.767,277,1.402,278,1.277,279,1.767,280,1.173,281,1.767,282,1.767,283,1.558,284,1.085,285,1.767,286,2.43,287,2.688,288,1.767,289,1.767,290,1.767,291,1.767,292,1.767,293,1.085,294,0.938,295,1.767,296,1.277,297,1.767,298,1.402,299,1.277,300,1.173,301,1.085,302,1.277,303,2.084,304,1.277,305,0.675,306,1.278,307,1.173,308,2.541,309,1.173,310,1.173,311,0.938,312,1.173,313,0.938,314,1.173,315,0.938,316,1.173,317,0.938,318,0.819,319,1.173,320,0.938,321,1.173,322,1.173]],["title/modules/ButtonModule.html",[323,0.84,324,2.007]],["body/modules/ButtonModule.html",[0,0.556,3,0.556,4,0.556,5,0.556,6,0.465,7,0.222,8,0.222,36,0.025,72,0.748,76,0.761,84,0.465,119,0.016,120,0.02,121,0.016,123,3.179,154,1.907,305,1.47,323,1.069,324,3.815,325,1.671,326,1.907,327,2.566,328,2.042,329,1.907,330,2.95,331,3.847,332,3.847,333,3.847,334,2.715,335,1.671,336,4.538,337,3.445,338,2.529,339,2.042,340,2.362,341,4.538,342,1.907]],["title/components/ContainerComponent.html",[122,0.896,311,1.604]],["body/components/ContainerComponent.html",[0,0.238,1,2.535,3,0.238,4,0.238,5,0.238,6,0.485,7,0.246,8,0.258,10,0.726,11,1.734,12,2.343,14,0.783,15,0.879,16,1.734,17,1.734,18,1.734,19,2.152,20,1.501,21,0.825,22,1.603,26,2.433,28,0.818,29,1.887,30,1.956,31,2.1,32,1.826,33,1.45,35,1.322,36,0.025,37,1.414,38,1.002,39,1.19,40,2.649,41,1.238,42,1.32,43,0.765,45,1.096,46,1.603,47,2.465,48,0.489,51,1.096,53,0.765,54,1.241,56,1.096,57,1.501,59,1.013,60,1.013,61,1.091,62,1.162,63,0.63,65,0.43,67,1.322,72,0.617,76,0.326,78,1.096,79,1.013,81,0.94,83,0.94,84,0.199,87,0.765,89,0.94,95,0.998,108,1.192,119,0.007,120,0.011,121,0.007,122,0.961,123,0.876,124,1.386,125,1.309,126,1.063,127,1.096,128,0.818,129,1.096,131,2.302,132,1.887,134,1.013,135,2.847,136,1.455,137,1.887,139,1.603,142,3.087,143,1.192,144,1.192,145,1.192,146,1.192,147,1.192,148,1.192,150,1.192,151,1.21,158,1.734,160,1.887,162,0.937,166,0.672,173,1.309,174,2.262,175,2.746,176,3.765,190,1.096,223,0.94,246,1.322,253,0.63,271,1.192,278,1.887,296,3.234,298,1.309,299,1.192,300,1.096,304,1.192,305,0.63,306,1.98,307,1.096,308,2.447,309,1.096,310,1.096,311,1.956,312,1.096,313,0.876,314,1.096,315,0.876,316,1.096,317,0.876,318,1.708,319,1.096,320,0.876,321,1.096,322,1.096,343,1.946,344,4.776,345,4.639,346,3.944,347,3.08,348,3.08,349,2.611,350,2.902,351,3.68,352,3.823,353,3.08,354,2.857,355,3.823,356,3.08,357,2.611,358,3.08,359,3.08,360,1.946,361,2.611,362,1.946,363,2.302,364,1.65,365,4.639,366,2.611,367,1.309,368,1.455,369,3.685,370,1.309,371,2.072,372,1.65,373,1.65,374,1.65,375,1.455,376,3.68,377,1.65,378,1.455,379,1.192,380,1.192,381,1.455,382,4.015,383,2.924,384,3.249,385,1.65,386,1.65,387,1.65,388,2.302,389,1.65,390,1.65,391,1.65,392,1.65,393,1.096,394,1.65,395,2.072,396,1.013,397,1.65,398,1.455,399,1.455,400,1.65,401,4.698,402,2.302,403,1.65,404,2.302,405,1.309,406,0.94,407,1.65,408,1.946,409,3.08,410,1.65,411,1.946,412,1.192,413,1.946,414,1.455,415,1.946,416,1.946,417,2.302,418,1.946,419,1.946,420,3.08,421,1.946,422,1.946,423,1.946,424,1.192,425,4.347,426,3.08,427,3.08,428,3.823,429,4.347,430,3.685,431,1.946,432,1.946,433,1.946,434,1.65,435,3.823,436,1.946,437,1.946,438,1.455,439,3.08,440,1.946,441,1.946,442,1.946,443,1.946,444,1.946,445,1.946,446,1.946,447,1.946,448,1.946,449,1.946,450,1.946,451,1.946]],["title/modules/ContainerModule.html",[323,0.84,452,2.007]],["body/modules/ContainerModule.html",[0,0.535,3,0.535,4,0.535,5,0.535,6,0.447,7,0.213,8,0.213,36,0.025,72,0.772,76,0.732,84,0.447,119,0.015,120,0.019,121,0.015,154,1.835,305,1.415,311,3.166,318,1.716,323,1.029,325,1.608,326,1.835,327,2.521,328,1.965,329,1.835,330,2.899,334,2.651,335,1.608,337,3.363,338,2.469,339,1.965,340,2.306,342,2.306,452,3.86,453,3.702,454,3.702,455,3.702,456,3.702,457,3.198,458,4.367,459,2.676,460,3.264,461,4.367]],["title/modules/CoreModule.html",[323,0.84,462,2.007]],["body/modules/CoreModule.html",[0,0.564,3,0.564,4,0.564,5,0.564,6,0.58,7,0.277,8,0.277,21,1.233,33,1.157,36,0.025,57,1.589,61,1.314,72,0.786,76,0.771,84,0.471,95,1.491,119,0.016,120,0.02,121,0.016,325,1.694,329,1.933,338,2.551,339,2.071,340,2.582,342,1.933,396,2.395,462,3.46,463,4.602,464,3.814,465,5.21,466,4.602,467,5.21,468,5.67,469,2.82,470,2.591,471,3.814,472,4.602,473,4.602,474,4.602,475,3.901,476,4.602]],["title/interfaces/Data.html",[65,0.787,477,1.401]],["body/interfaces/Data.html",[0,0.431,3,0.431,4,0.431,5,0.431,6,0.36,7,0.172,8,0.172,14,0.633,15,1.36,31,1.698,32,2.269,36,0.025,38,0.841,43,1.872,48,1.197,53,2.276,57,2.271,62,1.069,65,1.525,72,0.662,76,0.589,81,1.698,83,1.698,84,0.553,95,1.75,103,1.069,119,0.012,120,0.017,121,0.012,128,1.477,162,1.448,166,1.644,223,1.698,224,3.204,244,2.919,253,1.876,264,3.26,277,2.365,306,2.378,469,2.154,470,1.979,471,2.365,477,1.382,478,1.979,479,2.628,480,2.628,481,1.644,482,4.58,483,4.038,484,2.628,485,2.628,486,2.98,487,4.038,488,2.98,489,2.98,490,2.98,491,4.038,492,2.154,493,2.365,494,2.98,495,2.98,496,1.979,497,2.98,498,2.98,499,2.98,500,2.98,501,2.628,502,2.98,503,2.98,504,4.038,505,2.98,506,3.204,507,2.98,508,2.98,509,4.58,510,2.98,511,4.58,512,2.98,513,2.98,514,2.98,515,2.98,516,2.98,517,2.98,518,2.98,519,2.98,520,2.98]],["title/injectables/DataEventPluginService.html",[471,2.397,481,1.23]],["body/injectables/DataEventPluginService.html",[0,0.363,3,0.363,4,0.363,5,0.363,6,0.582,7,0.278,8,0.278,10,0.697,14,0.533,15,1.206,21,1.132,28,1.243,31,2.041,32,2.483,33,1.351,35,1.498,36,0.025,37,1.32,38,0.92,39,1.239,43,1.661,48,1.486,53,2.234,57,2.353,61,1.206,62,0.9,65,1.473,72,0.604,76,0.496,81,2.041,83,1.43,84,0.504,95,1.741,103,0.9,119,0.01,120,0.015,121,0.01,128,1.775,152,3.159,162,0.9,166,1.856,223,2.041,224,3.823,244,2.589,253,1.741,264,3.026,277,1.991,306,2.391,469,1.814,470,1.666,471,2.842,477,1.163,479,4.249,480,2.212,481,1.459,482,4.556,483,4.178,484,2.212,485,2.212,486,2.509,487,4.556,488,3.582,489,3.582,490,3.582,491,4.819,492,1.814,493,2.842,494,3.582,495,3.582,496,2.379,497,2.509,498,2.509,499,2.509,500,3.582,501,3.159,502,3.582,503,3.582,504,4.249,505,4.556,506,3.823,507,2.509,508,2.509,509,4.178,510,2.509,511,4.178,512,2.509,513,2.509,514,2.509,515,2.509,516,2.509,517,2.509,518,2.509,519,2.509,520,2.509,521,1.54,522,4.225,523,2.96,524,4.225,525,2.96,526,2.96]],["title/injectables/ElementDataStorageService.html",[32,1.497,481,1.23]],["body/injectables/ElementDataStorageService.html",[0,0.333,3,0.333,4,0.333,5,0.333,6,0.563,7,0.303,8,0.268,10,0.641,14,0.489,21,1.064,32,2.17,33,1.298,35,1.571,36,0.025,37,1.384,38,0.804,39,1.298,42,1.982,48,1.623,61,1.475,65,1.501,72,0.333,76,0.456,81,1.92,84,0.278,87,1.068,89,1.92,95,1.86,96,3.159,103,0.827,119,0.009,120,0.014,121,0.009,128,2.17,151,1.562,156,2.068,162,1.571,163,2.435,169,2.97,226,2.435,253,1.287,255,1.562,294,1.788,306,2.661,367,2.673,412,1.666,417,2.032,481,1.372,493,2.673,496,2.909,504,4.828,506,2.673,521,1.415,527,5.496,528,2.718,529,4.291,530,3.085,531,2.97,532,3.369,533,2.673,534,2.673,535,3.973,536,3.973,537,3.973,538,3.973,539,3.973,540,3.973,541,3.369,542,3.369,543,3.973,544,3.973,545,5.166,546,3.973,547,3.973,548,3.973,549,2.97,550,3.862,551,3.973,552,3.973,553,3.637,554,2.718,555,5.741,556,5.741,557,5.741,558,3.973,559,2.718,560,3.973,561,3.973,562,2.718,563,3.973,564,2.718,565,2.304,566,2.032,567,2.718,568,3.973,569,3.973,570,2.718,571,2.718,572,2.718,573,4.696,574,2.718,575,2.718,576,5.166,577,2.718,578,2.718,579,2.718]],["title/modules/FormModule.html",[323,0.84,580,2.007]],["body/modules/FormModule.html",[0,0.54,3,0.54,4,0.54,5,0.54,6,0.451,7,0.27,8,0.27,36,0.025,72,0.774,76,0.739,84,0.451,119,0.015,120,0.019,121,0.015,154,1.851,305,1.427,315,3.145,318,1.732,323,1.038,325,1.622,326,1.851,327,2.532,328,1.982,329,1.851,330,2.911,334,2.666,335,1.622,338,2.483,339,1.982,340,2.318,342,2.318,457,3.206,459,2.7,460,3.293,580,3.866,581,3.735,582,3.735,583,4.406,584,3.735,585,4.406,586,4.406]],["title/components/HiddenComponent.html",[122,0.896,313,1.604]],["body/components/HiddenComponent.html",[0,0.382,1,2.883,3,0.382,4,0.382,5,0.382,6,0.448,7,0.247,8,0.269,10,1.032,14,0.561,15,1.25,16,2.467,17,2.467,18,2.467,19,2.853,20,1.75,21,1.174,22,2.28,23,1.754,28,1.308,29,2.685,30,2.474,31,2.656,32,2.31,33,1.552,35,1.332,36,0.025,37,1.552,38,0.936,39,1.101,40,2.883,41,1.419,42,1.75,43,1.224,45,1.754,46,1.621,47,3.015,48,0.783,51,1.754,53,1.224,54,1.446,56,1.754,57,2,59,1.621,60,1.621,61,0.889,62,0.947,65,0.967,67,0.947,72,0.71,76,0.522,78,1.754,79,1.621,83,1.505,84,0.319,119,0.011,120,0.015,121,0.011,122,1.274,123,1.401,124,1.971,125,2.095,126,1.512,127,1.754,128,1.308,129,1.754,131,3.275,132,2.685,134,1.621,135,3.28,137,2.685,139,2.28,142,3.683,143,1.909,144,1.909,145,1.909,146,1.909,147,1.909,148,1.909,151,1.224,162,1.332,204,1.909,246,0.947,280,1.754,294,1.971,298,2.095,299,1.909,300,1.754,304,1.909,305,1.009,306,1.722,307,1.754,308,3.096,309,1.754,310,1.754,311,1.401,312,1.754,313,2.474,314,1.754,315,1.401,316,1.754,317,1.401,318,1.224,319,1.754,320,1.401,321,1.754,322,1.754,393,1.754,406,2.116,424,3.783,587,3.114,588,4.381,589,5.068,590,4.381,591,3.114,592,2.28,593,2.64,594,2.64,595,2.64,596,2.64,597,2.328,598,2.64,599,2.328,600,2.328,601,2.64,602,2.328,603,2.64,604,2.64,605,2.64,606,2.328]],["title/modules/HiddenModule.html",[323,0.84,607,2.007]],["body/modules/HiddenModule.html",[0,0.556,3,0.556,4,0.556,5,0.556,6,0.465,7,0.222,8,0.222,36,0.025,72,0.748,76,0.761,84,0.465,119,0.016,120,0.02,121,0.016,154,1.907,305,1.47,313,3.179,323,1.069,325,1.671,326,1.907,327,2.566,328,2.042,329,1.907,330,2.95,334,2.715,335,1.671,337,3.445,338,2.529,339,2.042,340,2.362,342,1.907,607,3.815,608,3.847,609,3.847,610,3.847,611,4.538,612,4.538]],["title/components/JsonSchemaFormComponent.html",[122,0.896,315,1.604]],["body/components/JsonSchemaFormComponent.html",[0,0.196,3,0.196,4,0.196,5,0.196,6,0.568,7,0.328,8,0.337,10,0.787,11,1.477,12,2.048,14,0.602,21,0.703,23,1.477,28,1.102,30,1.742,33,1.362,35,0.798,36,0.025,37,1.037,38,0.791,39,0.659,40,2.367,43,1.031,48,0.973,61,0.749,62,1.399,63,0.85,65,1.121,67,1.479,72,0.623,74,3.05,76,0.267,79,0.83,84,0.163,87,1.996,95,0.517,100,0.771,103,1.177,108,0.978,119,0.006,120,0.009,121,0.006,122,0.84,123,0.718,124,1.18,126,0.906,127,0.898,128,0.67,129,0.898,133,1.477,134,0.83,135,2.643,139,1.365,162,1.177,166,1.477,187,3.05,190,1.477,196,2.015,212,1.073,225,1.961,229,3.32,237,1.961,243,1.192,245,2.18,246,2.01,255,0.627,264,2.409,284,2.394,287,1.765,293,3.004,301,0.83,302,0.978,305,0.517,306,1.031,307,0.898,308,2.18,309,0.898,310,0.898,311,0.718,312,0.898,313,0.718,314,0.898,315,1.742,316,0.898,317,0.718,318,0.627,319,0.898,320,0.718,321,0.898,322,0.898,323,0.618,329,1.102,335,0.587,357,2.224,361,2.224,396,0.83,475,1.352,531,1.192,532,1.352,566,1.961,613,5.552,614,2.624,615,2.624,616,2.624,617,2.624,618,2.624,619,2.224,620,3.871,621,2.624,622,1.608,623,2.624,624,1.192,625,2.224,626,2.224,627,2.894,628,2.624,629,2.624,630,1.352,631,2.624,632,2.224,633,2.224,634,2.498,635,3.342,636,2.624,637,2.624,638,3.933,639,3.113,640,4.278,641,3.198,642,3.627,643,3.627,644,1.352,645,1.595,646,5.417,647,1.595,648,4.593,649,4.593,650,4.593,651,5.417,652,1.595,653,2.624,654,2.624,655,2.624,656,2.624,657,2.624,658,1.595,659,1.595,660,2.624,661,2.624,662,1.595,663,2.248,664,2.833,665,2.833,666,1.595,667,2.224,668,2.624,669,2.624,670,2.624,671,2.624,672,1.595,673,1.595,674,1.595,675,1.595,676,2.624,677,2.833,678,1.352,679,1.595,680,0.978,681,1.352,682,1.192,683,1.595,684,1.595,685,1.595,686,1.352,687,2.224,688,1.595,689,1.595,690,1.595,691,1.595,692,1.595,693,1.595,694,1.595,695,1.352,696,1.595,697,1.595,698,1.352,699,1.352,700,1.595,701,1.595,702,0.978,703,1.192,704,1.595,705,1.352,706,1.192,707,1.352,708,3.342,709,1.595,710,1.595,711,3.342,712,1.595,713,1.595,714,1.595,715,2.624,716,3.342,717,1.595,718,1.595,719,1.595,720,1.595,721,1.595,722,1.595,723,1.595,724,1.595,725,1.595,726,1.595,727,1.595,728,1.595,729,1.595,730,1.595,731,1.352,732,1.595,733,1.595,734,3.627,735,1.595,736,1.595,737,1.595,738,1.595,739,1.352,740,1.595,741,1.595,742,2.624,743,1.595,744,1.595,745,1.595,746,3.342,747,1.595,748,1.595,749,1.595,750,1.595,751,1.595,752,1.595,753,1.595,754,1.595,755,1.595,756,1.595,757,1.595,758,1.595,759,1.595,760,1.595,761,1.595,762,1.595]],["title/modules/JsonSchemaFormModule.html",[323,0.84,763,2.184]],["body/modules/JsonSchemaFormModule.html",[0,0.413,3,0.413,4,0.413,5,0.413,6,0.474,7,0.226,8,0.278,21,0.903,33,0.847,36,0.025,61,0.962,72,0.799,76,0.565,84,0.345,95,1.092,119,0.012,120,0.016,121,0.012,154,1.416,253,1.092,305,1.092,318,1.325,323,0.794,324,3.751,325,2.095,326,1.416,327,1.416,328,1.517,329,1.944,330,2.553,334,2.236,335,1.241,338,2.083,339,1.517,340,2.221,342,1.944,452,3.751,457,3.218,459,2.066,460,2.52,462,3.751,464,3.113,465,4.481,467,4.481,580,3.751,607,3.751,763,4.326,764,2.858,765,2.858,766,2.858,767,3.751,768,3.924,769,2.858,770,3.371,771,3.371,772,3.371,773,3.371,774,3.371,775,3.371,776,3.371,777,3.371]],["title/injectables/JsonSchemaFormService.html",[30,1.604,481,1.23]],["body/injectables/JsonSchemaFormService.html",[0,0.545,1,2.222,2,1.667,3,0.304,4,0.304,5,0.455,6,0.506,7,0.241,8,0.289,10,0.874,14,0.446,15,0.707,20,1.705,21,0.994,22,2.315,30,1.67,33,1.118,35,1.353,36,0.025,37,1.192,38,0.824,39,1.118,41,1.202,42,1.917,43,0.974,47,1.29,48,1.488,53,1.458,54,0.707,59,1.29,61,1.27,62,1.502,65,0.982,72,0.605,76,0.622,84,0.254,87,2.079,95,1.713,103,1.353,116,2.781,119,0.009,120,0.013,121,0.009,122,1.488,124,1.115,126,2.212,135,1.29,156,2.57,162,1.688,172,3.325,207,3.692,215,1.395,253,1.864,275,2.496,294,1.115,300,1.395,301,1.29,302,1.519,323,0.874,327,1.041,338,1.115,340,1.559,342,1.041,371,1.667,396,1.931,406,2.149,412,2.274,464,2.992,481,1.536,492,1.519,521,1.29,529,2.774,550,1.853,553,2.505,592,1.29,648,2.101,739,2.101,778,4.939,779,2.478,780,3.711,781,3.711,782,3.711,783,4.448,784,6.338,785,3.146,786,2.478,787,4.448,788,4.448,789,4.939,790,5.552,791,3.325,792,4.939,793,3.711,794,2.478,795,2.774,796,3.711,797,2.478,798,2.478,799,3.692,800,4.448,801,3.711,802,3.711,803,2.478,804,2.478,805,2.478,806,2.101,807,2.478,808,2.478,809,2.478,810,2.478,811,3.711,812,2.478,813,2.478,814,2.478,815,2.478,816,2.478,817,3.711,818,2.478,819,2.478,820,2.478,821,2.478,822,2.478,823,2.478,824,2.101,825,2.478,826,2.478,827,2.478,828,2.478,829,2.478,830,2.478,831,3.711,832,2.478,833,2.478,834,2.478,835,2.478,836,2.478,837,2.478,838,2.478,839,2.478,840,2.478,841,2.478,842,2.478,843,2.478,844,2.478,845,2.478,846,2.478]],["title/interfaces/LayoutItem.html",[477,1.401,680,2.184]],["body/interfaces/LayoutItem.html",[3,0.418,4,0.418,5,0.418,6,0.478,7,0.279,8,0.279,10,0.804,14,0.614,15,1.632,20,2.225,33,0.858,36,0.025,37,1.656,38,1.048,39,1.713,42,1.611,48,1.713,54,1.765,63,1.723,65,1.365,67,1.821,72,0.418,84,0.349,89,2.255,119,0.012,120,0.016,121,0.012,126,2.135,149,3.139,160,3.504,161,2.86,162,1.419,166,2.225,192,2.429,232,3.488,246,1.419,265,3.139,280,3.22,351,3.139,376,4.159,378,3.488,406,2.255,477,1.341,478,1.921,493,3.139,530,2.429,549,3.488,553,3.22,592,2.429,680,2.86,702,2.86,791,3.488,847,3.956,848,3.412,849,4.667,850,2.892,851,3.956,852,3.412,853,3.956,854,3.956,855,3.846,856,4.667,857,4.667,858,3.139,859,3.956,860,4.667,861,2.892]],["title/classes/LayoutNode.html",[0,0.437,26,1.722]],["body/classes/LayoutNode.html",[0,0.242,2,1.33,3,0.242,4,0.242,5,0.242,6,0.615,7,0.311,8,0.326,10,0.91,14,0.356,15,0.89,20,1.751,21,0.836,26,2.801,27,2.098,28,0.831,33,1.511,35,1.174,36,0.025,37,1.517,38,0.921,39,0.971,41,0.64,42,0.683,48,1.632,54,1.362,61,1.571,63,1.834,65,1.172,67,1.542,72,0.622,81,0.955,84,0.202,87,1.518,95,1.834,96,2.098,103,1.673,116,2.175,119,0.007,120,0.011,121,0.007,126,1.751,151,0.777,162,0.948,166,1.334,175,1.029,190,2.175,218,1.33,234,2.598,253,1.251,255,1.226,261,1.212,271,1.911,278,1.911,280,3.098,301,1.029,349,3.275,350,1.911,354,3.568,370,2.098,371,2.098,376,2.95,412,1.212,438,2.332,464,3.411,529,1.478,541,2.644,553,2.175,599,2.332,622,1.911,639,1.212,663,3.411,680,4.122,682,1.478,687,4.046,705,2.644,795,2.332,853,3.718,854,2.644,855,2.598,859,1.676,861,1.676,862,6.013,863,1.977,864,3.119,865,3.119,866,2.644,867,3.119,868,4.385,869,3.119,870,3.119,871,3.119,872,3.119,873,2.644,874,2.644,875,3.119,876,3.119,877,3.863,878,3.863,879,3.119,880,4.915,881,3.119,882,3.119,883,3.119,884,3.119,885,3.119,886,3.119,887,3.571,888,1.977,889,2.644,890,3.119,891,3.119,892,1.977,893,3.119,894,3.119,895,3.119,896,1.977,897,1.977,898,2.644,899,2.644,900,1.977,901,1.977,902,1.977,903,1.977,904,3.119,905,1.977,906,1.977,907,1.977,908,1.977,909,1.977,910,1.977,911,1.977,912,1.977,913,1.478,914,1.977,915,1.676,916,1.977,917,1.977,918,1.977,919,1.977,920,5.502,921,1.478,922,3.119,923,1.977,924,1.676,925,1.977,926,1.977,927,1.977,928,3.119,929,1.676,930,1.676,931,2.644,932,1.977,933,1.977,934,1.977,935,1.977,936,3.119,937,1.977,938,1.676,939,1.977,940,1.676,941,1.977,942,1.977,943,1.977,944,1.977,945,1.977,946,1.977,947,1.977,948,1.977,949,1.977,950,1.977,951,1.977,952,1.977,953,1.977,954,1.977,955,1.977,956,1.977,957,1.977,958,1.977,959,1.977,960,1.977,961,1.977,962,1.977]],["title/interfaces/LayoutOptions.html",[477,1.401,855,2.397]],["body/interfaces/LayoutOptions.html",[3,0.37,4,0.37,5,0.37,6,0.439,7,0.209,8,0.209,10,0.711,14,0.897,15,1.223,20,1.042,33,0.759,36,0.025,38,1.035,39,1.741,41,1.388,48,1.702,54,1.223,67,0.918,74,1.7,84,0.309,103,1.649,119,0.011,120,0.015,121,0.011,162,1.303,175,2.822,177,4.281,178,2.257,180,2.257,182,2.257,183,2.257,187,3.876,236,4.447,346,3.203,351,2.882,380,3.323,395,3.647,401,3.203,402,3.203,404,4.054,414,4.674,477,1.186,478,1.7,496,3.71,534,2.882,649,2.559,650,5.837,734,5.586,785,3.633,847,3.633,850,2.559,851,3.633,855,2.882,963,3.019,964,2.559,965,4.597,966,4.597,967,4.597,968,4.597,969,3.019,970,4.285,971,4.285,972,4.285,973,4.285,974,3.633,975,4.285,976,4.285,977,4.285,978,4.285,979,4.285,980,3.019,981,3.019,982,3.019,983,3.019,984,3.019]],["title/injectables/LayoutService.html",[481,1.23,638,2.664]],["body/injectables/LayoutService.html",[0,0.363,3,0.363,4,0.363,5,0.363,6,0.55,7,0.278,8,0.278,10,0.997,14,0.534,21,1.133,26,2.383,27,2.845,28,1.245,33,1.24,35,1.5,36,0.025,37,1.321,38,0.659,39,1.24,42,1.703,48,1.24,61,1.207,62,1.286,63,2.188,67,1.851,72,0.725,76,0.497,81,1.432,84,0.303,87,2.114,89,2.043,95,1.842,99,2.513,103,1.286,116,1.669,119,0.01,120,0.015,121,0.01,166,1.023,246,0.901,253,1.598,255,1.165,306,1.165,354,3.687,399,3.162,407,2.513,414,2.216,481,1.46,492,1.816,521,1.543,530,1.543,533,2.845,550,2.216,553,2.777,622,1.816,638,3.162,639,3.624,644,2.513,680,3.73,681,2.513,682,2.216,880,4.181,913,2.216,915,2.513,929,2.513,940,2.513,985,2.964,986,3.162,987,4.23,988,4.23,989,4.23,990,2.964,991,4.23,992,2.964,993,2.964,994,2.964,995,4.23,996,4.23,997,4.23,998,2.964,999,2.216,1000,2.964,1001,2.964,1002,2.964,1003,4.23,1004,2.964,1005,2.964,1006,2.964,1007,2.964,1008,2.964,1009,2.964,1010,4.23,1011,2.964,1012,2.513,1013,2.964,1014,2.964,1015,2.964,1016,2.964,1017,2.964,1018,2.964,1019,4.932,1020,4.932,1021,2.964,1022,4.23,1023,2.964,1024,2.964,1025,5.378,1026,2.964,1027,2.964,1028,2.964,1029,2.964,1030,2.964,1031,2.964,1032,2.964,1033,2.513,1034,2.964,1035,2.964,1036,2.964,1037,2.964,1038,2.964,1039,2.964,1040,2.964,1041,2.964]],["title/interfaces/SchemaAnalyzer.html",[477,1.401,887,2.397]],["body/interfaces/SchemaAnalyzer.html",[3,0.58,4,0.58,5,0.58,6,0.485,7,0.33,8,0.33,10,1.116,14,0.853,15,1.849,21,1.546,36,0.024,38,0.737,65,1.274,72,0.58,84,0.485,103,1.44,119,0.017,120,0.02,121,0.017,477,1.861,478,2.666,530,3.455,887,3.881,999,3.539,1042,4.735,1043,4.735,1044,5.77,1045,5.77,1046,5.491,1047,4.891,1048,5.77]],["title/injectables/SchemaService.html",[481,1.23,639,2.184]],["body/injectables/SchemaService.html",[0,0.326,3,0.326,4,0.326,5,0.326,6,0.583,7,0.33,8,0.34,10,1.093,11,1.497,14,0.479,21,1.048,27,2.63,33,1.369,35,1.41,36,0.025,37,1.242,38,0.609,39,1.166,42,1.601,61,1.459,62,0.809,63,0.861,65,1.384,72,0.722,76,0.446,84,0.272,87,2.009,89,2.24,95,1.656,96,2.63,103,0.809,116,2.202,119,0.009,120,0.014,121,0.009,166,1.35,253,1.502,255,1.537,301,1.384,302,1.63,367,2.63,396,2.035,438,3.822,481,1.35,496,2.202,521,1.384,530,2.964,533,2.63,622,1.63,624,3.822,626,2.255,627,2.923,639,2.396,663,4.217,664,4.334,665,4.334,667,3.315,686,3.315,695,3.315,702,1.63,706,1.988,731,2.255,806,2.255,887,2.63,913,1.988,924,2.255,931,2.255,938,3.315,986,2.923,999,1.988,1046,3.931,1047,4.334,1049,2.659,1050,3.91,1051,4.829,1052,3.91,1053,2.659,1054,5.448,1055,3.91,1056,3.931,1057,3.91,1058,2.659,1059,2.923,1060,3.91,1061,2.659,1062,2.659,1063,2.659,1064,2.659,1065,3.91,1066,2.659,1067,2.659,1068,3.315,1069,3.91,1070,3.91,1071,3.91,1072,3.91,1073,2.659,1074,2.659,1075,2.659,1076,2.659,1077,3.91,1078,2.659,1079,2.659,1080,2.659,1081,3.315,1082,3.91,1083,2.659,1084,2.659,1085,2.659,1086,2.659,1087,2.659,1088,2.659,1089,2.659,1090,2.659,1091,3.91,1092,2.659,1093,4.637,1094,2.659,1095,2.659,1096,2.659,1097,2.659,1098,2.659,1099,2.659,1100,2.255,1101,2.659,1102,2.659,1103,2.255,1104,2.255,1105,2.255,1106,2.659,1107,2.659,1108,2.659,1109,2.659,1110,2.659]],["title/components/SelectWidgetComponent.html",[122,0.896,317,1.604]],["body/components/SelectWidgetComponent.html",[0,0.302,1,2.848,3,0.302,4,0.302,5,0.302,6,0.454,7,0.24,8,0.258,10,0.87,11,2.08,12,2.716,14,0.798,15,1.054,16,2.08,17,2.08,18,2.08,19,2.495,20,1.53,21,0.989,22,1.922,23,2.08,24,3.313,25,3.313,26,2.379,28,1.035,30,2.215,31,2.379,32,2.069,33,1.57,35,1.123,36,0.025,37,1.413,38,0.941,39,0.928,40,2.811,41,0.798,42,1.53,43,0.968,45,1.387,46,1.282,47,2.745,48,0.619,51,1.387,53,0.968,54,1.724,56,1.387,57,1.7,59,1.282,60,1.922,61,0.703,62,1.347,63,1.709,65,0.978,67,1.497,72,0.647,74,2.495,75,1.841,76,0.413,78,1.387,79,1.282,81,1.784,83,1.19,84,0.252,87,2.073,95,0.798,102,2.761,103,1.123,108,1.509,119,0.009,120,0.013,121,0.009,122,1.326,123,1.108,124,1.662,126,1.275,127,1.387,128,1.035,129,1.387,132,2.263,134,1.282,135,3.074,137,2.263,139,1.922,142,3.702,143,1.509,144,1.509,145,1.509,146,1.509,147,1.509,148,1.509,162,1.123,204,2.263,218,1.656,253,0.798,270,2.761,275,2.484,283,1.841,299,1.509,300,1.387,301,1.282,304,1.509,305,0.798,306,1.452,307,1.387,308,2.772,309,1.387,310,1.387,311,1.108,312,1.387,313,1.108,314,1.387,315,1.108,316,1.387,317,2.215,318,2.322,319,1.387,320,1.108,321,1.387,322,1.387,410,2.088,412,2.263,459,2.716,492,1.509,534,2.484,634,3.313,795,2.761,799,2.761,921,1.841,1059,2.761,1111,3.757,1112,2.463,1113,3.693,1114,3.693,1115,4.432,1116,3.693,1117,4.432,1118,2.463,1119,4.174,1120,4.293,1121,3.693,1122,3.131,1123,2.463,1124,2.463,1125,2.463,1126,4.472,1127,3.693,1128,3.131,1129,3.131,1130,2.463,1131,2.463,1132,2.088,1133,2.088,1134,3.131,1135,2.088,1136,2.088,1137,3.757,1138,2.088,1139,2.088,1140,2.088,1141,2.463,1142,2.463,1143,2.463,1144,2.463,1145,2.463,1146,2.463,1147,2.463,1148,2.463,1149,2.463]],["title/modules/SelectWidgetModule.html",[323,0.84,457,1.722]],["body/modules/SelectWidgetModule.html",[0,0.552,3,0.552,4,0.552,5,0.552,6,0.461,7,0.22,8,0.22,36,0.025,72,0.746,76,0.756,84,0.461,119,0.016,120,0.02,121,0.016,154,1.893,305,1.46,317,3.177,318,1.771,323,1.062,325,1.659,326,1.893,327,2.558,328,2.028,329,1.893,330,2.941,334,2.704,335,1.659,337,3.43,338,2.518,339,2.028,340,2.351,342,1.893,457,3.269,459,2.762,1111,3.821,1150,3.821,1151,3.821,1152,3.821,1153,4.507,1154,4.507]],["title/components/TemplateComponent.html",[122,0.896,320,1.604]],["body/components/TemplateComponent.html",[0,0.307,1,2.731,3,0.307,4,0.307,5,0.307,6,0.383,7,0.219,8,0.243,10,0.882,11,1.411,12,2.294,14,0.451,15,1.068,16,2.107,17,2.107,18,2.107,19,2.522,20,1.546,21,1.003,22,1.948,24,1.874,25,1.874,26,1.211,28,1.572,29,1.536,30,2.235,31,2.4,32,2.087,33,1.452,35,1.138,36,0.025,37,1.424,38,0.9,39,0.941,40,2.781,41,0.812,42,1.546,43,0.985,45,1.411,46,1.304,47,2.766,48,0.63,51,1.411,53,0.985,54,1.591,56,1.411,57,1.715,59,1.304,60,1.304,61,0.716,62,1.138,65,0.826,72,0.651,74,1.411,75,1.874,76,0.42,78,1.411,79,1.304,83,1.211,84,0.257,87,1.952,100,1.211,102,1.874,103,0.762,108,1.536,119,0.009,120,0.013,121,0.009,122,1.526,123,1.128,124,2.391,125,1.686,126,2.05,127,1.411,128,1.053,129,1.411,132,2.294,133,2.107,134,1.304,135,3.09,137,2.294,139,1.948,142,3.417,143,1.536,144,1.536,145,1.536,146,1.536,147,1.536,148,1.536,151,0.985,161,1.536,162,1.362,166,1.546,168,1.686,174,1.304,192,1.304,193,1.686,195,2.294,196,2.766,197,3.012,198,1.874,202,2.798,213,1.686,215,1.411,246,0.762,253,0.812,255,0.985,294,1.684,298,1.686,299,1.536,300,1.411,301,1.304,304,1.536,305,0.812,306,1.471,307,1.411,308,2.797,309,1.411,310,1.411,311,1.128,312,1.411,313,1.128,314,1.411,315,1.128,316,1.411,317,1.128,318,0.985,319,1.411,320,2.235,321,1.411,322,1.411,350,1.536,379,1.536,406,1.808,634,2.798,791,3.348,799,2.798,858,3.012,1119,3.173,1122,2.125,1126,3.797,1128,2.125,1129,2.125,1132,2.125,1133,2.125,1134,3.173,1135,2.125,1136,2.125,1137,3.797,1138,2.125,1139,2.125,1140,2.125,1155,2.507,1156,3.973,1157,4.479,1158,3.743,1159,2.507,1160,2.125,1161,2.798,1162,1.874,1163,2.125,1164,2.125,1165,2.125,1166,2.125,1167,2.125,1168,2.125,1169,3.743,1170,2.507,1171,2.507,1172,2.507,1173,2.507,1174,2.507,1175,2.507,1176,2.507,1177,2.507,1178,2.507,1179,2.507,1180,2.507,1181,2.507,1182,2.507,1183,2.507]],["title/modules/TemplateModule.html",[323,0.84,767,2.007]],["body/modules/TemplateModule.html",[0,0.556,3,0.556,4,0.556,5,0.556,6,0.465,7,0.222,8,0.222,36,0.025,72,0.748,76,0.761,84,0.465,119,0.016,120,0.02,121,0.016,154,1.907,305,1.47,320,3.179,323,1.069,325,1.671,326,1.907,327,2.566,328,2.042,329,1.907,330,2.95,334,2.715,335,1.671,337,3.445,338,2.529,339,2.042,340,2.362,342,1.907,767,3.815,1184,3.847,1185,3.847,1186,3.847,1187,4.538,1188,4.538]],["title/interfaces/WidgetDecorator.html",[477,1.401,1189,3.021]],["body/interfaces/WidgetDecorator.html",[3,0.613,4,0.613,5,0.613,6,0.512,7,0.244,8,0.244,10,1.178,14,0.9,15,1.818,36,0.024,38,0.779,54,1.818,63,2.064,84,0.512,119,0.017,120,0.021,121,0.017,151,2.593,477,1.965,478,2.815,930,5.054,1189,5.054,1190,5,1191,5,1192,5,1193,5.962,1194,5.962]],["title/injectables/WidgetLibraryService.html",[481,1.23,1120,2.664]],["body/injectables/WidgetLibraryService.html",[0,0.697,1,2.56,3,0.478,4,0.478,5,0.478,6,0.522,7,0.249,8,0.249,10,1.203,14,0.702,21,1.367,26,2.465,33,0.98,35,1.186,36,0.025,37,1.045,38,1.063,39,0.98,41,1.263,48,1.517,54,1.834,62,1.186,63,1.263,72,0.625,76,0.654,84,0.522,87,1.532,95,1.263,103,1.186,116,2.195,119,0.014,120,0.018,121,0.014,122,1.615,151,1.532,229,2.389,253,1.263,255,1.532,284,2.029,293,2.029,424,2.389,481,1.762,506,2.623,521,2.029,530,2.96,533,3.432,565,3.306,566,2.915,592,2.656,986,3.815,1012,3.306,1068,4.326,1120,3.815,1195,3.815,1196,2.915,1197,5.103,1198,5.103,1199,5.103,1200,3.899,1201,3.899,1202,3.306,1203,3.306,1204,3.306,1205,5.103,1206,3.899,1207,5.103,1208,3.899,1209,3.306,1210,3.899,1211,3.899,1212,3.899,1213,3.899,1214,3.899]],["title/changelog.html",[1215,2.021,1216,2.021,1217,2.547]],["body/changelog.html",[36,0.022,100,2.622,119,0.019,120,0.022,121,0.019,187,3.056,549,4.057,1217,5.304,1218,5.428,1219,4.602,1220,4.602,1221,5.428,1222,3.056]],["title/contributing.html",[1215,2.021,1216,2.021,1223,2.547]],["body/contributing.html",[4,0.588,7,0.234,8,0.234,36,0.017,60,2.827,119,0.012,120,0.017,121,0.012,150,2.178,155,3.227,156,1.849,163,2.178,192,1.849,196,1.849,223,1.717,226,2.178,245,2.701,246,1.081,252,4.982,255,2.286,284,1.849,287,2.39,293,1.849,302,2.178,368,2.656,370,2.39,375,2.656,379,2.178,380,2.178,381,2.656,388,3.586,542,3.013,625,3.013,698,3.013,699,3.013,706,2.656,824,3.013,873,3.013,899,3.013,1033,3.013,1219,3.013,1220,4.067,1223,4.067,1224,5.816,1225,6.259,1226,3.554,1227,6.074,1228,3.554,1229,3.554,1230,3.554,1231,3.554,1232,5.816,1233,4.798,1234,3.554,1235,4.347,1236,3.554,1237,3.554,1238,6.398,1239,3.554,1240,4.798,1241,5.432,1242,5.816,1243,5.816,1244,5.432,1245,4.54,1246,3.554,1247,4.798,1248,3.554,1249,3.554,1250,3.554,1251,3.554,1252,3.554,1253,3.554,1254,3.554,1255,3.554,1256,4.798,1257,3.013,1258,4.798,1259,5.816,1260,4.798,1261,4.798,1262,5.816,1263,6.074,1264,3.554,1265,3.554,1266,3.554,1267,3.013,1268,3.554,1269,3.554,1270,3.554,1271,3.554,1272,3.554,1273,3.554,1274,3.554,1275,3.554,1276,3.554,1277,3.554,1278,4.798,1279,3.554,1280,3.554,1281,3.554,1282,3.554,1283,3.554,1284,3.554,1285,3.554,1286,3.554,1287,3.554,1288,3.554,1289,3.554,1290,4.798,1291,3.554,1292,3.013,1293,3.554,1294,3.554,1295,3.554,1296,3.554,1297,3.554,1298,4.067,1299,3.554,1300,3.554,1301,3.554,1302,3.554,1303,3.554,1304,3.554,1305,3.554]],["title/dependencies.html",[326,1.794,1306,3.005]],["body/dependencies.html",[7,0.269,8,0.294,36,0.025,67,1.334,76,0.735,77,3.719,119,0.015,120,0.019,121,0.015,215,2.47,326,1.843,339,1.974,469,3.372,470,3.098,622,3.372,624,3.279,627,3.279,630,3.719,632,3.719,633,3.719,678,3.719,921,3.279,1051,3.719,1156,3.279,1307,4.386,1308,6.951,1309,4.386,1310,4.386,1311,4.386,1312,4.386,1313,4.386,1314,4.386,1315,4.386,1316,4.386,1317,4.386,1318,4.386,1319,4.386,1320,4.386,1321,4.386,1322,4.386,1323,4.386,1324,4.386,1325,4.386,1326,4.386,1327,4.386,1328,4.386,1329,4.386,1330,4.386,1331,4.386,1332,4.386,1333,4.386,1334,4.386,1335,4.386,1336,4.386,1337,4.386,1338,4.386,1339,4.386]],["title/miscellaneous/functions.html",[1340,1.692,1341,3.621]],["body/miscellaneous/functions.html",[6,0.602,7,0.287,8,0.287,14,0.88,35,1.788,36,0.024,37,1.576,39,1.478,54,1.964,61,1.679,62,1.486,119,0.017,120,0.021,121,0.017,122,1.229,151,2.312,229,2.995,284,2.544,293,3.061,1081,4.144,1195,3.654,1196,4.397,1203,4.144,1204,4.144,1340,2.752,1341,4.144,1342,5.882,1343,4.144,1344,4.888,1345,4.888,1346,4.888,1347,4.888,1348,4.888]],["title/index.html",[14,0.541,1215,2.021,1216,2.021]],["body/index.html",[0,0.493,7,0.322,8,0.326,36,0.025,72,0.775,76,0.674,84,0.411,100,1.941,119,0.014,120,0.018,121,0.014,122,1.01,126,1.387,156,2.091,158,2.263,186,2.703,192,2.708,196,3.291,226,2.463,245,2.93,246,1.97,261,2.463,293,2.091,323,0.947,327,1.688,328,1.808,335,1.916,340,2.186,342,1.688,393,2.263,405,2.703,434,3.407,469,2.463,470,2.263,531,3.004,600,3.004,702,2.463,703,3.004,707,3.407,763,3.189,1056,3.407,1059,3.004,1209,3.407,1235,4.564,1257,3.407,1349,4.019,1350,4.019,1351,4.019,1352,4.019,1353,4.019,1354,4.019,1355,4.019,1356,4.019,1357,4.019,1358,4.019,1359,4.019,1360,4.019,1361,4.019,1362,4.019,1363,4.019,1364,5.204,1365,4.019,1366,4.019,1367,4.019,1368,5.204,1369,4.019,1370,4.019,1371,4.019,1372,4.019,1373,4.019,1374,4.019,1375,4.019,1376,4.019,1377,5.204,1378,5.772,1379,4.019,1380,4.019,1381,4.019,1382,3.004,1383,4.019,1384,4.019,1385,4.019,1386,4.019,1387,4.019,1388,4.019,1389,4.019]],["title/license.html",[1215,2.021,1216,2.021,1245,2.246]],["body/license.html",[7,0.288,8,0.288,36,0.019,53,1.65,57,1.45,119,0.015,120,0.019,121,0.015,156,2.786,195,2.573,245,3.014,246,1.792,335,1.546,405,2.824,597,3.139,606,3.139,619,3.56,641,3.139,677,3.56,898,4.538,964,3.56,974,3.56,1235,4.405,1245,3.139,1267,3.56,1298,3.56,1382,3.139,1390,6.206,1391,5.353,1392,5.353,1393,4.199,1394,4.199,1395,4.199,1396,4.199,1397,4.199,1398,4.199,1399,4.199,1400,4.199,1401,5.353,1402,4.199,1403,4.199,1404,4.199,1405,4.199,1406,3.56,1407,4.199,1408,6.809,1409,4.199,1410,4.199,1411,4.199,1412,5.893,1413,4.199,1414,5.353,1415,4.199,1416,4.199,1417,4.199,1418,4.199,1419,4.199,1420,4.199,1421,4.199,1422,5.353,1423,4.199,1424,4.199,1425,4.199,1426,4.199,1427,5.353,1428,5.353,1429,4.199,1430,4.199,1431,4.199,1432,4.199,1433,4.199,1434,4.199,1435,4.199,1436,4.199,1437,4.199,1438,4.199,1439,4.199,1440,4.199,1441,4.199,1442,4.199,1443,4.199,1444,4.199,1445,4.199,1446,4.199,1447,4.199,1448,4.199,1449,4.199,1450,4.199,1451,4.199]],["title/modules.html",[325,1.77]],["body/modules.html",[36,0.021,119,0.017,120,0.021,121,0.017,324,2.822,325,1.846,452,2.822,457,2.422,462,2.822,470,3.894,580,2.822,607,2.822,763,3.072,767,2.822,1162,5.169,1452,6.916,1453,6.971,1454,5.013,1455,5.013]],["title/overview.html",[1456,4.075]],["body/overview.html",[2,2.352,36,0.025,119,0.012,120,0.017,121,0.012,123,2.867,124,1.573,154,1.469,305,1.133,311,2.867,313,2.867,315,2.867,317,2.867,320,2.867,323,0.824,324,3.741,325,1.287,326,1.469,327,1.469,328,1.573,329,1.469,330,1.689,331,2.964,332,2.964,333,2.964,334,2.293,335,1.287,383,2.352,452,3.804,453,2.964,454,2.964,455,2.964,456,2.964,457,3.264,462,3.587,478,1.969,521,1.82,580,3.804,581,2.964,582,2.964,584,2.964,607,3.741,608,2.964,609,2.964,610,2.964,763,4.316,764,2.964,765,2.964,766,2.964,767,3.741,1100,4.023,1150,2.964,1151,2.964,1152,2.964,1161,2.614,1184,2.964,1185,2.964,1186,2.964,1456,2.964,1457,3.497]],["title/miscellaneous/typealiases.html",[1340,1.692,1458,4.271]],["body/miscellaneous/typealiases.html",[6,0.541,7,0.258,8,0.258,14,0.951,36,0.021,38,0.822,57,2.318,65,1.166,119,0.018,120,0.021,121,0.018,244,3.774,479,3.948,480,4.603,484,3.948,485,3.948,1340,2.974,1459,5.282,1460,5.282]],["title/miscellaneous/variables.html",[1340,1.692,1461,3.621]],["body/miscellaneous/variables.html",[6,0.602,7,0.287,8,0.32,14,0.88,36,0.024,38,0.916,41,2.044,42,2.031,119,0.017,120,0.021,121,0.017,255,1.921,324,2.752,325,2.165,452,2.752,457,2.361,462,2.752,530,3.283,580,2.752,592,3.283,607,2.752,767,2.752,768,4.144,769,4.986,1195,3.654,1196,4.397,1202,4.144,1340,2.752,1343,4.144,1461,4.144,1462,4.888]],["title/additional-documentation/introduction.html",[1222,1.692,1463,1.841,1464,3.005]],["body/additional-documentation/introduction.html",[0,0.516,3,0.361,7,0.288,8,0.336,10,1.264,15,1.531,20,1.852,36,0.025,37,1.581,38,0.985,40,1.326,43,1.158,48,1.059,54,0.841,63,0.954,67,1.847,72,0.723,74,1.659,84,0.431,89,2.935,100,1.423,103,1.281,119,0.01,120,0.015,121,0.01,122,1.562,126,1.697,133,2.371,155,1.982,158,3.02,163,1.806,174,2.558,175,2.791,186,1.982,187,2.371,212,1.982,216,2.202,223,2.035,230,2.202,234,2.833,246,1.847,247,2.202,261,1.806,264,1.659,265,1.982,284,1.533,286,3.674,294,2.413,296,1.806,335,1.085,380,2.581,383,1.982,384,2.202,393,1.659,395,2.833,396,2.192,398,2.202,417,2.202,430,2.498,496,2.768,501,2.202,534,3.306,553,1.659,592,2.192,602,2.202,641,2.202,642,2.498,643,2.498,663,3.97,702,2.581,703,2.202,866,2.498,874,2.498,889,3.571,965,3.571,966,3.571,967,3.571,968,3.571,1103,3.571,1104,3.571,1105,3.571,1292,2.498,1382,2.202,1406,3.571,1465,2.946,1466,2.946,1467,5.364,1468,4.212,1469,4.212,1470,4.212,1471,4.212,1472,2.946,1473,6.076,1474,2.946,1475,2.946,1476,2.946,1477,2.946,1478,2.946,1479,2.946,1480,4.916,1481,2.946,1482,2.946,1483,2.946,1484,2.946,1485,2.946,1486,2.946,1487,2.946,1488,4.212,1489,2.946,1490,2.946,1491,2.946,1492,2.946,1493,2.946,1494,2.946,1495,4.212,1496,2.946,1497,2.946,1498,2.946,1499,2.946,1500,2.946,1501,2.946,1502,2.946,1503,2.946,1504,2.946,1505,2.946,1506,2.946,1507,2.946,1508,2.946,1509,2.946,1510,2.946,1511,2.946]],["title/additional-documentation/buttons.html",[149,2.021,1222,1.692,1463,1.841]],["body/additional-documentation/buttons.html",[0,0.35,5,0.35,7,0.139,8,0.139,15,1.175,20,0.985,36,0.024,38,0.823,40,2.378,41,0.924,48,0.717,53,1.121,54,0.814,57,2.077,62,0.867,63,0.924,65,0.908,67,1.908,72,0.504,84,0.292,100,1.378,119,0.017,120,0.014,121,0.014,122,1.408,126,2.077,128,1.729,133,1.606,134,1.484,136,4.604,139,1.484,149,3.769,150,1.748,151,1.121,152,2.132,153,4.75,154,1.198,155,3.554,156,2.141,157,3.488,158,2.317,159,2.418,160,2.958,161,1.748,162,1.468,163,3.238,164,4.092,165,4.48,166,1.421,167,2.418,168,1.919,169,3.076,170,3.488,171,2.418,172,3.076,173,1.919,174,2.512,175,2.512,176,2.132,177,3.608,178,2.132,179,2.418,180,2.132,181,3.488,182,2.132,183,2.132,184,2.418,185,2.418,186,1.919,187,1.606,188,2.418,189,2.418,190,1.606,191,2.418,192,2.141,193,1.919,194,2.418,195,1.748,196,2.75,197,2.768,198,3.076,199,2.418,200,2.418,201,2.418,202,2.132,203,2.418,204,1.748,205,2.418,206,2.418,207,2.132,208,2.418,209,2.418,210,2.418,211,2.418,212,1.919,213,1.919,214,3.488,215,1.606,216,2.132,217,2.418,218,2.768,219,2.418,220,3.488,221,2.418,222,2.418,223,1.988,224,3.769,225,3.076,226,1.748,227,2.418,228,5.101,229,2.522,230,3.076,231,2.418,232,2.132,233,2.418,234,2.768,235,4.092,236,3.95,237,3.608,238,4.092,239,3.488,240,4.75,241,2.418,242,2.418,243,2.132,244,2.522,245,1.606,246,1.251,247,2.132,248,2.418,249,3.488,250,2.418,251,4.092,252,3.076,253,0.924,254,2.418,255,1.121,256,2.418,257,2.418,258,2.418,259,2.418,260,2.418,261,1.748,262,2.418,263,2.418,264,1.606,265,2.768,266,2.418,267,2.418,268,2.418,269,3.488,270,2.132,271,1.748,272,2.418,273,2.418,274,3.488,275,2.768,276,2.418,277,1.919,278,1.748,279,2.418,280,1.606,281,2.418,282,2.418,283,2.132,284,1.484,285,2.418,286,3.076,287,3.247,288,2.418,289,2.418,290,2.418,291,2.418,292,2.418,293,1.484,294,1.283,295,2.418,296,1.748,297,2.418]],["title/additional-documentation/containers.html",[363,2.246,1222,1.692,1463,1.841]],["body/additional-documentation/containers.html",[20,1.238,36,0.025,38,1.049,39,0.901,41,1.564,46,1.866,63,1.162,67,1.468,89,1.732,119,0.012,120,0.017,121,0.012,150,2.198,151,1.409,158,2.019,160,2.958,166,1.238,173,2.412,174,3.038,175,3.337,190,2.019,223,1.732,246,1.775,271,2.198,278,2.958,296,3.93,306,1.897,318,1.409,344,5.32,345,5.165,346,4.364,350,3.344,351,4.221,363,3.608,364,3.04,365,5.32,366,4.092,367,2.412,368,2.681,369,4.949,370,2.412,371,3.247,372,3.04,373,3.04,374,3.04,375,2.681,376,4.385,377,3.04,378,2.681,379,2.198,380,2.198,381,2.681,382,4.949,383,3.926,384,4.364,385,3.04,386,3.04,387,3.04,388,3.608,389,3.04,390,3.04,391,3.04,392,3.04,393,2.019,394,3.04,395,3.247,396,1.866,397,3.04,398,2.681,399,2.681,400,3.04,401,5.155,402,3.608,403,3.04,404,3.608,405,2.412,406,1.732]],["title/additional-documentation/hidden-inputs.html",[23,1.462,424,1.591,1222,1.462,1463,1.591]],["body/additional-documentation/hidden-inputs.html",[23,2.866,36,0.022,41,1.649,57,1.757,65,1.124,67,1.548,119,0.018,120,0.021,121,0.018,204,3.12,246,1.548,280,2.866,294,2.711,393,2.866,406,2.911,424,4.066,592,3.136,593,4.316,594,4.316,595,4.316,596,4.316,597,3.805,598,4.316,599,3.805,600,3.805,601,4.316,602,3.805,603,4.316,604,4.316,605,4.316,606,3.805]],["title/additional-documentation/templates.html",[858,2.021,1222,1.692,1463,1.841]],["body/additional-documentation/templates.html",[36,0.024,38,0.759,54,1.676,65,1.076,119,0.017,120,0.02,121,0.017,124,2.643,126,2.176,133,2.745,161,2.988,162,1.483,166,2.176,168,3.28,174,2.537,192,2.537,193,3.28,195,3.599,196,3.404,197,3.28,213,3.28,215,2.745,246,1.483,294,2.194,350,2.988,379,2.988,406,2.837,858,3.28,1156,3.645,1160,4.134,1161,3.645,1162,3.645,1163,4.134,1164,4.134,1165,4.134,1166,4.134,1167,4.134,1168,4.134]]],"invertedIndex":[["",{"_index":36,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"components/TemplateComponent.html":{},"modules/TemplateModule.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{},"additional-documentation/containers.html":{},"additional-documentation/hidden-inputs.html":{},"additional-documentation/templates.html":{}}}],["0",{"_index":417,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/ElementDataStorageService.html":{},"additional-documentation/introduction.html":{}}}],["0.0.36",{"_index":1318,"title":{},"body":{"dependencies.html":{}}}],["0.11.0",{"_index":1324,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1329,"title":{},"body":{"dependencies.html":{}}}],["0.3.9",{"_index":1334,"title":{},"body":{"dependencies.html":{}}}],["0.3s",{"_index":443,"title":{},"body":{"components/ContainerComponent.html":{}}}],["0.4.1",{"_index":1330,"title":{},"body":{"dependencies.html":{}}}],["0.9.1",{"_index":1339,"title":{},"body":{"dependencies.html":{}}}],["07",{"_index":1095,"title":{},"body":{"injectables/SchemaService.html":{}}}],["07/schema",{"_index":1105,"title":{},"body":{"injectables/SchemaService.html":{},"additional-documentation/introduction.html":{}}}],["1",{"_index":382,"title":{},"body":{"components/ContainerComponent.html":{},"additional-documentation/containers.html":{}}}],["1.9.0",{"_index":1337,"title":{},"body":{"dependencies.html":{}}}],["12px",{"_index":448,"title":{},"body":{"components/ContainerComponent.html":{}}}],["140",{"_index":1285,"title":{},"body":{"contributing.html":{}}}],["14px",{"_index":440,"title":{},"body":{"components/ContainerComponent.html":{}}}],["16px",{"_index":441,"title":{},"body":{"components/ContainerComponent.html":{}}}],["18",{"_index":1499,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["1px",{"_index":426,"title":{},"body":{"components/ContainerComponent.html":{}}}],["2",{"_index":383,"title":{},"body":{"components/ContainerComponent.html":{},"overview.html":{},"additional-documentation/introduction.html":{},"additional-documentation/containers.html":{}}}],["2.5.4",{"_index":1327,"title":{},"body":{"dependencies.html":{}}}],["2014",{"_index":1396,"title":{},"body":{"license.html":{}}}],["2019",{"_index":1400,"title":{},"body":{"license.html":{}}}],["3",{"_index":384,"title":{},"body":{"components/ContainerComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/containers.html":{}}}],["30",{"_index":181,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["333",{"_index":1511,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["4",{"_index":150,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"contributing.html":{},"additional-documentation/buttons.html":{},"additional-documentation/containers.html":{}}}],["4.1.2",{"_index":1328,"title":{},"body":{"dependencies.html":{}}}],["4.14.136",{"_index":1322,"title":{},"body":{"dependencies.html":{}}}],["4.17.14",{"_index":1331,"title":{},"body":{"dependencies.html":{}}}],["4/6",{"_index":1055,"title":{},"body":{"injectables/SchemaService.html":{}}}],["5",{"_index":1161,"title":{},"body":{"components/TemplateComponent.html":{},"overview.html":{},"additional-documentation/templates.html":{}}}],["6",{"_index":1100,"title":{},"body":{"injectables/SchemaService.html":{},"overview.html":{}}}],["6.0.1",{"_index":1332,"title":{},"body":{"dependencies.html":{}}}],["6.10.0",{"_index":1323,"title":{},"body":{"dependencies.html":{}}}],["6.5.2",{"_index":1335,"title":{},"body":{"dependencies.html":{}}}],["6px",{"_index":447,"title":{},"body":{"components/ContainerComponent.html":{}}}],["7",{"_index":1056,"title":{},"body":{"injectables/SchemaService.html":{},"index.html":{}}}],["7.0.0",{"_index":1312,"title":{},"body":{"dependencies.html":{}}}],["7.0.3",{"_index":1320,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1308,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1457,"title":{},"body":{"overview.html":{}}}],["_blank",{"_index":669,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["_layout",{"_index":1002,"title":{},"body":{"injectables/LayoutService.html":{}}}],["_layoutnode",{"_index":88,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["_layoutnode.options.title",{"_index":420,"title":{},"body":{"components/ContainerComponent.html":{}}}],["_parent",{"_index":670,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["_schema",{"_index":1074,"title":{},"body":{"injectables/SchemaService.html":{}}}],["_self",{"_index":668,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["_top",{"_index":671,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["above",{"_index":405,"title":{},"body":{"components/ContainerComponent.html":{},"index.html":{},"license.html":{},"additional-documentation/containers.html":{}}}],["abstract",{"_index":85,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["abstractcontrol",{"_index":51,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["abstractwidget",{"_index":1,"title":{"classes/AbstractWidget.html":{}},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"injectables/WidgetLibraryService.html":{}}}],["abstractwidget:12",{"_index":144,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["abstractwidget:14",{"_index":145,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["abstractwidget:16",{"_index":146,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["abstractwidget:18",{"_index":147,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["abstractwidget:20",{"_index":148,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["abstractwidget:24",{"_index":1125,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["abstractwidget:33",{"_index":1124,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["abstractwidget:35",{"_index":1123,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["abstractwidget:66",{"_index":143,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["accepted",{"_index":1278,"title":{},"body":{"contributing.html":{}}}],["accessing",{"_index":904,"title":{},"body":{"classes/LayoutNode.html":{}}}],["accesskey",{"_index":965,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["accessors",{"_index":27,"title":{},"body":{"classes/AbstractWidget.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{}}}],["accordingly",{"_index":282,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["ace",{"_index":632,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"dependencies.html":{}}}],["act",{"_index":281,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["action",{"_index":641,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"license.html":{},"additional-documentation/introduction.html":{}}}],["active",{"_index":446,"title":{},"body":{"components/ContainerComponent.html":{}}}],["acts",{"_index":271,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"classes/LayoutNode.html":{},"additional-documentation/buttons.html":{},"additional-documentation/containers.html":{}}}],["actual",{"_index":602,"title":{},"body":{"components/HiddenComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/hidden-inputs.html":{}}}],["actual_component",{"_index":322,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["add",{"_index":226,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/ElementDataStorageService.html":{},"contributing.html":{},"index.html":{},"additional-documentation/buttons.html":{}}}],["added",{"_index":390,"title":{},"body":{"components/ContainerComponent.html":{},"additional-documentation/containers.html":{}}}],["addeventlistener",{"_index":522,"title":{},"body":{"injectables/DataEventPluginService.html":{}}}],["addeventlistener(element",{"_index":503,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["adding",{"_index":403,"title":{},"body":{"components/ContainerComponent.html":{},"additional-documentation/containers.html":{}}}],["addition",{"_index":628,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["additional",{"_index":1463,"title":{"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{},"additional-documentation/containers.html":{},"additional-documentation/hidden-inputs.html":{},"additional-documentation/templates.html":{}},"body":{}}],["adds",{"_index":500,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["afterviewinit",{"_index":13,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["again",{"_index":1174,"title":{},"body":{"components/TemplateComponent.html":{}}}],["against",{"_index":697,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["age",{"_index":1473,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["ajv",{"_index":624,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{},"dependencies.html":{}}}],["ajv.ajv",{"_index":1085,"title":{},"body":{"injectables/SchemaService.html":{}}}],["ajv.validatefunction",{"_index":1090,"title":{},"body":{"injectables/SchemaService.html":{}}}],["ajv]{@link",{"_index":728,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["aliases",{"_index":1459,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allerrors",{"_index":1086,"title":{},"body":{"injectables/SchemaService.html":{}}}],["allow",{"_index":379,"title":{},"body":{"components/ContainerComponent.html":{},"components/TemplateComponent.html":{},"contributing.html":{},"additional-documentation/containers.html":{},"additional-documentation/templates.html":{}}}],["allowing",{"_index":278,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"classes/LayoutNode.html":{},"additional-documentation/buttons.html":{},"additional-documentation/containers.html":{}}}],["allows",{"_index":367,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/ElementDataStorageService.html":{},"injectables/SchemaService.html":{},"additional-documentation/containers.html":{}}}],["along",{"_index":867,"title":{},"body":{"classes/LayoutNode.html":{}}}],["already",{"_index":1209,"title":{},"body":{"injectables/WidgetLibraryService.html":{},"index.html":{}}}],["alt",{"_index":183,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/LayoutOptions.html":{},"additional-documentation/buttons.html":{}}}],["analyzer.data",{"_index":924,"title":{},"body":{"classes/LayoutNode.html":{},"injectables/SchemaService.html":{}}}],["analyzer.data.ts",{"_index":1043,"title":{},"body":{"interfaces/SchemaAnalyzer.html":{}}}],["and/or",{"_index":619,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"license.html":{}}}],["angular",{"_index":196,"title":{},"body":{"components/ButtonComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/TemplateComponent.html":{},"contributing.html":{},"index.html":{},"additional-documentation/buttons.html":{},"additional-documentation/templates.html":{}}}],["angular/animations",{"_index":1307,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1309,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":339,"title":{},"body":{"modules/ButtonModule.html":{},"modules/ContainerModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/HiddenModule.html":{},"modules/JsonSchemaFormModule.html":{},"modules/SelectWidgetModule.html":{},"modules/TemplateModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1310,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":76,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"components/TemplateComponent.html":{},"modules/TemplateModule.html":{},"injectables/WidgetLibraryService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/flex",{"_index":1311,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":77,"title":{},"body":{"classes/AbstractWidget.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1314,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1315,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":469,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/router",{"_index":1316,"title":{},"body":{"dependencies.html":{}}}],["angular2",{"_index":1397,"title":{},"body":{"license.html":{}}}],["angular]{@link",{"_index":724,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["angularjs",{"_index":710,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["another",{"_index":625,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"contributing.html":{}}}],["aot",{"_index":197,"title":{},"body":{"components/ButtonComponent.html":{},"components/TemplateComponent.html":{},"additional-documentation/buttons.html":{},"additional-documentation/templates.html":{}}}],["api",{"_index":705,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{}}}],["app.component",{"_index":1379,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":1378,"title":{},"body":{"index.html":{}}}],["appears",{"_index":1169,"title":{},"body":{"components/TemplateComponent.html":{}}}],["application",{"_index":1376,"title":{},"body":{"index.html":{}}}],["application/x",{"_index":653,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["applied",{"_index":494,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["appmodule",{"_index":1381,"title":{},"body":{"index.html":{}}}],["appropriate",{"_index":860,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["args",{"_index":1081,"title":{},"body":{"injectables/SchemaService.html":{},"miscellaneous/functions.html":{}}}],["arising",{"_index":1449,"title":{},"body":{"license.html":{}}}],["array",{"_index":63,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{},"additional-documentation/containers.html":{}}}],["array.from(schemapointers.keys",{"_index":1029,"title":{},"body":{"injectables/LayoutService.html":{}}}],["array.from(this.mappedpointers",{"_index":1031,"title":{},"body":{"injectables/LayoutService.html":{}}}],["arrayitem",{"_index":959,"title":{},"body":{"classes/LayoutNode.html":{}}}],["arrayitemtype",{"_index":960,"title":{},"body":{"classes/LayoutNode.html":{}}}],["arrays",{"_index":540,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["assert",{"_index":1303,"title":{},"body":{"contributing.html":{}}}],["assets/submit.png",{"_index":179,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["associated",{"_index":53,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"license.html":{},"additional-documentation/buttons.html":{}}}],["associating",{"_index":1194,"title":{},"body":{"interfaces/WidgetDecorator.html":{}}}],["association",{"_index":267,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["attemtps",{"_index":1351,"title":{},"body":{"index.html":{}}}],["attribute",{"_index":649,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutOptions.html":{}}}],["attributes",{"_index":534,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"interfaces/LayoutOptions.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/introduction.html":{}}}],["augmenting",{"_index":870,"title":{},"body":{"classes/LayoutNode.html":{}}}],["authors",{"_index":1440,"title":{},"body":{"license.html":{}}}],["autocomplete",{"_index":642,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{}}}],["automatically",{"_index":549,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"interfaces/LayoutItem.html":{},"changelog.html":{}}}],["available",{"_index":1455,"title":{},"body":{"modules.html":{}}}],["availablepointers",{"_index":1028,"title":{},"body":{"injectables/LayoutService.html":{}}}],["background",{"_index":429,"title":{},"body":{"components/ContainerComponent.html":{}}}],["backwards",{"_index":1099,"title":{},"body":{"injectables/SchemaService.html":{}}}],["based",{"_index":1059,"title":{},"body":{"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"index.html":{}}}],["basic",{"_index":1369,"title":{},"body":{"index.html":{}}}],["basic.component.ts",{"_index":1483,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["basiccomponent",{"_index":1484,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["become",{"_index":1493,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["before",{"_index":1230,"title":{},"body":{"contributing.html":{}}}],["begin",{"_index":1370,"title":{},"body":{"index.html":{}}}],["behavior",{"_index":1253,"title":{},"body":{"contributing.html":{}}}],["being",{"_index":165,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["benefit",{"_index":391,"title":{},"body":{"components/ContainerComponent.html":{},"additional-documentation/containers.html":{}}}],["beta.24",{"_index":1313,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":1261,"title":{},"body":{"contributing.html":{}}}],["bind",{"_index":172,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/JsonSchemaFormService.html":{},"additional-documentation/buttons.html":{}}}],["bindings",{"_index":171,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["binds",{"_index":189,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["block",{"_index":451,"title":{},"body":{"components/ContainerComponent.html":{}}}],["boolean",{"_index":496,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"interfaces/LayoutOptions.html":{},"injectables/SchemaService.html":{},"additional-documentation/introduction.html":{}}}],["bootstrap",{"_index":328,"title":{},"body":{"modules/ButtonModule.html":{},"modules/ContainerModule.html":{},"modules/FormModule.html":{},"modules/HiddenModule.html":{},"modules/JsonSchemaFormModule.html":{},"modules/SelectWidgetModule.html":{},"modules/TemplateModule.html":{},"index.html":{},"overview.html":{}}}],["border",{"_index":425,"title":{},"body":{"components/ContainerComponent.html":{}}}],["both",{"_index":688,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["bound",{"_index":262,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["brace",{"_index":630,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"dependencies.html":{}}}],["brace]{@link",{"_index":732,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["bring",{"_index":1362,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1453,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":470,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browserified",{"_index":631,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["browsermodule",{"_index":1377,"title":{},"body":{"index.html":{}}}],["bubble",{"_index":260,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["bug",{"_index":1256,"title":{},"body":{"contributing.html":{}}}],["bugs",{"_index":1237,"title":{},"body":{"contributing.html":{}}}],["builder",{"_index":1350,"title":{},"body":{"index.html":{}}}],["buildlayout(layout",{"_index":1023,"title":{},"body":{"injectables/LayoutService.html":{}}}],["bunch",{"_index":1385,"title":{},"body":{"index.html":{}}}],["button",{"_index":136,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"additional-documentation/buttons.html":{}}}],["button'},{'name",{"_index":310,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["button.component",{"_index":341,"title":{},"body":{"modules/ButtonModule.html":{}}}],["button.component.html",{"_index":140,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button.component.scss",{"_index":138,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button.html",{"_index":185,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["button/button.module",{"_index":771,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["button1",{"_index":235,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["button2",{"_index":238,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["buttoncomponent",{"_index":123,"title":{"components/ButtonComponent.html":{}},"body":{"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"overview.html":{}}}],["buttonmodule",{"_index":324,"title":{"modules/ButtonModule.html":{}},"body":{"modules/ButtonModule.html":{},"modules/JsonSchemaFormModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["buttons",{"_index":149,"title":{"additional-documentation/buttons.html":{}},"body":{"components/ButtonComponent.html":{},"interfaces/LayoutItem.html":{},"additional-documentation/buttons.html":{}}}],["can't",{"_index":594,"title":{},"body":{"components/HiddenComponent.html":{},"additional-documentation/hidden-inputs.html":{}}}],["care",{"_index":1495,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["case",{"_index":283,"title":{},"body":{"components/ButtonComponent.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/buttons.html":{}}}],["catch",{"_index":1037,"title":{},"body":{"injectables/LayoutService.html":{}}}],["cb",{"_index":1080,"title":{},"body":{"injectables/SchemaService.html":{}}}],["ccc",{"_index":428,"title":{},"body":{"components/ContainerComponent.html":{}}}],["change",{"_index":60,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"contributing.html":{}}}],["changedetection",{"_index":636,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["changedetectionstrategy",{"_index":675,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":637,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["changelog",{"_index":1217,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":204,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/buttons.html":{},"additional-documentation/hidden-inputs.html":{}}}],["changes.hasownproperty('layout",{"_index":745,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["changes.hasownproperty('schema",{"_index":744,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["changing",{"_index":1101,"title":{},"body":{"injectables/SchemaService.html":{}}}],["characters",{"_index":1286,"title":{},"body":{"contributing.html":{}}}],["charge",{"_index":1405,"title":{},"body":{"license.html":{}}}],["check",{"_index":1364,"title":{},"body":{"index.html":{}}}],["checkmark",{"_index":184,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["childnodes",{"_index":880,"title":{},"body":{"classes/LayoutNode.html":{},"injectables/LayoutService.html":{}}}],["children",{"_index":349,"title":{},"body":{"components/ContainerComponent.html":{},"classes/LayoutNode.html":{}}}],["choice",{"_index":292,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["claim",{"_index":1443,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractWidget.html":{},"classes/LayoutNode.html":{}},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"components/TemplateComponent.html":{},"modules/TemplateModule.html":{},"injectables/WidgetLibraryService.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractWidget.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"overview.html":{}}}],["click",{"_index":222,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["click.data.layout",{"_index":263,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["clicked",{"_index":259,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["client",{"_index":614,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["clonedeep",{"_index":913,"title":{},"body":{"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{}}}],["clonedeep(schema",{"_index":1092,"title":{},"body":{"injectables/SchemaService.html":{}}}],["clonedeep(this.layoutitem",{"_index":946,"title":{},"body":{"classes/LayoutNode.html":{}}}],["cluster_buttonmodule",{"_index":331,"title":{},"body":{"modules/ButtonModule.html":{},"overview.html":{}}}],["cluster_buttonmodule_declarations",{"_index":332,"title":{},"body":{"modules/ButtonModule.html":{},"overview.html":{}}}],["cluster_buttonmodule_exports",{"_index":333,"title":{},"body":{"modules/ButtonModule.html":{},"overview.html":{}}}],["cluster_containermodule",{"_index":453,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_declarations",{"_index":454,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_exports",{"_index":456,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_imports",{"_index":455,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_formmodule",{"_index":581,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_declarations",{"_index":582,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_exports",{"_index":584,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_imports",{"_index":583,"title":{},"body":{"modules/FormModule.html":{}}}],["cluster_hiddenmodule",{"_index":608,"title":{},"body":{"modules/HiddenModule.html":{},"overview.html":{}}}],["cluster_hiddenmodule_declarations",{"_index":609,"title":{},"body":{"modules/HiddenModule.html":{},"overview.html":{}}}],["cluster_hiddenmodule_exports",{"_index":610,"title":{},"body":{"modules/HiddenModule.html":{},"overview.html":{}}}],["cluster_jsonschemaformmodule",{"_index":764,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"overview.html":{}}}],["cluster_jsonschemaformmodule_exports",{"_index":766,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"overview.html":{}}}],["cluster_jsonschemaformmodule_imports",{"_index":765,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"overview.html":{}}}],["cluster_selectwidgetmodule",{"_index":1150,"title":{},"body":{"modules/SelectWidgetModule.html":{},"overview.html":{}}}],["cluster_selectwidgetmodule_declarations",{"_index":1151,"title":{},"body":{"modules/SelectWidgetModule.html":{},"overview.html":{}}}],["cluster_selectwidgetmodule_exports",{"_index":1152,"title":{},"body":{"modules/SelectWidgetModule.html":{},"overview.html":{}}}],["cluster_templatemodule",{"_index":1184,"title":{},"body":{"modules/TemplateModule.html":{},"overview.html":{}}}],["cluster_templatemodule_declarations",{"_index":1185,"title":{},"body":{"modules/TemplateModule.html":{},"overview.html":{}}}],["cluster_templatemodule_exports",{"_index":1186,"title":{},"body":{"modules/TemplateModule.html":{},"overview.html":{}}}],["code",{"_index":252,"title":{},"body":{"components/ButtonComponent.html":{},"contributing.html":{},"additional-documentation/buttons.html":{}}}],["coding",{"_index":1240,"title":{},"body":{"contributing.html":{}}}],["collector",{"_index":548,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["color",{"_index":430,"title":{},"body":{"components/ContainerComponent.html":{},"additional-documentation/introduction.html":{}}}],["command",{"_index":230,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{}}}],["commit",{"_index":1242,"title":{},"body":{"contributing.html":{}}}],["commonmodule",{"_index":338,"title":{},"body":{"modules/ButtonModule.html":{},"modules/ContainerModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/HiddenModule.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"modules/SelectWidgetModule.html":{},"modules/TemplateModule.html":{}}}],["compatible",{"_index":706,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{},"contributing.html":{}}}],["compilation",{"_index":198,"title":{},"body":{"components/ButtonComponent.html":{},"components/TemplateComponent.html":{},"additional-documentation/buttons.html":{}}}],["compile",{"_index":199,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["compiler",{"_index":207,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/JsonSchemaFormService.html":{},"additional-documentation/buttons.html":{}}}],["compiler,private",{"_index":821,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["compiler.compilemoduleandallcomponentssync(runtimecomponentmodule",{"_index":814,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["compiles",{"_index":787,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["compileschema",{"_index":1107,"title":{},"body":{"injectables/SchemaService.html":{}}}],["compiletemplate",{"_index":781,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["compiletemplate(template",{"_index":783,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["complies",{"_index":1304,"title":{},"body":{"contributing.html":{}}}],["component",{"_index":122,"title":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{}}}],["component's",{"_index":1383,"title":{},"body":{"index.html":{}}}],["component_template",{"_index":309,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["componentfactory",{"_index":1122,"title":{},"body":{"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["componentfactoryresolver",{"_index":1119,"title":{},"body":{"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["componentref",{"_index":799,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["componentref.destroy",{"_index":846,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["componentref.hostview.detectchanges",{"_index":844,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["componentref.location.nativeelement).innerhtml",{"_index":819,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["components",{"_index":124,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"overview.html":{},"additional-documentation/templates.html":{}}}],["conditions",{"_index":1426,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":1232,"title":{},"body":{"contributing.html":{}}}],["connection",{"_index":1450,"title":{},"body":{"license.html":{}}}],["consist",{"_index":1302,"title":{},"body":{"contributing.html":{}}}],["console.error('buildlayout",{"_index":1039,"title":{},"body":{"injectables/LayoutService.html":{}}}],["console.error(`widget",{"_index":1208,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["console.error(layoutitem",{"_index":1041,"title":{},"body":{"injectables/LayoutService.html":{}}}],["console.warn(this",{"_index":751,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["const",{"_index":253,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/buttons.html":{}}}],["constructor",{"_index":28,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"injectables/DataEventPluginService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["constructor(componentfactory",{"_index":1118,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["constructor(elementdatastorage",{"_index":523,"title":{},"body":{"injectables/DataEventPluginService.html":{}}}],["constructor(jsf",{"_index":29,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/TemplateComponent.html":{}}}],["constructor(layoutitem",{"_index":879,"title":{},"body":{"classes/LayoutNode.html":{}}}],["constructor(private",{"_index":492,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{}}}],["constructor(protected",{"_index":104,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["constructor(schemaservice",{"_index":644,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/LayoutService.html":{}}}],["consumption",{"_index":1359,"title":{},"body":{"index.html":{}}}],["contain",{"_index":169,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/ElementDataStorageService.html":{},"additional-documentation/buttons.html":{}}}],["container",{"_index":351,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/LayoutItem.html":{},"interfaces/LayoutOptions.html":{},"additional-documentation/containers.html":{}}}],["container'},{'name",{"_index":312,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["container.component",{"_index":461,"title":{},"body":{"modules/ContainerModule.html":{}}}],["container.component.html",{"_index":353,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container.component.scss",{"_index":352,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container/container.module",{"_index":772,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["containercomponent",{"_index":311,"title":{"components/ContainerComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"overview.html":{}}}],["containermodule",{"_index":452,"title":{"modules/ContainerModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/JsonSchemaFormModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["containers",{"_index":363,"title":{"additional-documentation/containers.html":{}},"body":{"components/ContainerComponent.html":{},"additional-documentation/containers.html":{}}}],["contains",{"_index":864,"title":{},"body":{"classes/LayoutNode.html":{}}}],["content",{"_index":168,"title":{},"body":{"components/ButtonComponent.html":{},"components/TemplateComponent.html":{},"additional-documentation/buttons.html":{},"additional-documentation/templates.html":{}}}],["context",{"_index":784,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["contianer",{"_index":378,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/LayoutItem.html":{},"additional-documentation/containers.html":{}}}],["contianers",{"_index":374,"title":{},"body":{"components/ContainerComponent.html":{},"additional-documentation/containers.html":{}}}],["contract",{"_index":1446,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":1223,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributions",{"_index":1299,"title":{},"body":{"contributing.html":{}}}],["control",{"_index":47,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["control.controlname",{"_index":827,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["control.layoutnode.name",{"_index":828,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["controldisabled",{"_index":16,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["controlname",{"_index":17,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["controls",{"_index":691,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["controlvalue",{"_index":18,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["conversion",{"_index":295,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["converted",{"_index":541,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"classes/LayoutNode.html":{}}}],["coordinate",{"_index":1272,"title":{},"body":{"contributing.html":{}}}],["copies",{"_index":1422,"title":{},"body":{"license.html":{}}}],["copy",{"_index":898,"title":{},"body":{"classes/LayoutNode.html":{},"license.html":{}}}],["copyright",{"_index":1390,"title":{},"body":{"license.html":{}}}],["core",{"_index":1325,"title":{},"body":{"dependencies.html":{}}}],["core/core.module",{"_index":773,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["core/decorators/widget.decorator",{"_index":298,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/TemplateComponent.html":{}}}],["core/interfaces/layout",{"_index":681,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/LayoutService.html":{}}}],["core/interfaces/schema",{"_index":1073,"title":{},"body":{"injectables/SchemaService.html":{}}}],["core/models/layout",{"_index":407,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/LayoutService.html":{}}}],["core/services/element",{"_index":299,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["core/services/widget",{"_index":1130,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["core/widget/widget",{"_index":300,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["coremodule",{"_index":462,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/JsonSchemaFormModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["coremodule.forroot().providers",{"_index":777,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["corresponding",{"_index":1048,"title":{},"body":{"interfaces/SchemaAnalyzer.html":{}}}],["couple",{"_index":227,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["covered",{"_index":1300,"title":{},"body":{"contributing.html":{}}}],["craft",{"_index":1276,"title":{},"body":{"contributing.html":{}}}],["crafted",{"_index":1281,"title":{},"body":{"contributing.html":{}}}],["create",{"_index":371,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"additional-documentation/containers.html":{}}}],["create(layoutitem",{"_index":886,"title":{},"body":{"classes/LayoutNode.html":{}}}],["createcomponent",{"_index":1140,"title":{},"body":{"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["createcomponent(template",{"_index":808,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["created",{"_index":270,"title":{},"body":{"components/ButtonComponent.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/buttons.html":{}}}],["createmodule(component",{"_index":812,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["creates",{"_index":795,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"components/SelectWidgetComponent.html":{}}}],["creation",{"_index":823,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["ctx",{"_index":798,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["current",{"_index":194,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["currentlayout",{"_index":1022,"title":{},"body":{"injectables/LayoutService.html":{}}}],["currentlayout.unshift(layoutitem",{"_index":1019,"title":{},"body":{"injectables/LayoutService.html":{}}}],["currently",{"_index":216,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{}}}],["cursor",{"_index":437,"title":{},"body":{"components/ContainerComponent.html":{}}}],["custom",{"_index":161,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/LayoutItem.html":{},"components/TemplateComponent.html":{},"additional-documentation/buttons.html":{},"additional-documentation/templates.html":{}}}],["damages",{"_index":1444,"title":{},"body":{"license.html":{}}}],["data",{"_index":65,"title":{"interfaces/Data.html":{}},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/buttons.html":{},"additional-documentation/hidden-inputs.html":{},"additional-documentation/templates.html":{}}}],["dataevent",{"_index":244,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/buttons.html":{}}}],["dataeventpluginservice",{"_index":471,"title":{"injectables/DataEventPluginService.html":{}},"body":{"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["dataindex",{"_index":24,"title":{},"body":{"classes/AbstractWidget.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["dataname",{"_index":509,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["datapointer",{"_index":878,"title":{},"body":{"classes/LayoutNode.html":{}}}],["datapointermap",{"_index":1046,"title":{},"body":{"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{}}}],["datapointers",{"_index":1010,"title":{},"body":{"injectables/LayoutService.html":{}}}],["datatype",{"_index":961,"title":{},"body":{"classes/LayoutNode.html":{}}}],["david",{"_index":1393,"title":{},"body":{"license.html":{}}}],["davis",{"_index":1395,"title":{},"body":{"license.html":{}}}],["ddd",{"_index":445,"title":{},"body":{"components/ContainerComponent.html":{}}}],["deal",{"_index":1411,"title":{},"body":{"license.html":{}}}],["dealing",{"_index":373,"title":{},"body":{"components/ContainerComponent.html":{},"additional-documentation/containers.html":{}}}],["dealings",{"_index":1451,"title":{},"body":{"license.html":{}}}],["deault",{"_index":1486,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["declarations",{"_index":327,"title":{},"body":{"modules/ButtonModule.html":{},"modules/ContainerModule.html":{},"modules/FormModule.html":{},"modules/HiddenModule.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"modules/SelectWidgetModule.html":{},"modules/TemplateModule.html":{},"index.html":{},"overview.html":{}}}],["decorating",{"_index":1192,"title":{},"body":{"interfaces/WidgetDecorator.html":{}}}],["decorator",{"_index":1347,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decorator.data.ts",{"_index":1191,"title":{},"body":{"interfaces/WidgetDecorator.html":{}}}],["decorators",{"_index":921,"title":{},"body":{"classes/LayoutNode.html":{},"components/SelectWidgetComponent.html":{},"dependencies.html":{}}}],["dedupe(layout",{"_index":1013,"title":{},"body":{"injectables/LayoutService.html":{}}}],["default",{"_index":41,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{},"additional-documentation/buttons.html":{},"additional-documentation/containers.html":{},"additional-documentation/hidden-inputs.html":{}}}],["defaultto",{"_index":914,"title":{},"body":{"classes/LayoutNode.html":{}}}],["defaultto(key",{"_index":943,"title":{},"body":{"classes/LayoutNode.html":{}}}],["defaultto(this.layoutitem.options",{"_index":957,"title":{},"body":{"classes/LayoutNode.html":{}}}],["defaultto(this.schema",{"_index":951,"title":{},"body":{"classes/LayoutNode.html":{}}}],["defaultwidget",{"_index":1212,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["define",{"_index":660,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["defined",{"_index":33,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"modules/CoreModule.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"injectables/WidgetLibraryService.html":{}}}],["defines",{"_index":1044,"title":{},"body":{"interfaces/SchemaAnalyzer.html":{}}}],["definition",{"_index":939,"title":{},"body":{"classes/LayoutNode.html":{}}}],["definitions",{"_index":1070,"title":{},"body":{"injectables/SchemaService.html":{}}}],["degree",{"_index":868,"title":{},"body":{"classes/LayoutNode.html":{}}}],["delete",{"_index":551,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["delete(element",{"_index":552,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["deleted",{"_index":576,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["demo",{"_index":1366,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":326,"title":{"dependencies.html":{}},"body":{"modules/ButtonModule.html":{},"modules/ContainerModule.html":{},"modules/FormModule.html":{},"modules/HiddenModule.html":{},"modules/JsonSchemaFormModule.html":{},"modules/SelectWidgetModule.html":{},"modules/TemplateModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":1266,"title":{},"body":{"contributing.html":{}}}],["depends",{"_index":620,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["describing",{"_index":86,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["description",{"_index":10,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{}}}],["destroyed",{"_index":741,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["details",{"_index":346,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/LayoutOptions.html":{},"additional-documentation/containers.html":{}}}],["determine",{"_index":493,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"interfaces/LayoutItem.html":{}}}],["determined",{"_index":1481,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["dialog",{"_index":237,"title":{},"body":{"components/ButtonComponent.html":{},"components/JsonSchemaFormComponent.html":{},"additional-documentation/buttons.html":{}}}],["difference",{"_index":998,"title":{},"body":{"injectables/LayoutService.html":{}}}],["different",{"_index":364,"title":{},"body":{"components/ContainerComponent.html":{},"additional-documentation/containers.html":{}}}],["directive",{"_index":307,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["directives",{"_index":321,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["directly",{"_index":1282,"title":{},"body":{"contributing.html":{}}}],["dirname",{"_index":966,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["disable",{"_index":46,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"additional-documentation/containers.html":{}}}],["disabled",{"_index":395,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{},"additional-documentation/containers.html":{}}}],["discuss",{"_index":1226,"title":{},"body":{"contributing.html":{}}}],["discussed",{"_index":1271,"title":{},"body":{"contributing.html":{}}}],["display",{"_index":158,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{},"additional-documentation/containers.html":{}}}],["displayed",{"_index":996,"title":{},"body":{"injectables/LayoutService.html":{}}}],["displays",{"_index":131,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{}}}],["distribute",{"_index":1419,"title":{},"body":{"license.html":{}}}],["div",{"_index":344,"title":{},"body":{"components/ContainerComponent.html":{},"additional-documentation/containers.html":{}}}],["document",{"_index":789,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["document.createelement('template",{"_index":817,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["documentation",{"_index":1409,"title":{},"body":{"license.html":{}}}],["documentfragment",{"_index":792,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["dom",{"_index":128,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"additional-documentation/buttons.html":{}}}],["don't",{"_index":600,"title":{},"body":{"components/HiddenComponent.html":{},"index.html":{},"additional-documentation/hidden-inputs.html":{}}}],["down",{"_index":276,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["draft",{"_index":1054,"title":{},"body":{"injectables/SchemaService.html":{}}}],["due",{"_index":193,"title":{},"body":{"components/ButtonComponent.html":{},"components/TemplateComponent.html":{},"additional-documentation/buttons.html":{},"additional-documentation/templates.html":{}}}],["duplicate",{"_index":1006,"title":{},"body":{"injectables/LayoutService.html":{}}}],["duplication",{"_index":1275,"title":{},"body":{"contributing.html":{}}}],["dynamic",{"_index":1156,"title":{},"body":{"components/TemplateComponent.html":{},"dependencies.html":{},"additional-documentation/templates.html":{}}}],["dynamically",{"_index":1113,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["each",{"_index":366,"title":{},"body":{"components/ContainerComponent.html":{},"additional-documentation/containers.html":{}}}],["easily",{"_index":392,"title":{},"body":{"components/ContainerComponent.html":{},"additional-documentation/containers.html":{}}}],["easy",{"_index":1071,"title":{},"body":{"injectables/SchemaService.html":{}}}],["eb",{"_index":1170,"title":{},"body":{"components/TemplateComponent.html":{}}}],["editor",{"_index":633,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"dependencies.html":{}}}],["efforts",{"_index":1273,"title":{},"body":{"contributing.html":{}}}],["element",{"_index":306,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"additional-documentation/containers.html":{}}}],["element.addeventlistener(type",{"_index":519,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["element.removeeventlistener(type",{"_index":520,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["elementdatastorage",{"_index":31,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["elementdatastorageservice",{"_index":32,"title":{"injectables/ElementDataStorageService.html":{}},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["elementref",{"_index":73,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["elements",{"_index":369,"title":{},"body":{"components/ContainerComponent.html":{},"additional-documentation/containers.html":{}}}],["email",{"_index":1228,"title":{},"body":{"contributing.html":{}}}],["enable",{"_index":1175,"title":{},"body":{"components/TemplateComponent.html":{}}}],["enctype",{"_index":643,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{}}}],["engine",{"_index":1173,"title":{},"body":{"components/TemplateComponent.html":{}}}],["entire",{"_index":696,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["entrycomponents",{"_index":337,"title":{},"body":{"modules/ButtonModule.html":{},"modules/ContainerModule.html":{},"modules/HiddenModule.html":{},"modules/SelectWidgetModule.html":{},"modules/TemplateModule.html":{}}}],["equal",{"_index":1475,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["err",{"_index":1038,"title":{},"body":{"injectables/LayoutService.html":{}}}],["error",{"_index":929,"title":{},"body":{"classes/LayoutNode.html":{},"injectables/LayoutService.html":{}}}],["error('missing",{"_index":933,"title":{},"body":{"classes/LayoutNode.html":{}}}],["even",{"_index":824,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"contributing.html":{}}}],["event",{"_index":57,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/buttons.html":{},"additional-documentation/hidden-inputs.html":{}}}],["event.data",{"_index":277,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"additional-documentation/buttons.html":{}}}],["event.data.id",{"_index":249,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["event.data.onclick",{"_index":257,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["event.target",{"_index":512,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["event.target).value",{"_index":118,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["event_manager_plugins",{"_index":468,"title":{},"body":{"modules/CoreModule.html":{}}}],["eventhandler",{"_index":511,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["eventmanager",{"_index":483,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["eventname",{"_index":505,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["eventname.split",{"_index":510,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["events",{"_index":220,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["everyone",{"_index":1246,"title":{},"body":{"contributing.html":{}}}],["everything",{"_index":1488,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["example",{"_index":133,"title":{},"body":{"components/ButtonComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/TemplateComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{},"additional-documentation/templates.html":{}}}],["example.html",{"_index":713,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["examples",{"_index":1368,"title":{},"body":{"index.html":{}}}],["examples)]{@link",{"_index":711,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["except",{"_index":387,"title":{},"body":{"components/ContainerComponent.html":{},"additional-documentation/containers.html":{}}}],["exception",{"_index":159,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["exists",{"_index":1012,"title":{},"body":{"injectables/LayoutService.html":{},"injectables/WidgetLibraryService.html":{}}}],["expand/collapse",{"_index":397,"title":{},"body":{"components/ContainerComponent.html":{},"additional-documentation/containers.html":{}}}],["expect",{"_index":593,"title":{},"body":{"components/HiddenComponent.html":{},"additional-documentation/hidden-inputs.html":{}}}],["expected",{"_index":1249,"title":{},"body":{"contributing.html":{}}}],["export",{"_index":84,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"components/TemplateComponent.html":{},"modules/TemplateModule.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{}}}],["exports",{"_index":330,"title":{},"body":{"modules/ButtonModule.html":{},"modules/ContainerModule.html":{},"modules/FormModule.html":{},"modules/HiddenModule.html":{},"modules/JsonSchemaFormModule.html":{},"modules/SelectWidgetModule.html":{},"modules/TemplateModule.html":{},"overview.html":{}}}],["express",{"_index":1432,"title":{},"body":{"license.html":{}}}],["extends",{"_index":132,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["external",{"_index":251,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["f.componenttype",{"_index":841,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["f1f1f1",{"_index":431,"title":{},"body":{"components/ContainerComponent.html":{}}}],["factory",{"_index":839,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["factory.create(this.injector",{"_index":842,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["false",{"_index":43,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"additional-documentation/introduction.html":{}}}],["favor",{"_index":208,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["feature",{"_index":1238,"title":{},"body":{"contributing.html":{}}}],["features",{"_index":1280,"title":{},"body":{"contributing.html":{}}}],["feedback",{"_index":693,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["few",{"_index":1496,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["fields",{"_index":1480,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["fieldset",{"_index":345,"title":{},"body":{"components/ContainerComponent.html":{},"additional-documentation/containers.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"components/TemplateComponent.html":{},"modules/TemplateModule.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/buttons.html":{}}}],["files",{"_index":1410,"title":{},"body":{"license.html":{}}}],["filling",{"_index":694,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["find",{"_index":1257,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["fired",{"_index":490,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["first",{"_index":223,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"contributing.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{},"additional-documentation/containers.html":{}}}],["firstname",{"_index":1469,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["fitness",{"_index":1437,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1264,"title":{},"body":{"contributing.html":{}}}],["flag",{"_index":45,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["float",{"_index":433,"title":{},"body":{"components/ContainerComponent.html":{}}}],["fn",{"_index":254,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["fn(event",{"_index":258,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["folder",{"_index":1389,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1233,"title":{},"body":{"contributing.html":{}}}],["following",{"_index":1382,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/introduction.html":{}}}],["form",{"_index":246,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{},"components/TemplateComponent.html":{},"contributing.html":{},"index.html":{},"license.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{},"additional-documentation/containers.html":{},"additional-documentation/hidden-inputs.html":{},"additional-documentation/templates.html":{}}}],["form's",{"_index":707,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"index.html":{}}}],["form'},{'name",{"_index":316,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["form.component",{"_index":586,"title":{},"body":{"modules/FormModule.html":{}}}],["form.component.html",{"_index":225,"title":{},"body":{"components/ButtonComponent.html":{},"components/JsonSchemaFormComponent.html":{},"additional-documentation/buttons.html":{}}}],["form.component.ts",{"_index":243,"title":{},"body":{"components/ButtonComponent.html":{},"components/JsonSchemaFormComponent.html":{},"additional-documentation/buttons.html":{}}}],["form.component.ts:123",{"_index":673,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:127",{"_index":674,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:64",{"_index":666,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:66",{"_index":659,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:71",{"_index":647,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:76",{"_index":652,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:81",{"_index":658,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:86",{"_index":662,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:91",{"_index":672,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.component.ts:95",{"_index":645,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form.module.ts",{"_index":769,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"miscellaneous/variables.html":{}}}],["form.module.ts:25",{"_index":770,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["form.service",{"_index":79,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["form.service.ts",{"_index":779,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["form.service.ts:47",{"_index":794,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["form.service.ts:56",{"_index":797,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["form.service.ts:65",{"_index":786,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["form/form.module",{"_index":774,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["form/services/json",{"_index":78,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["form/src/lib/button/button.component.ts",{"_index":130,"title":{},"body":{"components/ButtonComponent.html":{}}}],["form/src/lib/button/button.component.ts:21",{"_index":141,"title":{},"body":{"components/ButtonComponent.html":{}}}],["form/src/lib/button/button.module.ts",{"_index":336,"title":{},"body":{"modules/ButtonModule.html":{}}}],["form/src/lib/container/container.component.ts",{"_index":343,"title":{},"body":{"components/ContainerComponent.html":{}}}],["form/src/lib/container/container.component.ts:20",{"_index":358,"title":{},"body":{"components/ContainerComponent.html":{}}}],["form/src/lib/container/container.component.ts:33",{"_index":362,"title":{},"body":{"components/ContainerComponent.html":{}}}],["form/src/lib/container/container.component.ts:37",{"_index":360,"title":{},"body":{"components/ContainerComponent.html":{}}}],["form/src/lib/container/container.module.ts",{"_index":458,"title":{},"body":{"modules/ContainerModule.html":{}}}],["form/src/lib/core/core.module.ts",{"_index":463,"title":{},"body":{"modules/CoreModule.html":{}}}],["form/src/lib/core/core.module.ts:13",{"_index":466,"title":{},"body":{"modules/CoreModule.html":{}}}],["form/src/lib/core/decorators/widget.decorator.ts",{"_index":1345,"title":{},"body":{"miscellaneous/functions.html":{}}}],["form/src/lib/core/interfaces/layout",{"_index":847,"title":{},"body":{"interfaces/LayoutItem.html":{},"interfaces/LayoutOptions.html":{}}}],["form/src/lib/core/interfaces/schema",{"_index":1042,"title":{},"body":{"interfaces/SchemaAnalyzer.html":{}}}],["form/src/lib/core/interfaces/widget",{"_index":1190,"title":{},"body":{"interfaces/WidgetDecorator.html":{}}}],["form/src/lib/core/models/layout",{"_index":862,"title":{},"body":{"classes/LayoutNode.html":{}}}],["form/src/lib/core/services/data",{"_index":479,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"miscellaneous/typealiases.html":{}}}],["form/src/lib/core/services/element",{"_index":527,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["form/src/lib/core/services/widget",{"_index":1195,"title":{},"body":{"injectables/WidgetLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["form/src/lib/core/widget/widget.ts",{"_index":9,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["form/src/lib/core/widget/widget.ts:12",{"_index":44,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["form/src/lib/core/widget/widget.ts:14",{"_index":49,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["form/src/lib/core/widget/widget.ts:16",{"_index":50,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["form/src/lib/core/widget/widget.ts:18",{"_index":52,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["form/src/lib/core/widget/widget.ts:20",{"_index":55,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["form/src/lib/core/widget/widget.ts:24",{"_index":68,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["form/src/lib/core/widget/widget.ts:29",{"_index":70,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["form/src/lib/core/widget/widget.ts:33",{"_index":66,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["form/src/lib/core/widget/widget.ts:35",{"_index":64,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["form/src/lib/core/widget/widget.ts:38",{"_index":34,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["form/src/lib/core/widget/widget.ts:66",{"_index":58,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["form/src/lib/form/form.module.ts",{"_index":585,"title":{},"body":{"modules/FormModule.html":{}}}],["form/src/lib/form/json",{"_index":613,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["form/src/lib/form/services/json",{"_index":778,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["form/src/lib/form/services/layout.service.ts",{"_index":985,"title":{},"body":{"injectables/LayoutService.html":{}}}],["form/src/lib/form/services/layout.service.ts:20",{"_index":994,"title":{},"body":{"injectables/LayoutService.html":{}}}],["form/src/lib/form/services/layout.service.ts:22",{"_index":990,"title":{},"body":{"injectables/LayoutService.html":{}}}],["form/src/lib/form/services/layout.service.ts:26",{"_index":992,"title":{},"body":{"injectables/LayoutService.html":{}}}],["form/src/lib/form/services/schema.service.ts",{"_index":1049,"title":{},"body":{"injectables/SchemaService.html":{}}}],["form/src/lib/form/services/schema.service.ts:22",{"_index":1064,"title":{},"body":{"injectables/SchemaService.html":{}}}],["form/src/lib/form/services/schema.service.ts:26",{"_index":1062,"title":{},"body":{"injectables/SchemaService.html":{}}}],["form/src/lib/form/services/schema.service.ts:35",{"_index":1067,"title":{},"body":{"injectables/SchemaService.html":{}}}],["form/src/lib/form/services/schema.service.ts:53",{"_index":1053,"title":{},"body":{"injectables/SchemaService.html":{}}}],["form/src/lib/form/services/schema.service.ts:69",{"_index":1058,"title":{},"body":{"injectables/SchemaService.html":{}}}],["form/src/lib/hidden/hidden.component.ts",{"_index":587,"title":{},"body":{"components/HiddenComponent.html":{}}}],["form/src/lib/hidden/hidden.component.ts:20",{"_index":591,"title":{},"body":{"components/HiddenComponent.html":{}}}],["form/src/lib/hidden/hidden.module.ts",{"_index":611,"title":{},"body":{"modules/HiddenModule.html":{}}}],["form/src/lib/json",{"_index":768,"title":{},"body":{"modules/JsonSchemaFormModule.html":{},"miscellaneous/variables.html":{}}}],["form/src/lib/select",{"_index":1111,"title":{},"body":{"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{}}}],["form/src/lib/template/template.component.ts",{"_index":1155,"title":{},"body":{"components/TemplateComponent.html":{}}}],["form/src/lib/template/template.component.ts:27",{"_index":1159,"title":{},"body":{"components/TemplateComponent.html":{}}}],["form/src/lib/template/template.module.ts",{"_index":1187,"title":{},"body":{"modules/TemplateModule.html":{}}}],["form@outlook.com",{"_index":1254,"title":{},"body":{"contributing.html":{}}}],["form]{@link",{"_index":708,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["formcontrol",{"_index":19,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["forminitialized",{"_index":735,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["formmodule",{"_index":580,"title":{"modules/FormModule.html":{}},"body":{"modules/FormModule.html":{},"modules/JsonSchemaFormModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["forroot",{"_index":465,"title":{},"body":{"modules/CoreModule.html":{},"modules/JsonSchemaFormModule.html":{}}}],["found",{"_index":1255,"title":{},"body":{"contributing.html":{}}}],["fragment",{"_index":790,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["free",{"_index":1404,"title":{},"body":{"license.html":{}}}],["fully",{"_index":1098,"title":{},"body":{"injectables/SchemaService.html":{}}}],["function",{"_index":506,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"injectables/WidgetLibraryService.html":{}}}],["function('event",{"_index":256,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["functions",{"_index":1341,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1425,"title":{},"body":{"license.html":{}}}],["future",{"_index":1177,"title":{},"body":{"components/TemplateComponent.html":{}}}],["garbage",{"_index":547,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["generatengcontent",{"_index":1146,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["generates",{"_index":616,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["get(element",{"_index":558,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["getdatapointer",{"_index":902,"title":{},"body":{"classes/LayoutNode.html":{}}}],["getdatapointermap",{"_index":1066,"title":{},"body":{"injectables/SchemaService.html":{}}}],["getdocumentfragment(componentref",{"_index":816,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["getitems",{"_index":911,"title":{},"body":{"classes/LayoutNode.html":{}}}],["getlayout",{"_index":993,"title":{},"body":{"injectables/LayoutService.html":{}}}],["getlayoutdefinition",{"_index":896,"title":{},"body":{"classes/LayoutNode.html":{}}}],["getlayoutnode",{"_index":69,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["getname",{"_index":900,"title":{},"body":{"classes/LayoutNode.html":{}}}],["getoptions",{"_index":909,"title":{},"body":{"classes/LayoutNode.html":{}}}],["getpointer",{"_index":876,"title":{},"body":{"classes/LayoutNode.html":{}}}],["getpointer(key",{"_index":891,"title":{},"body":{"classes/LayoutNode.html":{}}}],["gets",{"_index":1068,"title":{},"body":{"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{}}}],["getschema",{"_index":1061,"title":{},"body":{"injectables/SchemaService.html":{}}}],["getselectedindex",{"_index":413,"title":{},"body":{"components/ContainerComponent.html":{}}}],["gettemplate",{"_index":907,"title":{},"body":{"classes/LayoutNode.html":{}}}],["getting",{"_index":1215,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettype",{"_index":905,"title":{},"body":{"classes/LayoutNode.html":{}}}],["getwidget",{"_index":1198,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["getwidget(type",{"_index":1199,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["github",{"_index":1260,"title":{},"body":{"contributing.html":{}}}],["given",{"_index":890,"title":{},"body":{"classes/LayoutNode.html":{}}}],["gives",{"_index":871,"title":{},"body":{"classes/LayoutNode.html":{}}}],["global",{"_index":979,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["good",{"_index":291,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["google",{"_index":239,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["google's",{"_index":1283,"title":{},"body":{"contributing.html":{}}}],["governed",{"_index":1248,"title":{},"body":{"contributing.html":{}}}],["granted",{"_index":1403,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1454,"title":{},"body":{"modules.html":{}}}],["greater",{"_index":1476,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["ground",{"_index":1357,"title":{},"body":{"index.html":{}}}],["guide",{"_index":1284,"title":{},"body":{"contributing.html":{}}}],["guidelines",{"_index":1244,"title":{},"body":{"contributing.html":{}}}],["handle",{"_index":218,"title":{},"body":{"components/ButtonComponent.html":{},"classes/LayoutNode.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/buttons.html":{}}}],["handlebars",{"_index":215,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/TemplateComponent.html":{},"dependencies.html":{},"additional-documentation/buttons.html":{},"additional-documentation/templates.html":{}}}],["handlebars.compile(template)({options",{"_index":834,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["handlebars/dist/cjs/handlebars",{"_index":803,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["handled",{"_index":268,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["handler",{"_index":224,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"additional-documentation/buttons.html":{}}}],["handler(event",{"_index":517,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["handling",{"_index":987,"title":{},"body":{"injectables/LayoutService.html":{}}}],["has(element",{"_index":561,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["height",{"_index":182,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/LayoutOptions.html":{},"additional-documentation/buttons.html":{}}}],["held",{"_index":1392,"title":{},"body":{"license.html":{}}}],["help",{"_index":1258,"title":{},"body":{"contributing.html":{}}}],["helper",{"_index":780,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["here",{"_index":186,"title":{},"body":{"components/ButtonComponent.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{}}}],["hereby",{"_index":1402,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":424,"title":{"additional-documentation/hidden-inputs.html":{}},"body":{"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/hidden-inputs.html":{}}}],["hidden'},{'name",{"_index":314,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["hidden.component",{"_index":612,"title":{},"body":{"modules/HiddenModule.html":{}}}],["hidden.component.html",{"_index":590,"title":{},"body":{"components/HiddenComponent.html":{}}}],["hidden.component.scss",{"_index":589,"title":{},"body":{"components/HiddenComponent.html":{}}}],["hidden/hidden.module",{"_index":775,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["hiddencomponent",{"_index":313,"title":{"components/HiddenComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"overview.html":{}}}],["hiddenmodule",{"_index":607,"title":{"modules/HiddenModule.html":{}},"body":{"modules/HiddenModule.html":{},"modules/JsonSchemaFormModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["holders",{"_index":1441,"title":{},"body":{"license.html":{}}}],["hope",{"_index":1171,"title":{},"body":{"components/TemplateComponent.html":{}}}],["hopefully",{"_index":1163,"title":{},"body":{"components/TemplateComponent.html":{},"additional-documentation/templates.html":{}}}],["host",{"_index":421,"title":{},"body":{"components/ContainerComponent.html":{}}}],["hover",{"_index":444,"title":{},"body":{"components/ContainerComponent.html":{}}}],["html",{"_index":162,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"additional-documentation/buttons.html":{},"additional-documentation/templates.html":{}}}],["htmlclass",{"_index":967,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["htmlelement",{"_index":504,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{}}}],["http://json",{"_index":1103,"title":{},"body":{"injectables/SchemaService.html":{},"additional-documentation/introduction.html":{}}}],["http://schemaform.io",{"_index":709,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["http://schemaform.io/examples/bootstrap",{"_index":712,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["http://thlorenz.github.io/brace",{"_index":733,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["http://ulion.github.io/jsonform/playground",{"_index":723,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["https://angular.io",{"_index":725,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["https://developer.mozilla.org/en",{"_index":650,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutOptions.html":{}}}],["https://example.com/person.schema.json",{"_index":1468,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["https://github.com/epoberezkin/ajv",{"_index":729,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["https://github.com/epoberezkin/json",{"_index":731,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{}}}],["https://github.com/joshfire/jsonform",{"_index":722,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["https://github.com/lodash/lodash",{"_index":727,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["https://github.com/mozilla",{"_index":717,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["https://mozilla",{"_index":719,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["icon",{"_index":177,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/LayoutOptions.html":{},"additional-documentation/buttons.html":{}}}],["id",{"_index":234,"title":{},"body":{"components/ButtonComponent.html":{},"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{}}}],["identifier",{"_index":885,"title":{},"body":{"classes/LayoutNode.html":{}}}],["ignore",{"_index":1089,"title":{},"body":{"injectables/SchemaService.html":{}}}],["ignoring",{"_index":1210,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["image",{"_index":153,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["implement",{"_index":302,"title":{},"body":{"components/ButtonComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/SchemaService.html":{},"contributing.html":{}}}],["implements",{"_index":11,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ContainerComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["implied",{"_index":1433,"title":{},"body":{"license.html":{}}}],["import",{"_index":72,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"components/TemplateComponent.html":{},"modules/TemplateModule.html":{},"injectables/WidgetLibraryService.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{}}}],["imported",{"_index":217,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["imports",{"_index":342,"title":{},"body":{"modules/ButtonModule.html":{},"modules/ContainerModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/HiddenModule.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"modules/SelectWidgetModule.html":{},"modules/TemplateModule.html":{},"index.html":{}}}],["included",{"_index":606,"title":{},"body":{"components/HiddenComponent.html":{},"license.html":{},"additional-documentation/hidden-inputs.html":{}}}],["including",{"_index":1414,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":206,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["indentation",{"_index":1289,"title":{},"body":{"contributing.html":{}}}],["index",{"_index":14,"title":{"index.html":{}},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":850,"title":{},"body":{"interfaces/LayoutItem.html":{},"interfaces/LayoutOptions.html":{}}}],["individual",{"_index":690,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"components/TemplateComponent.html":{},"modules/TemplateModule.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{}}}],["information",{"_index":1293,"title":{},"body":{"contributing.html":{}}}],["inherit",{"_index":432,"title":{},"body":{"components/ContainerComponent.html":{}}}],["inherited",{"_index":142,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["initial",{"_index":110,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["initialize",{"_index":106,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["initializecontrol",{"_index":782,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["initializecontrol(control",{"_index":793,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["initializeform",{"_index":754,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["initializelayout",{"_index":757,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["initializeschema",{"_index":759,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["injectable",{"_index":481,"title":{"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{}},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{}}}],["injectables",{"_index":521,"title":{},"body":{"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{},"overview.html":{}}}],["injecting",{"_index":1129,"title":{},"body":{"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["injector",{"_index":800,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["innerhtml",{"_index":815,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["input",{"_index":74,"title":{},"body":{"classes/AbstractWidget.html":{},"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutOptions.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"additional-documentation/introduction.html":{}}}],["input[name",{"_index":854,"title":{},"body":{"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{}}}],["input[type='hidden",{"_index":588,"title":{},"body":{"components/HiddenComponent.html":{}}}],["inputs",{"_index":23,"title":{"additional-documentation/hidden-inputs.html":{}},"body":{"classes/AbstractWidget.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/hidden-inputs.html":{}}}],["inserted",{"_index":167,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["inside",{"_index":350,"title":{},"body":{"components/ContainerComponent.html":{},"classes/LayoutNode.html":{},"components/TemplateComponent.html":{},"additional-documentation/containers.html":{},"additional-documentation/templates.html":{}}}],["inspect",{"_index":279,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["install",{"_index":1373,"title":{},"body":{"index.html":{}}}],["installing",{"_index":1371,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1011,"title":{},"body":{"injectables/LayoutService.html":{}}}],["instances",{"_index":1506,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["instead",{"_index":389,"title":{},"body":{"components/ContainerComponent.html":{},"additional-documentation/containers.html":{}}}],["integer",{"_index":1478,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["interactions",{"_index":1234,"title":{},"body":{"contributing.html":{}}}],["interface",{"_index":477,"title":{"interfaces/Data.html":{},"interfaces/LayoutItem.html":{},"interfaces/LayoutOptions.html":{},"interfaces/SchemaAnalyzer.html":{},"interfaces/WidgetDecorator.html":{}},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"interfaces/LayoutItem.html":{},"interfaces/LayoutOptions.html":{},"interfaces/SchemaAnalyzer.html":{},"interfaces/WidgetDecorator.html":{}}}],["interfaces",{"_index":478,"title":{},"body":{"interfaces/Data.html":{},"interfaces/LayoutItem.html":{},"interfaces/LayoutOptions.html":{},"interfaces/SchemaAnalyzer.html":{},"interfaces/WidgetDecorator.html":{},"overview.html":{}}}],["interfaces/layout",{"_index":922,"title":{},"body":{"classes/LayoutNode.html":{}}}],["interfaces/schema",{"_index":923,"title":{},"body":{"classes/LayoutNode.html":{}}}],["internal",{"_index":229,"title":{},"body":{"components/ButtonComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/functions.html":{},"additional-documentation/buttons.html":{}}}],["internally",{"_index":269,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["introduction",{"_index":1464,"title":{"additional-documentation/introduction.html":{}},"body":{}}],["isplainobject",{"_index":679,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["isplainobject(this.schema",{"_index":760,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["isstring",{"_index":915,"title":{},"body":{"classes/LayoutNode.html":{},"injectables/LayoutService.html":{}}}],["isstring(layoutitem",{"_index":940,"title":{},"body":{"classes/LayoutNode.html":{},"injectables/LayoutService.html":{}}}],["isstring(this.layoutitem.template",{"_index":952,"title":{},"body":{"classes/LayoutNode.html":{}}}],["issue",{"_index":1227,"title":{},"body":{"contributing.html":{}}}],["issues",{"_index":1236,"title":{},"body":{"contributing.html":{}}}],["it's",{"_index":1355,"title":{},"body":{"index.html":{}}}],["item",{"_index":280,"title":{},"body":{"components/ButtonComponent.html":{},"components/HiddenComponent.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"additional-documentation/buttons.html":{},"additional-documentation/hidden-inputs.html":{}}}],["item.data",{"_index":682,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{}}}],["item.data.ts",{"_index":848,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["item.data.ts:22",{"_index":852,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["items",{"_index":376,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"additional-documentation/containers.html":{}}}],["itself",{"_index":536,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["ivy",{"_index":1172,"title":{},"body":{"components/TemplateComponent.html":{}}}],["james",{"_index":1398,"title":{},"body":{"license.html":{}}}],["javascript",{"_index":287,"title":{},"body":{"components/ButtonComponent.html":{},"components/JsonSchemaFormComponent.html":{},"contributing.html":{},"additional-documentation/buttons.html":{}}}],["joshfire's",{"_index":721,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["jquery",{"_index":532,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"components/JsonSchemaFormComponent.html":{}}}],["jquery's",{"_index":273,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["js",{"_index":1326,"title":{},"body":{"dependencies.html":{}}}],["jsf",{"_index":40,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{}}}],["json",{"_index":7,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"components/TemplateComponent.html":{},"modules/TemplateModule.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{}}}],["json/path",{"_index":895,"title":{},"body":{"classes/LayoutNode.html":{}}}],["jsonpointers",{"_index":1087,"title":{},"body":{"injectables/SchemaService.html":{}}}],["jsonschema",{"_index":716,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["jsonschema4",{"_index":665,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{}}}],["jsonschema6",{"_index":664,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{}}}],["jsonschema7",{"_index":663,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"injectables/SchemaService.html":{},"additional-documentation/introduction.html":{}}}],["jsonschema7definition",{"_index":999,"title":{},"body":{"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{}}}],["jsonschemaformcomponent",{"_index":315,"title":{"components/JsonSchemaFormComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"overview.html":{}}}],["jsonschemaformmodule",{"_index":763,"title":{"modules/JsonSchemaFormModule.html":{}},"body":{"modules/JsonSchemaFormModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["jsonschemaformmodule.forroot",{"_index":1380,"title":{},"body":{"index.html":{}}}],["jsonschemaformservice",{"_index":30,"title":{"injectables/JsonSchemaFormService.html":{}},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["jsonschemaformservice.createcomponent(template",{"_index":836,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["jsonschemaformservice.createmodule(component",{"_index":837,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["jsonschemaformservice.getdocumentfragment(componentref",{"_index":845,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["key",{"_index":553,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"additional-documentation/introduction.html":{}}}],["key's",{"_index":560,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["key(object.path",{"_index":894,"title":{},"body":{"classes/LayoutNode.html":{}}}],["key/value",{"_index":555,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["keys",{"_index":1193,"title":{},"body":{"interfaces/WidgetDecorator.html":{}}}],["kind",{"_index":1267,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["laid",{"_index":1492,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["last",{"_index":1472,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["lastly",{"_index":242,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["lastname",{"_index":1471,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["layout",{"_index":67,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{},"dependencies.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{},"additional-documentation/containers.html":{},"additional-documentation/hidden-inputs.html":{}}}],["layout.component.ts",{"_index":1502,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["layout.json",{"_index":174,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/TemplateComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{},"additional-documentation/containers.html":{},"additional-documentation/templates.html":{}}}],["layout.onclick",{"_index":233,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["layout.reduce((currentlayout",{"_index":1024,"title":{},"body":{"injectables/LayoutService.html":{}}}],["layout.reduceright((currentlayout",{"_index":1014,"title":{},"body":{"injectables/LayoutService.html":{}}}],["layout.type",{"_index":930,"title":{},"body":{"classes/LayoutNode.html":{},"interfaces/WidgetDecorator.html":{}}}],["layoutcomponent",{"_index":247,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{}}}],["layoutdefinition",{"_index":877,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layoutindex",{"_index":25,"title":{},"body":{"classes/AbstractWidget.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["layoutitem",{"_index":680,"title":{"interfaces/LayoutItem.html":{}},"body":{"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{}}}],["layoutitem).items",{"_index":1020,"title":{},"body":{"injectables/LayoutService.html":{}}}],["layoutitem.key",{"_index":1015,"title":{},"body":{"injectables/LayoutService.html":{}}}],["layoutitem.type",{"_index":932,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layoutitems",{"_index":400,"title":{},"body":{"components/ContainerComponent.html":{},"additional-documentation/containers.html":{}}}],["layoutnode",{"_index":26,"title":{"classes/LayoutNode.html":{}},"body":{"classes/AbstractWidget.html":{},"components/ContainerComponent.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"injectables/WidgetLibraryService.html":{}}}],["layoutnode(item",{"_index":942,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layoutnode(value",{"_index":90,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["layoutnode.create(layoutitem",{"_index":1034,"title":{},"body":{"injectables/LayoutService.html":{}}}],["layoutnode.getpointer(key",{"_index":1016,"title":{},"body":{"injectables/LayoutService.html":{}}}],["layoutnode.getpointer(this.layoutitem.key",{"_index":949,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layoutnodes",{"_index":926,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layoutoptions",{"_index":855,"title":{"interfaces/LayoutOptions.html":{}},"body":{"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{}}}],["layouts",{"_index":988,"title":{},"body":{"injectables/LayoutService.html":{}}}],["layoutservice",{"_index":638,"title":{"injectables/LayoutService.html":{}},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/LayoutService.html":{}}}],["left",{"_index":434,"title":{},"body":{"components/ContainerComponent.html":{},"index.html":{}}}],["legend",{"_index":305,"title":{},"body":{"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"components/TemplateComponent.html":{},"modules/TemplateModule.html":{},"overview.html":{}}}],["less",{"_index":1287,"title":{},"body":{"contributing.html":{}}}],["liability",{"_index":1445,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1442,"title":{},"body":{"license.html":{}}}],["library",{"_index":293,"title":{},"body":{"components/ButtonComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/WidgetLibraryService.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/buttons.html":{}}}],["library.service",{"_index":1131,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["library.service.ts",{"_index":1196,"title":{},"body":{"injectables/WidgetLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["library.service.ts:32",{"_index":1200,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["license",{"_index":1245,"title":{"license.html":{}},"body":{"contributing.html":{},"license.html":{}}}],["limitation",{"_index":195,"title":{},"body":{"components/ButtonComponent.html":{},"components/TemplateComponent.html":{},"license.html":{},"additional-documentation/buttons.html":{},"additional-documentation/templates.html":{}}}],["limited",{"_index":1434,"title":{},"body":{"license.html":{}}}],["link",{"_index":734,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutOptions.html":{}}}],["list",{"_index":399,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/LayoutService.html":{},"additional-documentation/containers.html":{}}}],["listener",{"_index":502,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["listing",{"_index":1008,"title":{},"body":{"injectables/LayoutService.html":{}}}],["listners",{"_index":738,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["literal",{"_index":785,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutOptions.html":{}}}],["live",{"_index":1365,"title":{},"body":{"index.html":{}}}],["load",{"_index":211,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["location",{"_index":1497,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["lodash",{"_index":622,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"dependencies.html":{}}}],["lodash]{@link",{"_index":726,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["logic",{"_index":865,"title":{},"body":{"classes/LayoutNode.html":{}}}],["login.component.html",{"_index":1507,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["look",{"_index":98,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["looking",{"_index":937,"title":{},"body":{"classes/LayoutNode.html":{}}}],["lookup",{"_index":1072,"title":{},"body":{"injectables/SchemaService.html":{}}}],["lot",{"_index":1361,"title":{},"body":{"index.html":{}}}],["main",{"_index":1375,"title":{},"body":{"index.html":{}}}],["major",{"_index":1268,"title":{},"body":{"contributing.html":{}}}],["make",{"_index":699,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"contributing.html":{}}}],["making",{"_index":1231,"title":{},"body":{"contributing.html":{}}}],["manager",{"_index":491,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["manually",{"_index":830,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["map",{"_index":530,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{}}}],["map()).get(element",{"_index":571,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["mapkeys",{"_index":916,"title":{},"body":{"classes/LayoutNode.html":{}}}],["mapkeys(pick(this.schema",{"_index":955,"title":{},"body":{"classes/LayoutNode.html":{}}}],["mappeddata",{"_index":568,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["mappeddata.delete(key",{"_index":577,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["mappeddata.set(key",{"_index":572,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["mappeddata.size",{"_index":578,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["mappedpointers",{"_index":1001,"title":{},"body":{"injectables/LayoutService.html":{}}}],["mapping",{"_index":1197,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["marking",{"_index":394,"title":{},"body":{"components/ContainerComponent.html":{},"additional-documentation/containers.html":{}}}],["matched",{"_index":596,"title":{},"body":{"components/HiddenComponent.html":{},"additional-documentation/hidden-inputs.html":{}}}],["matching",{"_index":120,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"components/TemplateComponent.html":{},"modules/TemplateModule.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{},"additional-documentation/containers.html":{},"additional-documentation/hidden-inputs.html":{},"additional-documentation/templates.html":{}}}],["math.min(math.max(index",{"_index":418,"title":{},"body":{"components/ContainerComponent.html":{}}}],["max",{"_index":805,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["means",{"_index":488,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["meantime",{"_index":1166,"title":{},"body":{"components/TemplateComponent.html":{},"additional-documentation/templates.html":{}}}],["memoize",{"_index":920,"title":{},"body":{"classes/LayoutNode.html":{}}}],["merchantability",{"_index":1436,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1417,"title":{},"body":{"license.html":{}}}],["message",{"_index":1243,"title":{},"body":{"contributing.html":{}}}],["metadata",{"_index":134,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"additional-documentation/buttons.html":{}}}],["method",{"_index":284,"title":{},"body":{"components/ButtonComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/WidgetLibraryService.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{}}}],["methods",{"_index":21,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"modules/CoreModule.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"injectables/WidgetLibraryService.html":{}}}],["migrate",{"_index":1051,"title":{},"body":{"injectables/SchemaService.html":{},"dependencies.html":{}}}],["migrate(schema",{"_index":1052,"title":{},"body":{"injectables/SchemaService.html":{}}}],["migrate.draft6(migratedschema",{"_index":1096,"title":{},"body":{"injectables/SchemaService.html":{}}}],["migrate/issues/1",{"_index":1097,"title":{},"body":{"injectables/SchemaService.html":{}}}],["migratedschema",{"_index":1091,"title":{},"body":{"injectables/SchemaService.html":{}}}],["migratedschema.$schema",{"_index":1093,"title":{},"body":{"injectables/SchemaService.html":{}}}],["migratedschema.$schema.includes('draft",{"_index":1094,"title":{},"body":{"injectables/SchemaService.html":{}}}],["migration",{"_index":1075,"title":{},"body":{"injectables/SchemaService.html":{}}}],["mimial",{"_index":1167,"title":{},"body":{"components/TemplateComponent.html":{},"additional-documentation/templates.html":{}}}],["minimum",{"_index":1479,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["miscellaneous",{"_index":1340,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1265,"title":{},"body":{"contributing.html":{}}}],["mit",{"_index":1298,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["mode",{"_index":213,"title":{},"body":{"components/ButtonComponent.html":{},"components/TemplateComponent.html":{},"additional-documentation/buttons.html":{},"additional-documentation/templates.html":{}}}],["model",{"_index":618,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["models/layout",{"_index":80,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["modify",{"_index":1416,"title":{},"body":{"license.html":{}}}],["module",{"_index":323,"title":{"modules/ButtonModule.html":{},"modules/ContainerModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/HiddenModule.html":{},"modules/JsonSchemaFormModule.html":{},"modules/SelectWidgetModule.html":{},"modules/TemplateModule.html":{}},"body":{"modules/ButtonModule.html":{},"modules/ContainerModule.html":{},"modules/FormModule.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"modules/SelectWidgetModule.html":{},"modules/TemplateModule.html":{},"index.html":{},"overview.html":{}}}],["module.componentfactories.find((f",{"_index":840,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["moduleref",{"_index":822,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["modules",{"_index":325,"title":{"modules.html":{}},"body":{"modules/ButtonModule.html":{},"modules/ContainerModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/HiddenModule.html":{},"modules/JsonSchemaFormModule.html":{},"modules/SelectWidgetModule.html":{},"modules/TemplateModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modulewithcomponentfactories",{"_index":801,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["modulewithproviders",{"_index":467,"title":{},"body":{"modules/CoreModule.html":{},"modules/JsonSchemaFormModule.html":{}}}],["more",{"_index":1292,"title":{},"body":{"contributing.html":{},"additional-documentation/introduction.html":{}}}],["mostly",{"_index":704,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["mozilla's",{"_index":714,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["much",{"_index":385,"title":{},"body":{"components/ContainerComponent.html":{},"additional-documentation/containers.html":{}}}],["multi",{"_index":474,"title":{},"body":{"modules/CoreModule.html":{}}}],["multipart/form",{"_index":656,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["n",{"_index":1509,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["name",{"_index":37,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/functions.html":{},"additional-documentation/introduction.html":{}}}],["native",{"_index":1504,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["nav",{"_index":422,"title":{},"body":{"components/ContainerComponent.html":{}}}],["necessary",{"_index":604,"title":{},"body":{"components/HiddenComponent.html":{},"additional-documentation/hidden-inputs.html":{}}}],["need",{"_index":294,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/TemplateComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{},"additional-documentation/hidden-inputs.html":{},"additional-documentation/templates.html":{}}}],["needed",{"_index":599,"title":{},"body":{"components/HiddenComponent.html":{},"classes/LayoutNode.html":{},"additional-documentation/hidden-inputs.html":{}}}],["never",{"_index":601,"title":{},"body":{"components/HiddenComponent.html":{},"additional-documentation/hidden-inputs.html":{}}}],["new",{"_index":255,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/ElementDataStorageService.html":{},"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/TemplateComponent.html":{},"injectables/WidgetLibraryService.html":{},"contributing.html":{},"miscellaneous/variables.html":{},"additional-documentation/buttons.html":{}}}],["newcomponent",{"_index":1132,"title":{},"body":{"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["newlayout",{"_index":1025,"title":{},"body":{"injectables/LayoutService.html":{}}}],["newlayout.concat(...this.buildlayout(difference(availablepointers",{"_index":1030,"title":{},"body":{"injectables/LayoutService.html":{}}}],["newlayout.concat(layoutnode",{"_index":1036,"title":{},"body":{"injectables/LayoutService.html":{}}}],["ng2",{"_index":1333,"title":{},"body":{"dependencies.html":{}}}],["ngafterviewinit",{"_index":111,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["ngdestroy",{"_index":740,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["ngmodule",{"_index":340,"title":{},"body":{"modules/ButtonModule.html":{},"modules/ContainerModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/HiddenModule.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"modules/SelectWidgetModule.html":{},"modules/TemplateModule.html":{},"index.html":{}}}],["ngmoduleref",{"_index":802,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["ngonchanges",{"_index":1133,"title":{},"body":{"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["ngonchanges(changes",{"_index":743,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["ngondestroy",{"_index":747,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["ngoninit",{"_index":108,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ContainerComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["ngx",{"_index":245,"title":{},"body":{"components/ButtonComponent.html":{},"components/JsonSchemaFormComponent.html":{},"contributing.html":{},"index.html":{},"license.html":{},"additional-documentation/buttons.html":{}}}],["ngxjsonschemaform",{"_index":1349,"title":{},"body":{"index.html":{}}}],["ngzone",{"_index":482,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["node",{"_index":81,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ContainerComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{}}}],["node.ts",{"_index":863,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:24",{"_index":881,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:44",{"_index":888,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:54",{"_index":892,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:62",{"_index":897,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:66",{"_index":901,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:70",{"_index":903,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:77",{"_index":906,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:81",{"_index":908,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:85",{"_index":910,"title":{},"body":{"classes/LayoutNode.html":{}}}],["node.ts:94",{"_index":912,"title":{},"body":{"classes/LayoutNode.html":{}}}],["nodes",{"_index":995,"title":{},"body":{"injectables/LayoutService.html":{}}}],["non",{"_index":543,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["none",{"_index":435,"title":{},"body":{"components/ContainerComponent.html":{}}}],["noninfringement",{"_index":1439,"title":{},"body":{"license.html":{}}}],["normalizes",{"_index":893,"title":{},"body":{"classes/LayoutNode.html":{}}}],["note",{"_index":192,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/LayoutItem.html":{},"components/TemplateComponent.html":{},"contributing.html":{},"index.html":{},"additional-documentation/buttons.html":{},"additional-documentation/templates.html":{}}}],["notice",{"_index":1427,"title":{},"body":{"license.html":{}}}],["npm",{"_index":1372,"title":{},"body":{"index.html":{}}}],["null",{"_index":646,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["number",{"_index":414,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{}}}],["number.isinteger(this.layoutnode.options.selectedindex",{"_index":415,"title":{},"body":{"components/ContainerComponent.html":{}}}],["numerous",{"_index":1508,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["object",{"_index":702,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutItem.html":{},"injectables/SchemaService.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["objects",{"_index":539,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["observable",{"_index":736,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["obtaining",{"_index":1407,"title":{},"body":{"license.html":{}}}],["obviously",{"_index":621,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["older",{"_index":1500,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["omit",{"_index":917,"title":{},"body":{"classes/LayoutNode.html":{}}}],["omit(this.layoutitem",{"_index":956,"title":{},"body":{"classes/LayoutNode.html":{}}}],["once",{"_index":1482,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["onchanges",{"_index":634,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["onclick",{"_index":240,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["onclick(event",{"_index":248,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["ondestroy",{"_index":635,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ContainerComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["ontabclick",{"_index":356,"title":{},"body":{"components/ContainerComponent.html":{}}}],["ontabclick(layout",{"_index":359,"title":{},"body":{"components/ContainerComponent.html":{}}}],["onto",{"_index":1114,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["open",{"_index":236,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/LayoutOptions.html":{},"additional-documentation/buttons.html":{}}}],["opendialog",{"_index":285,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["opendialog(event",{"_index":250,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["option",{"_index":164,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["optional",{"_index":39,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/functions.html":{},"additional-documentation/containers.html":{}}}],["options",{"_index":20,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{},"additional-documentation/containers.html":{}}}],["options.data",{"_index":861,"title":{},"body":{"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{}}}],["options.data.ts",{"_index":963,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["options.data.ts:38",{"_index":969,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["options.title",{"_index":176,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"additional-documentation/buttons.html":{}}}],["order",{"_index":286,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{}}}],["original",{"_index":899,"title":{},"body":{"classes/LayoutNode.html":{},"contributing.html":{}}}],["others",{"_index":851,"title":{},"body":{"interfaces/LayoutItem.html":{},"interfaces/LayoutOptions.html":{}}}],["otherwise",{"_index":1448,"title":{},"body":{"license.html":{}}}],["out",{"_index":335,"title":{},"body":{"modules/ButtonModule.html":{},"modules/ContainerModule.html":{},"modules/FormModule.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"modules/SelectWidgetModule.html":{},"modules/TemplateModule.html":{},"index.html":{},"license.html":{},"overview.html":{},"additional-documentation/introduction.html":{}}}],["outline",{"_index":436,"title":{},"body":{"components/ContainerComponent.html":{}}}],["outlines",{"_index":1270,"title":{},"body":{"contributing.html":{}}}],["over",{"_index":1353,"title":{},"body":{"index.html":{}}}],["overflow",{"_index":423,"title":{},"body":{"components/ContainerComponent.html":{}}}],["overview",{"_index":1456,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owners",{"_index":1229,"title":{},"body":{"contributing.html":{}}}],["package",{"_index":1306,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":439,"title":{},"body":{"components/ContainerComponent.html":{}}}],["page",{"_index":1222,"title":{"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{},"additional-documentation/containers.html":{},"additional-documentation/hidden-inputs.html":{},"additional-documentation/templates.html":{}},"body":{"changelog.html":{}}}],["pairing",{"_index":556,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["param",{"_index":116,"title":{},"body":{"classes/AbstractWidget.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{}}}],["parameters",{"_index":35,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/functions.html":{}}}],["parentschema",{"_index":1082,"title":{},"body":{"injectables/SchemaService.html":{}}}],["parentschema.type",{"_index":1083,"title":{},"body":{"injectables/SchemaService.html":{}}}],["parity",{"_index":1363,"title":{},"body":{"index.html":{}}}],["parse",{"_index":866,"title":{},"body":{"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["parsing",{"_index":1050,"title":{},"body":{"injectables/SchemaService.html":{}}}],["part",{"_index":597,"title":{},"body":{"components/HiddenComponent.html":{},"license.html":{},"additional-documentation/hidden-inputs.html":{}}}],["participating",{"_index":1247,"title":{},"body":{"contributing.html":{}}}],["particular",{"_index":964,"title":{},"body":{"interfaces/LayoutOptions.html":{},"license.html":{}}}],["pass",{"_index":874,"title":{},"body":{"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["passed",{"_index":275,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"additional-documentation/buttons.html":{}}}],["path",{"_index":853,"title":{},"body":{"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{}}}],["per",{"_index":806,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"injectables/SchemaService.html":{}}}],["permission",{"_index":1401,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1423,"title":{},"body":{"license.html":{}}}],["person",{"_index":1406,"title":{},"body":{"license.html":{},"additional-documentation/introduction.html":{}}}],["person's",{"_index":1470,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["persons",{"_index":1424,"title":{},"body":{"license.html":{}}}],["pertains",{"_index":925,"title":{},"body":{"classes/LayoutNode.html":{}}}],["pick",{"_index":918,"title":{},"body":{"classes/LayoutNode.html":{}}}],["pick(this.schema",{"_index":954,"title":{},"body":{"classes/LayoutNode.html":{}}}],["piece",{"_index":849,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["piggybacking",{"_index":485,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"miscellaneous/typealiases.html":{}}}],["placeholder",{"_index":1128,"title":{},"body":{"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["play",{"_index":1367,"title":{},"body":{"index.html":{}}}],["playground",{"_index":629,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["please",{"_index":1225,"title":{},"body":{"contributing.html":{}}}],["plugin",{"_index":487,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["plugin.service",{"_index":473,"title":{},"body":{"modules/CoreModule.html":{}}}],["plugin.service.ts",{"_index":480,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"miscellaneous/typealiases.html":{}}}],["plugin.service.ts:21",{"_index":524,"title":{},"body":{"injectables/DataEventPluginService.html":{}}}],["plugin.service.ts:26",{"_index":526,"title":{},"body":{"injectables/DataEventPluginService.html":{}}}],["plugin.service.ts:31",{"_index":525,"title":{},"body":{"injectables/DataEventPluginService.html":{}}}],["pointer",{"_index":438,"title":{},"body":{"components/ContainerComponent.html":{},"classes/LayoutNode.html":{},"injectables/SchemaService.html":{}}}],["pointer.charat(0",{"_index":944,"title":{},"body":{"classes/LayoutNode.html":{}}}],["pointer.replace(/\\./g",{"_index":945,"title":{},"body":{"classes/LayoutNode.html":{}}}],["pointers",{"_index":1047,"title":{},"body":{"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{}}}],["pointers.set(pointer.replace(/\\/properties/g",{"_index":1084,"title":{},"body":{"injectables/SchemaService.html":{}}}],["populate",{"_index":107,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["popup",{"_index":288,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["portions",{"_index":1391,"title":{},"body":{"license.html":{}}}],["possible",{"_index":202,"title":{},"body":{"components/ButtonComponent.html":{},"components/TemplateComponent.html":{},"additional-documentation/buttons.html":{}}}],["post",{"_index":661,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["predecesor",{"_index":1354,"title":{},"body":{"index.html":{}}}],["present",{"_index":489,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["presented",{"_index":889,"title":{},"body":{"classes/LayoutNode.html":{},"additional-documentation/introduction.html":{}}}],["prevent",{"_index":1274,"title":{},"body":{"contributing.html":{}}}],["primitive",{"_index":538,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["private",{"_index":87,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ContainerComponent.html":{},"injectables/ElementDataStorageService.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"injectables/WidgetLibraryService.html":{}}}],["project",{"_index":1235,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{}}}],["projects/.../data",{"_index":1460,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../json",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../widget",{"_index":1343,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../widget.decorator.ts",{"_index":1344,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/demo/src/assets/examples",{"_index":1388,"title":{},"body":{"index.html":{}}}],["projects/ngx",{"_index":6,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"components/TemplateComponent.html":{},"modules/TemplateModule.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["properly",{"_index":595,"title":{},"body":{"components/HiddenComponent.html":{},"additional-documentation/hidden-inputs.html":{}}}],["properties",{"_index":15,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"interfaces/SchemaAnalyzer.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"interfaces/WidgetDecorator.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{}}}],["property",{"_index":265,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/LayoutItem.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{}}}],["proposed",{"_index":1269,"title":{},"body":{"contributing.html":{}}}],["protected",{"_index":105,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["provide",{"_index":475,"title":{},"body":{"modules/CoreModule.html":{},"components/JsonSchemaFormComponent.html":{}}}],["provided",{"_index":1430,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":565,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"injectables/WidgetLibraryService.html":{}}}],["providers",{"_index":329,"title":{},"body":{"modules/ButtonModule.html":{},"modules/ContainerModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"modules/SelectWidgetModule.html":{},"modules/TemplateModule.html":{},"overview.html":{}}}],["provides",{"_index":533,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{}}}],["proxy",{"_index":869,"title":{},"body":{"classes/LayoutNode.html":{}}}],["prs",{"_index":1301,"title":{},"body":{"contributing.html":{}}}],["public",{"_index":354,"title":{},"body":{"components/ContainerComponent.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{}}}],["publish",{"_index":1418,"title":{},"body":{"license.html":{}}}],["pull",{"_index":1262,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":1438,"title":{},"body":{"license.html":{}}}],["put",{"_index":857,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["question1",{"_index":1498,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["question2",{"_index":1501,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["react",{"_index":715,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["read",{"_index":102,"title":{},"body":{"classes/AbstractWidget.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["readme",{"_index":125,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/TemplateComponent.html":{}}}],["readonly",{"_index":103,"title":{},"body":{"classes/AbstractWidget.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{}}}],["ready",{"_index":1358,"title":{},"body":{"index.html":{}}}],["real",{"_index":692,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["recent",{"_index":203,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["recognized",{"_index":1040,"title":{},"body":{"injectables/LayoutService.html":{}}}],["recursivereference",{"_index":962,"title":{},"body":{"classes/LayoutNode.html":{}}}],["redering",{"_index":191,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["reducing",{"_index":209,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["ref",{"_index":958,"title":{},"body":{"classes/LayoutNode.html":{}}}],["reference",{"_index":96,"title":{},"body":{"classes/AbstractWidget.html":{},"injectables/ElementDataStorageService.html":{},"classes/LayoutNode.html":{},"injectables/SchemaService.html":{}}}],["referenced",{"_index":557,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["references",{"_index":1007,"title":{},"body":{"injectables/LayoutService.html":{}}}],["referencing",{"_index":544,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["referened",{"_index":1009,"title":{},"body":{"injectables/LayoutService.html":{}}}],["register",{"_index":1342,"title":{},"body":{"miscellaneous/functions.html":{}}}],["register(component",{"_index":1204,"title":{},"body":{"injectables/WidgetLibraryService.html":{},"miscellaneous/functions.html":{}}}],["registered",{"_index":1202,"title":{},"body":{"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{}}}],["registering",{"_index":1203,"title":{},"body":{"injectables/WidgetLibraryService.html":{},"miscellaneous/functions.html":{}}}],["registers",{"_index":1348,"title":{},"body":{"miscellaneous/functions.html":{}}}],["related",{"_index":938,"title":{},"body":{"classes/LayoutNode.html":{},"injectables/SchemaService.html":{}}}],["release",{"_index":1220,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["released",{"_index":1296,"title":{},"body":{"contributing.html":{}}}],["releases",{"_index":1221,"title":{},"body":{"changelog.html":{}}}],["relevant",{"_index":1069,"title":{},"body":{"injectables/SchemaService.html":{}}}],["remove",{"_index":550,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{}}}],["removed",{"_index":546,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["render",{"_index":406,"title":{},"body":{"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"components/TemplateComponent.html":{},"additional-documentation/containers.html":{},"additional-documentation/hidden-inputs.html":{},"additional-documentation/templates.html":{}}}],["rendered",{"_index":190,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"additional-documentation/buttons.html":{},"additional-documentation/containers.html":{}}}],["rendering",{"_index":791,"title":{},"body":{"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"components/TemplateComponent.html":{}}}],["renders",{"_index":348,"title":{},"body":{"components/ContainerComponent.html":{}}}],["replace",{"_index":99,"title":{},"body":{"classes/AbstractWidget.html":{},"injectables/LayoutService.html":{}}}],["report",{"_index":1251,"title":{},"body":{"contributing.html":{}}}],["repository",{"_index":1224,"title":{},"body":{"contributing.html":{}}}],["represent",{"_index":859,"title":{},"body":{"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{}}}],["request",{"_index":1263,"title":{},"body":{"contributing.html":{}}}],["requests",{"_index":1239,"title":{},"body":{"contributing.html":{}}}],["requirement",{"_index":1465,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["requirements",{"_index":1305,"title":{},"body":{"contributing.html":{}}}],["requires",{"_index":375,"title":{},"body":{"components/ContainerComponent.html":{},"contributing.html":{},"additional-documentation/containers.html":{}}}],["reset",{"_index":154,"title":{},"body":{"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"modules/ContainerModule.html":{},"modules/FormModule.html":{},"modules/HiddenModule.html":{},"modules/JsonSchemaFormModule.html":{},"modules/SelectWidgetModule.html":{},"modules/TemplateModule.html":{},"overview.html":{},"additional-documentation/buttons.html":{}}}],["resolve",{"_index":1165,"title":{},"body":{"components/TemplateComponent.html":{},"additional-documentation/templates.html":{}}}],["respond",{"_index":219,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["restricted",{"_index":205,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["restriction",{"_index":1413,"title":{},"body":{"license.html":{}}}],["result",{"_index":119,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"components/TemplateComponent.html":{},"modules/TemplateModule.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{},"additional-documentation/containers.html":{},"additional-documentation/hidden-inputs.html":{},"additional-documentation/templates.html":{}}}],["results",{"_index":121,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"components/TemplateComponent.html":{},"modules/TemplateModule.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{},"additional-documentation/containers.html":{},"additional-documentation/hidden-inputs.html":{},"additional-documentation/templates.html":{}}}],["return",{"_index":95,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ContainerComponent.html":{},"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"injectables/WidgetLibraryService.html":{}}}],["returned",{"_index":701,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["returns",{"_index":61,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"modules/CoreModule.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"miscellaneous/functions.html":{}}}],["review",{"_index":1290,"title":{},"body":{"contributing.html":{}}}],["revist",{"_index":1176,"title":{},"body":{"components/TemplateComponent.html":{}}}],["rewritten",{"_index":1356,"title":{},"body":{"index.html":{}}}],["rights",{"_index":1415,"title":{},"body":{"license.html":{}}}],["root",{"_index":566,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/WidgetLibraryService.html":{}}}],["rules",{"_index":1241,"title":{},"body":{"contributing.html":{}}}],["run",{"_index":228,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["running",{"_index":289,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["runtime",{"_index":809,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["runtimecomponent",{"_index":811,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["runtimecomponentmodule",{"_index":813,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["rxjs",{"_index":678,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"dependencies.html":{}}}],["same",{"_index":386,"title":{},"body":{"components/ContainerComponent.html":{},"additional-documentation/containers.html":{}}}],["sample",{"_index":810,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["samples",{"_index":1386,"title":{},"body":{"index.html":{}}}],["savethen",{"_index":1374,"title":{},"body":{"index.html":{}}}],["scharett",{"_index":1399,"title":{},"body":{"license.html":{}}}],["schema",{"_index":8,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"components/TemplateComponent.html":{},"modules/TemplateModule.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{}}}],["schema(value",{"_index":1076,"title":{},"body":{"injectables/SchemaService.html":{}}}],["schema.json",{"_index":1467,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["schema.org/draft",{"_index":1104,"title":{},"body":{"injectables/SchemaService.html":{},"additional-documentation/introduction.html":{}}}],["schema.service",{"_index":1000,"title":{},"body":{"injectables/LayoutService.html":{}}}],["schema.type",{"_index":931,"title":{},"body":{"classes/LayoutNode.html":{},"injectables/SchemaService.html":{}}}],["schemaanalyzer",{"_index":887,"title":{"interfaces/SchemaAnalyzer.html":{}},"body":{"classes/LayoutNode.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{}}}],["schemaanalyzer.datapointermap.get(layoutnode.getpointer(item.key",{"_index":941,"title":{},"body":{"classes/LayoutNode.html":{}}}],["schemapointers",{"_index":1026,"title":{},"body":{"injectables/LayoutService.html":{}}}],["schemas",{"_index":1384,"title":{},"body":{"index.html":{}}}],["schemaservice",{"_index":639,"title":{"injectables/SchemaService.html":{}},"body":{"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{}}}],["schnell",{"_index":1394,"title":{},"body":{"license.html":{}}}],["second",{"_index":231,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["see",{"_index":187,"title":{},"body":{"components/ButtonComponent.html":{},"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutOptions.html":{},"changelog.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{}}}],["seems",{"_index":825,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["see{https://github.com/angular/angular/issues/20875",{"_index":1178,"title":{},"body":{"components/TemplateComponent.html":{}}}],["select",{"_index":318,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"components/TemplateComponent.html":{},"additional-documentation/containers.html":{}}}],["selected",{"_index":402,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/LayoutOptions.html":{},"additional-documentation/containers.html":{}}}],["selectedindex",{"_index":404,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/LayoutOptions.html":{},"additional-documentation/containers.html":{}}}],["selectedlayout",{"_index":355,"title":{},"body":{"components/ContainerComponent.html":{}}}],["selector",{"_index":135,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["selectwidgetcomponent",{"_index":317,"title":{"components/SelectWidgetComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"components/TemplateComponent.html":{},"overview.html":{}}}],["selectwidgetmodule",{"_index":457,"title":{"modules/SelectWidgetModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/FormModule.html":{},"modules/JsonSchemaFormModule.html":{},"modules/SelectWidgetModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["sell",{"_index":1421,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1219,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["sematic",{"_index":1295,"title":{},"body":{"contributing.html":{}}}],["service",{"_index":529,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{}}}],["services",{"_index":986,"title":{},"body":{"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"injectables/WidgetLibraryService.html":{}}}],["services.github.io/react",{"_index":720,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["services/data",{"_index":472,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/element",{"_index":82,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["services/json",{"_index":683,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["services/layout.service",{"_index":684,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["services/react",{"_index":718,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["services/schema.service",{"_index":685,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["set",{"_index":89,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ContainerComponent.html":{},"injectables/ElementDataStorageService.html":{},"interfaces/LayoutItem.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"additional-documentation/introduction.html":{},"additional-documentation/containers.html":{}}}],["set(element",{"_index":563,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["setlayout",{"_index":989,"title":{},"body":{"injectables/LayoutService.html":{}}}],["setlayout(value",{"_index":991,"title":{},"body":{"injectables/LayoutService.html":{}}}],["setlayoutnode(value",{"_index":71,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["sets",{"_index":648,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{}}}],["setschema(value",{"_index":1063,"title":{},"body":{"injectables/SchemaService.html":{}}}],["setting",{"_index":980,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["shall",{"_index":1428,"title":{},"body":{"license.html":{}}}],["shown",{"_index":1503,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["side",{"_index":615,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["silly",{"_index":826,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["similar",{"_index":531,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"components/JsonSchemaFormComponent.html":{},"index.html":{}}}],["similarly",{"_index":272,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["simple",{"_index":170,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["simplechanges",{"_index":676,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["simplest",{"_index":377,"title":{},"body":{"components/ContainerComponent.html":{},"additional-documentation/containers.html":{}}}],["simply",{"_index":393,"title":{},"body":{"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/containers.html":{},"additional-documentation/hidden-inputs.html":{}}}],["size",{"_index":210,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["sm",{"_index":1510,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["small",{"_index":1279,"title":{},"body":{"contributing.html":{}}}],["software",{"_index":1408,"title":{},"body":{"license.html":{}}}],["solid",{"_index":427,"title":{},"body":{"components/ContainerComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"modules/ButtonModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/CoreModule.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"modules/FormModule.html":{},"components/HiddenComponent.html":{},"modules/HiddenModule.html":{},"components/JsonSchemaFormComponent.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{},"components/TemplateComponent.html":{},"modules/TemplateModule.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"contributing.html":{}}}],["spaces",{"_index":1288,"title":{},"body":{"contributing.html":{}}}],["special",{"_index":1489,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["specific",{"_index":370,"title":{},"body":{"components/ContainerComponent.html":{},"classes/LayoutNode.html":{},"contributing.html":{},"additional-documentation/containers.html":{}}}],["specifically",{"_index":1491,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["specified",{"_index":232,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/LayoutItem.html":{},"additional-documentation/buttons.html":{}}}],["specify",{"_index":160,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"interfaces/LayoutItem.html":{},"additional-documentation/buttons.html":{},"additional-documentation/containers.html":{}}}],["specifying",{"_index":188,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["src",{"_index":178,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/LayoutOptions.html":{},"additional-documentation/buttons.html":{}}}],["standard",{"_index":1505,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["standards",{"_index":1294,"title":{},"body":{"contributing.html":{}}}],["started",{"_index":1216,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{}},"body":{}}],["static",{"_index":464,"title":{},"body":{"modules/CoreModule.html":{},"modules/JsonSchemaFormModule.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{}}}],["still",{"_index":1360,"title":{},"body":{"index.html":{}}}],["storage",{"_index":567,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["storage.service",{"_index":83,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["storage.service.ts",{"_index":528,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["storage.service.ts:21",{"_index":564,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["storage.service.ts:29",{"_index":559,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["storage.service.ts:36",{"_index":562,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["storage.service.ts:41",{"_index":554,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["store",{"_index":535,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["string",{"_index":48,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"injectables/WidgetLibraryService.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{}}}],["strings",{"_index":201,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["structured",{"_index":617,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["structures",{"_index":372,"title":{},"body":{"components/ContainerComponent.html":{},"additional-documentation/containers.html":{}}}],["style",{"_index":380,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/LayoutOptions.html":{},"contributing.html":{},"additional-documentation/introduction.html":{},"additional-documentation/containers.html":{}}}],["styles",{"_index":127,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["styleurls",{"_index":137,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["subject",{"_index":677,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"license.html":{}}}],["sublicense",{"_index":1420,"title":{},"body":{"license.html":{}}}],["submit",{"_index":155,"title":{},"body":{"components/ButtonComponent.html":{},"contributing.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{}}}],["submitform",{"_index":640,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["submits",{"_index":750,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["submittal",{"_index":603,"title":{},"body":{"components/HiddenComponent.html":{},"additional-documentation/hidden-inputs.html":{}}}],["submitted",{"_index":698,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"contributing.html":{}}}],["submitting",{"_index":1259,"title":{},"body":{"contributing.html":{}}}],["substantial",{"_index":1429,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":1277,"title":{},"body":{"contributing.html":{}}}],["such",{"_index":221,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["suffice",{"_index":1102,"title":{},"body":{"injectables/SchemaService.html":{}}}],["super(jsf",{"_index":304,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["super.ngoninit",{"_index":408,"title":{},"body":{"components/ContainerComponent.html":{}}}],["supply",{"_index":398,"title":{},"body":{"components/ContainerComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/containers.html":{}}}],["support",{"_index":1162,"title":{},"body":{"components/TemplateComponent.html":{},"modules.html":{},"additional-documentation/templates.html":{}}}],["supported",{"_index":501,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"additional-documentation/introduction.html":{}}}],["supports",{"_index":152,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/DataEventPluginService.html":{},"additional-documentation/buttons.html":{}}}],["supports(eventname",{"_index":495,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["sure",{"_index":700,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["svg",{"_index":1452,"title":{},"body":{"modules.html":{}}}],["system",{"_index":872,"title":{},"body":{"classes/LayoutNode.html":{}}}],["t",{"_index":486,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["tab",{"_index":401,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/LayoutOptions.html":{},"additional-documentation/containers.html":{}}}],["tabindex",{"_index":968,"title":{},"body":{"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{}}}],["table",{"_index":1160,"title":{},"body":{"components/TemplateComponent.html":{},"additional-documentation/templates.html":{}}}],["tabs",{"_index":365,"title":{},"body":{"components/ContainerComponent.html":{},"additional-documentation/containers.html":{}}}],["tabs/tab",{"_index":347,"title":{},"body":{"components/ContainerComponent.html":{}}}],["tag",{"_index":157,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["take",{"_index":1352,"title":{},"body":{"index.html":{}}}],["target",{"_index":264,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{}}}],["target.parentelement",{"_index":514,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["team",{"_index":1164,"title":{},"body":{"components/TemplateComponent.html":{},"additional-documentation/templates.html":{}}}],["tells",{"_index":1490,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["tempalte",{"_index":788,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["template",{"_index":126,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{},"additional-documentation/templates.html":{}}}],["template.component",{"_index":1188,"title":{},"body":{"modules/TemplateModule.html":{}}}],["template.component.html",{"_index":1158,"title":{},"body":{"components/TemplateComponent.html":{}}}],["template.component.scss",{"_index":1157,"title":{},"body":{"components/TemplateComponent.html":{}}}],["template.content",{"_index":820,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["template.innerhtml",{"_index":818,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["template/template.module",{"_index":776,"title":{},"body":{"modules/JsonSchemaFormModule.html":{}}}],["templatecomponent",{"_index":320,"title":{"components/TemplateComponent.html":{}},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"modules/TemplateModule.html":{},"overview.html":{}}}],["templatecontainer",{"_index":1180,"title":{},"body":{"components/TemplateComponent.html":{}}}],["templatemodule",{"_index":767,"title":{"modules/TemplateModule.html":{}},"body":{"modules/JsonSchemaFormModule.html":{},"modules/TemplateModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["templates",{"_index":858,"title":{"additional-documentation/templates.html":{}},"body":{"interfaces/LayoutItem.html":{},"components/TemplateComponent.html":{},"additional-documentation/templates.html":{}}}],["templatetag",{"_index":832,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["templatetag.content",{"_index":835,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["templatetag.innerhtml",{"_index":833,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["templateurl",{"_index":139,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"additional-documentation/buttons.html":{}}}],["templating",{"_index":1168,"title":{},"body":{"components/TemplateComponent.html":{},"additional-documentation/templates.html":{}}}],["test",{"_index":1387,"title":{},"body":{"index.html":{}}}],["text",{"_index":296,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{},"additional-documentation/containers.html":{}}}],["text/plain",{"_index":657,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["therefore",{"_index":214,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["therfore",{"_index":605,"title":{},"body":{"components/HiddenComponent.html":{},"additional-documentation/hidden-inputs.html":{}}}],["this._layout",{"_index":1003,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this._layoutnode",{"_index":91,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["this._layoutnode.options",{"_index":93,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["this._schema",{"_index":1077,"title":{},"body":{"injectables/SchemaService.html":{}}}],["this.ajv.compile(this.schema",{"_index":1110,"title":{},"body":{"injectables/SchemaService.html":{}}}],["this.ajv.removeschema(this.schema",{"_index":1108,"title":{},"body":{"injectables/SchemaService.html":{}}}],["this.buildlayout((layoutitem).items",{"_index":1032,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.buildlayout(this.dedupe(clonedeep(value",{"_index":1005,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.childnodes",{"_index":936,"title":{},"body":{"classes/LayoutNode.html":{}}}],["this.compiler",{"_index":838,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["this.compileschema",{"_index":1078,"title":{},"body":{"injectables/SchemaService.html":{}}}],["this.componentfactory.resolvecomponentfactory",{"_index":1143,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.componentfactory.resolvecomponentfactory(this.options.template",{"_index":1183,"title":{},"body":{"components/TemplateComponent.html":{}}}],["this.control",{"_index":113,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["this.createcomponent",{"_index":1136,"title":{},"body":{"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["this.datapointer.split('/').pop",{"_index":948,"title":{},"body":{"classes/LayoutNode.html":{}}}],["this.dedupe((layoutitem).items",{"_index":1021,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.destroyed$.complete",{"_index":749,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.destroyed$.next",{"_index":748,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.elementdatastorage.get(target",{"_index":515,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["this.elementdatastorage.has(target",{"_index":513,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["this.elementdatastorage.set(this.control.nativeelement",{"_index":114,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["this.forminitialized",{"_index":746,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.generatengcontent",{"_index":1145,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.initializeform",{"_index":753,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.initializelayout",{"_index":756,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.initializeschema",{"_index":755,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.jsf.compiletemplate(this.layoutnode.template",{"_index":1148,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.jsf.formoptions.disableinvalidsubmit",{"_index":303,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.jsf.initializecontrol(this",{"_index":109,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["this.jsf.updatevalue(this",{"_index":117,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["this.layoutitem",{"_index":934,"title":{},"body":{"classes/LayoutNode.html":{}}}],["this.layoutitem.name",{"_index":947,"title":{},"body":{"classes/LayoutNode.html":{}}}],["this.layoutitem.template",{"_index":953,"title":{},"body":{"classes/LayoutNode.html":{}}}],["this.layoutitem.type",{"_index":950,"title":{},"body":{"classes/LayoutNode.html":{}}}],["this.layoutnode",{"_index":1141,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.layoutnode.items.length",{"_index":419,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.layoutnode.items[this.getselectedindex",{"_index":411,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.layoutnode.layoutdefinition",{"_index":115,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["this.layoutnode.options",{"_index":1149,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.layoutnode.options.selectedindex",{"_index":416,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.layoutnode.template",{"_index":1147,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.layoutnode.type",{"_index":410,"title":{},"body":{"components/ContainerComponent.html":{},"components/SelectWidgetComponent.html":{}}}],["this.layoutservice.setlayout(this.layout",{"_index":758,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.manager.getzone",{"_index":508,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["this.mappedpointers.add(key",{"_index":1018,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.mappedpointers.clear",{"_index":1004,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.mappedpointers.has(key",{"_index":1017,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.moduleref",{"_index":843,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["this.newcomponent",{"_index":1137,"title":{},"body":{"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["this.newcomponent.instance[input",{"_index":1138,"title":{},"body":{"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["this.options",{"_index":92,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["this.options.template",{"_index":1181,"title":{},"body":{"components/TemplateComponent.html":{}}}],["this.schema",{"_index":935,"title":{},"body":{"classes/LayoutNode.html":{}}}],["this.schemaservice",{"_index":1035,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.schemaservice.datapointermap",{"_index":1027,"title":{},"body":{"injectables/LayoutService.html":{}}}],["this.schemaservice.migrate(this.schema",{"_index":762,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.schemaservice.schema",{"_index":761,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.selectedlayout",{"_index":409,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.storage.delete(element",{"_index":579,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["this.storage.get(element",{"_index":569,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["this.storage.get(element).get(key",{"_index":574,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["this.storage.get(element).has(key",{"_index":575,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["this.storage.has(element",{"_index":573,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["this.storage.set(element",{"_index":570,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["this.templatecontainer.createcomponent",{"_index":1182,"title":{},"body":{"components/TemplateComponent.html":{}}}],["this.updatecomponent",{"_index":1134,"title":{},"body":{"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["this.updatedata",{"_index":94,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["this.updateform",{"_index":742,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["this.validator",{"_index":1109,"title":{},"body":{"injectables/SchemaService.html":{}}}],["this.validator(data",{"_index":1106,"title":{},"body":{"injectables/SchemaService.html":{}}}],["this.widgetcontainer.createcomponent",{"_index":1142,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.widgetlibraryservice.getwidget(this.layoutnode.type",{"_index":1144,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["this.x",{"_index":831,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["this[input",{"_index":1139,"title":{},"body":{"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["throw",{"_index":928,"title":{},"body":{"classes/LayoutNode.html":{}}}],["throws",{"_index":927,"title":{},"body":{"classes/LayoutNode.html":{}}}],["thus",{"_index":542,"title":{},"body":{"injectables/ElementDataStorageService.html":{},"contributing.html":{}}}],["time",{"_index":212,"title":{},"body":{"components/ButtonComponent.html":{},"components/JsonSchemaFormComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{}}}],["title",{"_index":175,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{},"additional-documentation/containers.html":{}}}],["todo",{"_index":301,"title":{},"body":{"components/ButtonComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["top",{"_index":449,"title":{},"body":{"components/ContainerComponent.html":{}}}],["tort",{"_index":1447,"title":{},"body":{"license.html":{}}}],["trackbyfn",{"_index":357,"title":{},"body":{"components/ContainerComponent.html":{},"components/JsonSchemaFormComponent.html":{}}}],["trackbyfn(index",{"_index":361,"title":{},"body":{"components/ContainerComponent.html":{},"components/JsonSchemaFormComponent.html":{}}}],["transition",{"_index":442,"title":{},"body":{"components/ContainerComponent.html":{}}}],["translates",{"_index":1487,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["transpile",{"_index":200,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["traverse",{"_index":627,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{},"dependencies.html":{}}}],["traverse(this.schema",{"_index":1079,"title":{},"body":{"injectables/SchemaService.html":{}}}],["traverse]{@link",{"_index":730,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["tree",{"_index":129,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["trigger",{"_index":266,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["triggered",{"_index":274,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["true",{"_index":396,"title":{},"body":{"components/ContainerComponent.html":{},"modules/CoreModule.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/SchemaService.html":{},"additional-documentation/introduction.html":{},"additional-documentation/containers.html":{}}}],["try",{"_index":1033,"title":{},"body":{"injectables/LayoutService.html":{},"contributing.html":{}}}],["tslib",{"_index":1336,"title":{},"body":{"dependencies.html":{}}}],["tslint",{"_index":1291,"title":{},"body":{"contributing.html":{}}}],["tslint:disable",{"_index":804,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["type",{"_index":38,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"injectables/LayoutService.html":{},"interfaces/SchemaAnalyzer.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{},"additional-documentation/containers.html":{},"additional-documentation/templates.html":{}}}],["typealiases",{"_index":1458,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1205,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["types",{"_index":151,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"classes/LayoutNode.html":{},"components/TemplateComponent.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/functions.html":{},"additional-documentation/buttons.html":{},"additional-documentation/containers.html":{}}}],["types.foreach((type",{"_index":1206,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["types/ace",{"_index":1317,"title":{},"body":{"dependencies.html":{}}}],["types/json",{"_index":1319,"title":{},"body":{"dependencies.html":{}}}],["types/lodash",{"_index":1321,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":997,"title":{},"body":{"injectables/LayoutService.html":{}}}],["unacceptable",{"_index":1252,"title":{},"body":{"contributing.html":{}}}],["undeclared",{"_index":856,"title":{},"body":{"interfaces/LayoutItem.html":{}}}],["undefined",{"_index":412,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"classes/LayoutNode.html":{},"components/SelectWidgetComponent.html":{}}}],["under",{"_index":1297,"title":{},"body":{"contributing.html":{}}}],["underlying",{"_index":97,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["unique",{"_index":884,"title":{},"body":{"classes/LayoutNode.html":{}}}],["uniqueid",{"_index":919,"title":{},"body":{"classes/LayoutNode.html":{}}}],["uniqueid('control",{"_index":883,"title":{},"body":{"classes/LayoutNode.html":{}}}],["unknownformats",{"_index":1088,"title":{},"body":{"injectables/SchemaService.html":{}}}],["unnecessary",{"_index":829,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["unsubscribe",{"_index":737,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["up",{"_index":261,"title":{},"body":{"components/ButtonComponent.html":{},"classes/LayoutNode.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{}}}],["update",{"_index":59,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["updatecomponent",{"_index":1135,"title":{},"body":{"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["updated",{"_index":1218,"title":{},"body":{"changelog.html":{}}}],["updatedata",{"_index":112,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["updateform",{"_index":752,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["updatevalue",{"_index":22,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["updatevalue(ctx",{"_index":796,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["updatevalue(event",{"_index":56,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["uphold",{"_index":1250,"title":{},"body":{"contributing.html":{}}}],["upon",{"_index":739,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{}}}],["urlencoded",{"_index":655,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["us/docs/web/html/element/form#attributes",{"_index":651,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["us/docs/web/html/element/input#dirname",{"_index":971,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/element/input#disabled",{"_index":972,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/element/input#readonly",{"_index":975,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/element/input/image#alt",{"_index":981,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/element/input/image#height",{"_index":982,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/element/input/image#src",{"_index":983,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/element/input/image#width",{"_index":984,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/global_attributes/accesskey",{"_index":970,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/global_attributes/class",{"_index":973,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/global_attributes/style",{"_index":976,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/global_attributes/tabindex",{"_index":977,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["us/docs/web/html/global_attributes/title",{"_index":978,"title":{},"body":{"interfaces/LayoutOptions.html":{}}}],["use",{"_index":156,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/ElementDataStorageService.html":{},"injectables/JsonSchemaFormService.html":{},"contributing.html":{},"index.html":{},"license.html":{},"additional-documentation/buttons.html":{}}}],["useclass",{"_index":476,"title":{},"body":{"modules/CoreModule.html":{}}}],["used",{"_index":166,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/JsonSchemaFormComponent.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/TemplateComponent.html":{},"additional-documentation/buttons.html":{},"additional-documentation/containers.html":{},"additional-documentation/templates.html":{}}}],["useful",{"_index":1494,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["user",{"_index":687,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"classes/LayoutNode.html":{}}}],["uses",{"_index":388,"title":{},"body":{"components/ContainerComponent.html":{},"contributing.html":{},"additional-documentation/containers.html":{}}}],["using",{"_index":100,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/TemplateComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{}}}],["usually",{"_index":290,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["utility",{"_index":623,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["valdiated",{"_index":1060,"title":{},"body":{"injectables/SchemaService.html":{}}}],["valid",{"_index":703,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["validate",{"_index":667,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{}}}],["validate(data",{"_index":1057,"title":{},"body":{"injectables/SchemaService.html":{}}}],["validates",{"_index":686,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{}}}],["validating",{"_index":695,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{}}}],["validation",{"_index":1065,"title":{},"body":{"injectables/SchemaService.html":{}}}],["validator",{"_index":626,"title":{},"body":{"components/JsonSchemaFormComponent.html":{},"injectables/SchemaService.html":{}}}],["validators",{"_index":689,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["value",{"_index":42,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"injectables/ElementDataStorageService.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":308,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["variable",{"_index":875,"title":{},"body":{"classes/LayoutNode.html":{}}}],["variables",{"_index":1461,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":173,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"additional-documentation/buttons.html":{},"additional-documentation/containers.html":{}}}],["via",{"_index":163,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/ElementDataStorageService.html":{},"contributing.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{}}}],["viewchild",{"_index":75,"title":{},"body":{"classes/AbstractWidget.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["viewchild('control",{"_index":101,"title":{},"body":{"classes/AbstractWidget.html":{}}}],["viewchild('templatecontainer",{"_index":1179,"title":{},"body":{"components/TemplateComponent.html":{}}}],["viewchild('widgetcontainer",{"_index":1127,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["viewcontainerref",{"_index":1126,"title":{},"body":{"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["void",{"_index":62,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"injectables/JsonSchemaFormService.html":{},"injectables/LayoutService.html":{},"injectables/SchemaService.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/functions.html":{},"additional-documentation/buttons.html":{}}}],["warranties",{"_index":1435,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1431,"title":{},"body":{"license.html":{}}}],["weakmap",{"_index":545,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["whether",{"_index":974,"title":{},"body":{"interfaces/LayoutOptions.html":{},"license.html":{}}}],["widget",{"_index":54,"title":{},"body":{"classes/AbstractWidget.html":{},"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"classes/LayoutNode.html":{},"interfaces/LayoutOptions.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{},"interfaces/WidgetDecorator.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/functions.html":{},"additional-documentation/introduction.html":{},"additional-documentation/buttons.html":{},"additional-documentation/templates.html":{}}}],["widget'},{'name",{"_index":319,"title":{},"body":{"components/ButtonComponent.html":{},"components/ContainerComponent.html":{},"components/HiddenComponent.html":{},"components/JsonSchemaFormComponent.html":{},"components/SelectWidgetComponent.html":{},"components/TemplateComponent.html":{}}}],["widget(args",{"_index":1346,"title":{},"body":{"miscellaneous/functions.html":{}}}],["widget.component",{"_index":1154,"title":{},"body":{"modules/SelectWidgetModule.html":{}}}],["widget.component.css",{"_index":1115,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["widget.component.html",{"_index":1116,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["widget.component.ts",{"_index":1112,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["widget.component.ts:25",{"_index":1121,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["widget.module",{"_index":460,"title":{},"body":{"modules/ContainerModule.html":{},"modules/FormModule.html":{},"modules/JsonSchemaFormModule.html":{}}}],["widget.module.ts",{"_index":1153,"title":{},"body":{"modules/SelectWidgetModule.html":{}}}],["widget/select",{"_index":459,"title":{},"body":{"modules/ContainerModule.html":{},"modules/FormModule.html":{},"modules/JsonSchemaFormModule.html":{},"components/SelectWidgetComponent.html":{},"modules/SelectWidgetModule.html":{}}}],["widget/widget",{"_index":1201,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["widget:not([hidden",{"_index":450,"title":{},"body":{"components/ContainerComponent.html":{}}}],["widgetcontainer",{"_index":1117,"title":{},"body":{"components/SelectWidgetComponent.html":{}}}],["widgetdecorator",{"_index":1189,"title":{"interfaces/WidgetDecorator.html":{}},"body":{"interfaces/WidgetDecorator.html":{}}}],["widgetlibraryservice",{"_index":1120,"title":{"injectables/WidgetLibraryService.html":{}},"body":{"components/SelectWidgetComponent.html":{},"injectables/WidgetLibraryService.html":{}}}],["widgets",{"_index":592,"title":{},"body":{"components/HiddenComponent.html":{},"injectables/JsonSchemaFormService.html":{},"interfaces/LayoutItem.html":{},"injectables/WidgetLibraryService.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/hidden-inputs.html":{}}}],["widgets.get(this.defaultwidget",{"_index":1214,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["widgets.get(type",{"_index":1213,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["widgets.has(type",{"_index":1207,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["widgets.set(type",{"_index":1211,"title":{},"body":{"injectables/WidgetLibraryService.html":{}}}],["width",{"_index":180,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/LayoutOptions.html":{},"additional-documentation/buttons.html":{}}}],["window.open('http://www.google.com",{"_index":241,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["wire",{"_index":1485,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["wish",{"_index":381,"title":{},"body":{"components/ContainerComponent.html":{},"contributing.html":{},"additional-documentation/containers.html":{}}}],["within",{"_index":1466,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["without",{"_index":1412,"title":{},"body":{"license.html":{}}}],["won't",{"_index":598,"title":{},"body":{"components/HiddenComponent.html":{},"additional-documentation/hidden-inputs.html":{}}}],["work",{"_index":873,"title":{},"body":{"classes/LayoutNode.html":{},"contributing.html":{}}}],["working",{"_index":1045,"title":{},"body":{"interfaces/SchemaAnalyzer.html":{}}}],["works",{"_index":537,"title":{},"body":{"injectables/ElementDataStorageService.html":{}}}],["wrap",{"_index":368,"title":{},"body":{"components/ContainerComponent.html":{},"contributing.html":{},"additional-documentation/containers.html":{}}}],["wrapper",{"_index":484,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{},"miscellaneous/typealiases.html":{}}}],["www",{"_index":654,"title":{},"body":{"components/JsonSchemaFormComponent.html":{}}}],["x",{"_index":807,"title":{},"body":{"injectables/JsonSchemaFormService.html":{}}}],["years",{"_index":1474,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["yes",{"_index":882,"title":{},"body":{"classes/LayoutNode.html":{}}}],["yourself",{"_index":297,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/buttons.html":{}}}],["z]+/.test(eventname",{"_index":499,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["z]+\\.data\\.[a",{"_index":497,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["za",{"_index":498,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["zero",{"_index":1477,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["zone",{"_index":507,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["zone.js",{"_index":1338,"title":{},"body":{"dependencies.html":{}}}],["zone.runguarded",{"_index":516,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["zone.runoutsideangular",{"_index":518,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataEventPluginService.html":{}}}],["zoom",{"_index":334,"title":{},"body":{"modules/ButtonModule.html":{},"modules/ContainerModule.html":{},"modules/FormModule.html":{},"modules/HiddenModule.html":{},"modules/JsonSchemaFormModule.html":{},"modules/SelectWidgetModule.html":{},"modules/TemplateModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractWidget.html":{"url":"classes/AbstractWidget.html","title":"class - AbstractWidget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractWidget\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/core/widget/widget.ts\n        \n\n            \n                Description\n            \n            \n                AbstractWidget \n\n            \n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            AfterViewInit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                controlDisabled\n                            \n                            \n                                controlName\n                            \n                            \n                                controlValue\n                            \n                            \n                                formControl\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataIndex\n                            \n                            \n                                layoutIndex\n                            \n                            \n                                layoutNode\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    layoutNode\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jsf: JsonSchemaFormService, elementDataStorage: ElementDataStorageService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/core/widget/widget.ts:38\n                            \n                        \n\n                \n                    \n                            constructor \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jsf\n                                                  \n                                                        \n                                                                        JsonSchemaFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementDataStorage\n                                                  \n                                                        \n                                                                        ElementDataStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/widget/widget.ts:12\n                            \n                        \n\n                \n                    \n                        Flag to disable the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/widget/widget.ts:14\n                            \n                        \n\n                \n                    \n                        Name for the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/widget/widget.ts:16\n                            \n                        \n\n                \n                    \n                        Value of the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AbstractControl\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/widget/widget.ts:18\n                            \n                        \n\n                \n                    \n                        Associated FormControl for widget \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/widget/widget.ts:20\n                            \n                        \n\n                \n                    \n                        Options for the control \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/core/widget/widget.ts:66\n                \n            \n\n\n            \n                \n                    Update the value of the control\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nChange event\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataIndex\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/widget/widget.ts:35\n                            \n                        \n                \n                    \n                        Index of the data in data array \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutIndex\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/widget/widget.ts:33\n                            \n                        \n                \n                    \n                        Index of the layout in the Layout array \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutNode\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/widget/widget.ts:24\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        layoutNode\n                    \n                \n\n                \n                    \n                        getlayoutNode()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/widget/widget.ts:29\n                                \n                            \n\n                \n                    \n                        setlayoutNode(value)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/widget/widget.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { AfterViewInit, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../form/services/json-schema-form.service';\n\nimport { LayoutNode } from '../models/layout-node';\nimport { ElementDataStorageService } from '../services/element-data-storage.service';\n\n/** AbstractWidget */\nexport abstract class AbstractWidget implements OnInit, AfterViewInit {\n    /** Flag to disable the control */\n    controlDisabled = false;\n    /** Name for the control */\n    controlName: string;\n    /** Value of the control */\n    controlValue: any;\n    /** Associated FormControl for widget */\n    formControl: AbstractControl;\n    /** Options for the control */\n    options: any;\n\n    /** Layout Node describing the control */\n    private _layoutNode: LayoutNode;\n    @Input() set layoutNode(value: LayoutNode) {\n        this._layoutNode = value;\n        this.options = this._layoutNode.options;\n        this.updateData();\n    }\n    get layoutNode(): LayoutNode {\n        return this._layoutNode;\n    }\n    /** Index of the layout in the Layout array */\n    @Input() layoutIndex: Array;\n    /** Index of the data in data array */\n    @Input() dataIndex: Array;\n\n    /** Reference to the underlying control. Look to replace using FormControl */\n    @ViewChild('control', {read: ElementRef}) private readonly control: ElementRef;\n\n    /** constructor */\n    constructor(protected jsf: JsonSchemaFormService, protected elementDataStorage: ElementDataStorageService) {}\n\n    /**\n     * Initialize the control and populate the options\n     */\n    ngOnInit() {\n        this.jsf.initializeControl(this);\n    }\n\n    /** Set the initial layout in the ElementDataStorage */\n    ngAfterViewInit() {\n        this.updateData();\n    }\n\n    /** Update the ElementDataStorage */\n    private updateData(): void {\n        if (this.control) {\n            this.elementDataStorage.set(this.control.nativeElement, 'layout', this.layoutNode.layoutDefinition);\n        }\n    }\n\n    /**\n     * Update the value of the control\n     * @param event - Change event\n     */\n    updateValue(event: Event) {\n        this.jsf.updateValue(this, (event.target).value);\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-json-schema-form/src/lib/button/button.component.ts\n\n\n    \n        Description\n    \n    \n        Displays a  control\n\n    \n\n    \n        Extends\n    \n    \n                AbstractWidget\n    \n\n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                jsf-button\n            \n\n            \n                styleUrls\n                ./button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                controlDisabled\n                            \n                            \n                                controlName\n                            \n                            \n                                controlValue\n                            \n                            \n                                formControl\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(jsf: JsonSchemaFormService, elementDataStorage: ElementDataStorageService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/button/button.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jsf\n                                                  \n                                                        \n                                                                        JsonSchemaFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementDataStorage\n                                                  \n                                                        \n                                                                        ElementDataStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(event: Event)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractWidget\n\n                \n            \n            \n                \n                        Defined in         AbstractWidget:66\n\n                \n            \n\n\n            \n                \n                    Update the value of the control\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nChange event\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:12\n\n                            \n                        \n\n                \n                    \n                        Flag to disable the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:14\n\n                            \n                        \n\n                \n                    \n                        Name for the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:16\n\n                            \n                        \n\n                \n                    \n                        Value of the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AbstractControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:18\n\n                            \n                        \n\n                \n                    \n                        Associated FormControl for widget \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:20\n\n                            \n                        \n\n                \n                    \n                        Options for the control \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        \n\n\nButtons\nThere are 4 types of buttons that jsf supports, button, image, reset and submit.  By default, these will all use the  tag for display.  However, with the exception of image, you can specify custom html via the template option.  This will result in the  being used for display and the template being inserted.  Content can contain simple bindings so that you can bind to various properties of the layout.  For example:\n\nbutton-layout.json\n\n[{\n    \"type\": \"submit\",\n    \"title\": \"Submit\",\n    \"template\": \"{{ options.title }}\",\n    \"icon\": {\n        \"src\": \"/assets/submit.png\",\n        \"width\": 30,\n        \"height\": 30,\n        \"alt\": \"Checkmark\"\n    }\n}]\n\nwill result in\n\nbutton.html\n\n\n    \n    Submit\n\n\nHere you can see we are specifying that the button should contain an image via the template options.  The template binds to the properties of the icon option which results in an image tag being rendered.  The icon option is also used when redering a simple button of type image.\n\nNote: due to current limitation of Angular AOT compilation, use of the angular compile to transpile `template` strings into HTML DOM is not possible.  Recent Angular changes have restricted the inclusion of the compiler in favor of reducing the file size and load time when in AOT mode.  Therefore, Handlebars is currently being imported to handle the compilation of `template` string to HTML DOM.\n\n\nWe can also respond to events such as a click.  To do this, we must first bind an event handler to the jsf component\n\nform.component.html\n\n\n\nThen we add a layout with a couple of buttons.  The first button will run an internal command where as the second will run a command specified by layout.onClick.\n\nbuttons-layout.json\n\n[{\n    \"type\": \"button\",\n    \"id\": \"button1\",\n    \"title\": \"Open dialog\"\n}, {\n    \"type\": \"button\",\n    \"id\": \"button2\",\n    \"title\": \"Open Google\",\n    \"onClick\": \"window.open('http://www.google.com/');\"\n}]\n\nLastly, we specify our onClick handler in our component.\n\nform.component.ts\n\nimport layout from './buttons-layout.json';\nimport { DataEvent } from 'ngx-json-schema-form';\n\n@Component({\n    templateUrl: './form.component.html',\n    ...\n})\nexport class LayoutComponent {\n    layout: Array = layout;\n\n    onClick(event: DataEvent): void {\n        if (event.data.id === 'button1') {\n            openDialog(event);\n        } else if (event.data.id === 'button2') {\n            // Run some external code\n            const fn = new Function('event', event.data.onClick);\n            fn(event);\n        }\n    }\n    ...\n}\n\nWhen a button is clicked, the event will bubble up to the jsf form component to which we bound our onClick handler.  Using event metadata (click.data.layout), we can specify that only events in which a target that has an associated data property of layout will trigger the event.  This association is handled internally when a widget is created and acts similarly to jQuery's $.data.  When the event handler is triggered, the layout is passed down with the event via event.data , allowing us to inspect which layout item triggered the event and act accordingly.  In the case of \"button1\", we run and internal method openDialog in order to open an angular dialog component.  With \"button2\" however, we run the external javascript passed in via the onClick property in the layout in order to open a popup dialog to Google.\nNote: running external javascript is usually not a good choice, therefore the jsf library does not internally run the onClick handler.  You will need to handle the conversion from text to javascript yourself and run the code.\n\n\n\n\n\n\n\n\n    \n\n    \n        import { Component } from '@angular/core';\n\nimport { Widget } from '../core/decorators/widget.decorator';\nimport { ElementDataStorageService } from '../core/services/element-data-storage.service';\nimport { AbstractWidget } from '../core/widget/widget';\n\nimport { JsonSchemaFormService } from '../form/services/json-schema-form.service';\n\n/**\n * Displays a  control\n * @todo implement this.jsf.formOptions.disableInvalidSubmit\n */\n@Widget({\n    types: ['button', 'image', 'reset', 'submit']\n})\n@Component({\n    selector: 'jsf-button',\n    styleUrls: ['./button.component.scss'],\n    templateUrl: './button.component.html'\n})\nexport class ButtonComponent extends AbstractWidget {\n    constructor(jsf: JsonSchemaFormService, elementDataStorage: ElementDataStorageService) {\n        super(jsf, elementDataStorage);\n    }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n\n    \n                \n                    ./button.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'jsf-button'},{'name': 'ContainerComponent', 'selector': 'jsf-container'},{'name': 'HiddenComponent', 'selector': 'jsf-hidden'},{'name': 'JsonSchemaFormComponent', 'selector': 'jsf-json-schema-form'},{'name': 'SelectWidgetComponent', 'selector': 'jsf-select-widget'},{'name': 'TemplateComponent', 'selector': 'jsf-template'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ButtonModule.html":{"url":"modules/ButtonModule.html","title":"module - ButtonModule","body":"\n                   \n\n\n\n\n    Modules\n    ButtonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ButtonModule\n\n\n\ncluster_ButtonModule_declarations\n\n\n\ncluster_ButtonModule_exports\n\n\n\n\nButtonComponent\n\nButtonComponent\n\n\n\nButtonModule\n\nButtonModule\n\nButtonModule -->\n\nButtonComponent->ButtonModule\n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nButtonModule->ButtonComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/button/button.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ButtonComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ButtonComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ButtonComponent } from './button.component';\n\n@NgModule({\n    declarations: [ ButtonComponent ],\n    entryComponents: [ ButtonComponent ],\n    exports: [ ButtonComponent ],\n    imports: [ CommonModule ]\n})\nexport class ButtonModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent.html":{"url":"components/ContainerComponent.html","title":"component - ContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-json-schema-form/src/lib/container/container.component.ts\n\n\n    \n        Description\n    \n    \n        Displays a div, fieldset, details or tabs/tab element and renders children inside it \n\n    \n\n    \n        Extends\n    \n    \n                AbstractWidget\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                jsf-container\n            \n\n            \n                styleUrls\n                ./container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                selectedLayout\n                            \n                            \n                                controlDisabled\n                            \n                            \n                                controlName\n                            \n                            \n                                controlValue\n                            \n                            \n                                formControl\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onTabClick\n                            \n                            \n                                trackByFn\n                            \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(jsf: JsonSchemaFormService, elementDataStorage: ElementDataStorageService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/container/container.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jsf\n                                                  \n                                                        \n                                                                        JsonSchemaFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementDataStorage\n                                                  \n                                                        \n                                                                        ElementDataStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onTabClick\n                        \n                        \n                    \n                \n            \n            \n                \nonTabClick(layout: LayoutNode)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/container/container.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    layout\n                                    \n                                                LayoutNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trackByFn\n                        \n                        \n                    \n                \n            \n            \n                \ntrackByFn(index)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/container/container.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(event: Event)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractWidget\n\n                \n            \n            \n                \n                        Defined in         AbstractWidget:66\n\n                \n            \n\n\n            \n                \n                    Update the value of the control\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nChange event\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedLayout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LayoutNode\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/container/container.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:12\n\n                            \n                        \n\n                \n                    \n                        Flag to disable the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:14\n\n                            \n                        \n\n                \n                    \n                        Name for the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:16\n\n                            \n                        \n\n                \n                    \n                        Value of the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AbstractControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:18\n\n                            \n                        \n\n                \n                    \n                        Associated FormControl for widget \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:20\n\n                            \n                        \n\n                \n                    \n                        Options for the control \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        \n\n\nContainers\nThere are 4 different types of containers; div, fieldset, details, and tabs.  Each allows you to wrap form elements inside a specific elements, allowing you to create various form structures.  When dealing with contianers, the layout requires you to specify an array of items which can be rendered inside the container.\nDiv\nThe div is the simplest contianer.  It allow you to create a div in which you can style as you wish.\n\nlayout.json\n\n[{\n    \"type\": \"div\",\n    \"items\": [{\n        \"type\": \"text\",\n        \"title\": \"Text 1\"\n    }, {\n        \"type\": \"text\",\n        \"title\": \"Text 2\"\n    }, {\n        \"type\": \"text\",\n        \"title\": \"Text 3\"\n    }]\n}]\n\n\n\nFieldset\nA fieldset container acts much the same as div, except it uses a  element instead of a .  This has the added benefit that you can easily disable all form elements inside the fieldset simply by marking the container as disabled.\n\nlayout.json\n\n[{\n    \"type\": \"fieldset\",\n    \"items\": [...],\n    \"disabled\": true\n}]\n\nDetails\nA details container uses a  element allowing you to expand/collapse a set of form elements.\n\nlayout.json\n\n[{\n    \"type\": \"details\",\n    \"items\": [...]\n}]\n\nTabs\nWith a tabs container, you supply a list of LayoutItems of type tab.  Each tab should have a title which is used to display the tab text.  By default, the first tab will be selected.  You can optional specify which tab to select by adding selectedIndex to the tabs options.\n\nlayout.json\n\n[{\n    \"type\": \"tabs\",\n    \"selectedIndex\": 1,\n    \"items\": [{\n        \"type\": \"tab\",\n        \"title\": \"Tab 1\",\n        \"items\": [...]\n    }, {\n        \"type\": \"tab\",\n        \"title\": \"Tab 2\",\n        \"items\": [...]\n    }, {\n        \"type\": \"tab\",\n        \"title\": \"Tab 3\",\n        \"items\": [...]\n    }]\n}]\n\nThe above layout will render a container with 3 tabs; 'Tab 1', 'Tab 2', and 'Tab 3'.  'Tab 2' will be selected by default.\n\n\n\n\n\n\n\n\n    \n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Widget } from '../core/decorators/widget.decorator';\nimport { LayoutNode } from '../core/models/layout-node';\nimport { ElementDataStorageService } from '../core/services/element-data-storage.service';\nimport { AbstractWidget } from '../core/widget/widget';\n\nimport { JsonSchemaFormService } from '../form/services/json-schema-form.service';\n\n/** Displays a div, fieldset, details or tabs/tab element and renders children inside it */\n@Widget({\n    types: ['div', 'fieldset', 'details', 'tabs', 'tab']\n})\n@Component({\n    selector: 'jsf-container',\n    styleUrls: ['./container.component.scss'],\n    templateUrl: './container.component.html'\n})\nexport class ContainerComponent extends AbstractWidget implements OnInit {\n    public selectedLayout: LayoutNode;\n\n    constructor(jsf: JsonSchemaFormService, elementDataStorage: ElementDataStorageService) {\n        super(jsf, elementDataStorage);\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n        this.selectedLayout = this.layoutNode.type === 'tabs'\n            ? this.layoutNode.items[this.getSelectedIndex()]\n            : undefined;\n    }\n\n    trackByFn(index) {\n        return index;\n    }\n\n    onTabClick(layout: LayoutNode): void {\n        this.selectedLayout = layout;\n    }\n\n    private getSelectedIndex(): number {\n        const index = Number.isInteger(this.layoutNode.options.selectedIndex)\n            ? this.layoutNode.options.selectedIndex\n            : 0;\n\n        return Math.min(Math.max(index, 0), this.layoutNode.items.length - 1);\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            {{ options.title }}\n            \n        \n    \n    \n        \n            {{ options.title }}\n            \n        \n    \n    \n        \n            {{ options.title }}\n            \n        \n    \n    \n        \n            {{ _layoutNode.options.title }}\n            \n        \n        \n    \n    \n        \n    \n\n\n    \n\n\n    \n\n    \n                \n                    ./container.component.scss\n                \n                :host {\n    > nav {\n        overflow: hidden;\n        border: 1px solid #ccc;\n        background-color: #f1f1f1;\n\n        button {\n            background-color: inherit;\n            float: left;\n            border: none;\n            outline: none;\n            cursor: pointer;\n            padding: 14px 16px;\n            transition: 0.3s;\n\n            &:hover {\n                background-color: #ddd;\n            }\n\n            &.active {\n                background-color: #ccc;\n            }\n        }\n\n        ~ jsf-select-widget {\n            padding: 6px 12px;\n            border: 1px solid #ccc;\n            border-top: none;\n        }\n        ~ jsf-select-widget:not([hidden]) {\n            display: block;\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{ options.title }}                                                {{ options.title }}                                                {{ options.title }}                                                {{ _layoutNode.options.title }}                                                    '\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'jsf-button'},{'name': 'ContainerComponent', 'selector': 'jsf-container'},{'name': 'HiddenComponent', 'selector': 'jsf-hidden'},{'name': 'JsonSchemaFormComponent', 'selector': 'jsf-json-schema-form'},{'name': 'SelectWidgetComponent', 'selector': 'jsf-select-widget'},{'name': 'TemplateComponent', 'selector': 'jsf-template'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContainerModule.html":{"url":"modules/ContainerModule.html","title":"module - ContainerModule","body":"\n                   \n\n\n\n\n    Modules\n    ContainerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContainerModule\n\n\n\ncluster_ContainerModule_declarations\n\n\n\ncluster_ContainerModule_imports\n\n\n\ncluster_ContainerModule_exports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nContainerModule\n\nContainerModule\n\nContainerModule -->\n\nContainerComponent->ContainerModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nContainerModule->ContainerComponent \n\n\n\n\n\nSelectWidgetModule\n\nSelectWidgetModule\n\nContainerModule -->\n\nSelectWidgetModule->ContainerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/container/container.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SelectWidgetModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { SelectWidgetModule } from '../select-widget/select-widget.module';\n\nimport { ContainerComponent } from './container.component';\n\n@NgModule({\n    declarations: [ ContainerComponent ],\n    entryComponents: [ ContainerComponent ],\n    exports: [ ContainerComponent ],\n    imports: [ CommonModule, SelectWidgetModule ]\n})\nexport class ContainerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/core/core.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/core/core.module.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { EVENT_MANAGER_PLUGINS } from '@angular/platform-browser';\n\nimport { DataEventPluginService } from './services/data-event-plugin.service';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ]\n})\nexport class CoreModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: CoreModule,\n            providers: [{\n                multi: true,\n                provide: EVENT_MANAGER_PLUGINS,\n                useClass: DataEventPluginService\n            }]\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Data.html":{"url":"interfaces/Data.html","title":"interface - Data","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Data\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/core/services/data-event-plugin.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data associated with an HTML Element \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { EventManager } from '@angular/platform-browser';\n\nimport { ElementDataStorageService } from './element-data-storage.service';\n\nexport interface Data {\n    /** Data associated with an HTML Element */\n    data: any;\n}\n/** Event wrapper for piggybacking data on an event */\nexport type DataEvent = Data & T;\n\n/**\n * Plugin used to return data, associated with an element, in the event.  Data must first be\n * \"associated\" with an element by means of the ElementDataStorageService.  If no data is\n * present, then the event handler will not be fired.\n */\n@Injectable()\nexport class DataEventPluginService {\n    /** Event manager used to get the ngZone */\n    manager: EventManager;\n\n    constructor(private readonly elementDataStorage: ElementDataStorageService) {}\n\n    /** Determine if the plugin should be applied to an event */\n    supports(eventName: string): boolean {\n        return  /[a-z]+\\.data\\.[a-zA-Z]+/.test(eventName);\n    }\n\n    /** Adds a supported event listener to a dom node */\n    addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n        const zone: NgZone = this.manager.getZone();\n        const [type, , dataName] = eventName.split('.');\n        const eventHandler = (event: DataEvent): void => {\n            let target: HTMLElement = event.target as HTMLElement;\n            while (target && !this.elementDataStorage.has(target, dataName)) {\n                target = target.parentElement;\n            }\n\n            if (target) {\n                const data = this.elementDataStorage.get(target, dataName);\n                event.data = data;\n\n                zone.runGuarded(() => {\n                    handler(event);\n                });\n            }\n        };\n\n        zone.runOutsideAngular(() => {\n            element.addEventListener(type, eventHandler, false);\n        });\n\n        return () => {\n            element.removeEventListener(type, eventHandler, false);\n        };\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataEventPluginService.html":{"url":"injectables/DataEventPluginService.html","title":"injectable - DataEventPluginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataEventPluginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/core/services/data-event-plugin.service.ts\n        \n\n            \n                Description\n            \n            \n                Plugin used to return data, associated with an element, in the event.  Data must first be\n\"associated\" with an element by means of the ElementDataStorageService.  If no data is\npresent, then the event handler will not be fired.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                manager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEventListener\n                            \n                            \n                                supports\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementDataStorage: ElementDataStorageService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/core/services/data-event-plugin.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementDataStorage\n                                                  \n                                                        \n                                                                        ElementDataStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addEventListener\n                        \n                        \n                    \n                \n            \n            \n                \naddEventListener(element: HTMLElement, eventName: string, handler: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/core/services/data-event-plugin.service.ts:31\n                \n            \n\n\n            \n                \n                    Adds a supported event listener to a dom node \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handler\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            supports\n                        \n                        \n                    \n                \n            \n            \n                \nsupports(eventName: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/core/services/data-event-plugin.service.ts:26\n                \n            \n\n\n            \n                \n                    Determine if the plugin should be applied to an event \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventManager\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/services/data-event-plugin.service.ts:21\n                            \n                        \n\n                \n                    \n                        Event manager used to get the ngZone \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { EventManager } from '@angular/platform-browser';\n\nimport { ElementDataStorageService } from './element-data-storage.service';\n\nexport interface Data {\n    /** Data associated with an HTML Element */\n    data: any;\n}\n/** Event wrapper for piggybacking data on an event */\nexport type DataEvent = Data & T;\n\n/**\n * Plugin used to return data, associated with an element, in the event.  Data must first be\n * \"associated\" with an element by means of the ElementDataStorageService.  If no data is\n * present, then the event handler will not be fired.\n */\n@Injectable()\nexport class DataEventPluginService {\n    /** Event manager used to get the ngZone */\n    manager: EventManager;\n\n    constructor(private readonly elementDataStorage: ElementDataStorageService) {}\n\n    /** Determine if the plugin should be applied to an event */\n    supports(eventName: string): boolean {\n        return  /[a-z]+\\.data\\.[a-zA-Z]+/.test(eventName);\n    }\n\n    /** Adds a supported event listener to a dom node */\n    addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n        const zone: NgZone = this.manager.getZone();\n        const [type, , dataName] = eventName.split('.');\n        const eventHandler = (event: DataEvent): void => {\n            let target: HTMLElement = event.target as HTMLElement;\n            while (target && !this.elementDataStorage.has(target, dataName)) {\n                target = target.parentElement;\n            }\n\n            if (target) {\n                const data = this.elementDataStorage.get(target, dataName);\n                event.data = data;\n\n                zone.runGuarded(() => {\n                    handler(event);\n                });\n            }\n        };\n\n        zone.runOutsideAngular(() => {\n            element.addEventListener(type, eventHandler, false);\n        });\n\n        return () => {\n            element.removeEventListener(type, eventHandler, false);\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ElementDataStorageService.html":{"url":"injectables/ElementDataStorageService.html","title":"injectable - ElementDataStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ElementDataStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/core/services/element-data-storage.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to map data to an DOM element similar to jQuery $.data\nWhile HTML provides its data-* attributes to store data on the node\nitself, this only works for primitive data.  Objects and arrays would need\nto be converted to json for then to use data-* and thus would not\nbe able to contain non-json types like Function.  This service allows\nfor referencing data to a HTML element via a WeakMap so that when the element\nis removed from the DOM, the garbage collector can automatically remove the\nreference in the Service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                has\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(element: HTMLElement, key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/core/services/element-data-storage.service.ts:41\n                \n            \n\n\n            \n                \n                    Remove a key/value pairing from map referenced by element \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(element: HTMLElement, key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/core/services/element-data-storage.service.ts:29\n                \n            \n\n\n            \n                \n                    Return a key's value for an element \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            has\n                        \n                        \n                    \n                \n            \n            \n                \nhas(element: HTMLElement, key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/core/services/element-data-storage.service.ts:36\n                \n            \n\n\n            \n                \n                    Determine if an element has a key/value pairing referenced \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset(element: HTMLElement, key: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/core/services/element-data-storage.service.ts:21\n                \n            \n\n\n            \n                \n                    Add key/value pairing to map referenced by element \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ElementDataStorageService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Service to map data to an DOM element similar to jQuery $.data\n * While HTML provides its data-* attributes to store data on the node\n * itself, this only works for primitive data.  Objects and arrays would need\n * to be converted to json for then to use data-* and thus would not\n * be able to contain non-json types like Function.  This service allows\n * for referencing data to a HTML element via a WeakMap so that when the element\n * is removed from the DOM, the garbage collector can automatically remove the\n * reference in the Service.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ElementDataStorageService {\n    /** Map to reference data to an element */\n    private readonly storage: WeakMap> = new WeakMap>();\n\n    /** Add key/value pairing to map referenced by element */\n    set(element: HTMLElement, key: string, value: any): ElementDataStorageService {\n        const mappedData = this.storage.get(element) || this.storage.set(element, new Map()).get(element);\n        mappedData.set(key, value);\n\n        return this;\n    }\n\n    /** Return a key's value for an element */\n    get(element: HTMLElement, key: string): any {\n        return this.storage.has(element)\n            ? this.storage.get(element).get(key)\n            : undefined;\n    }\n\n    /** Determine if an element has a key/value pairing referenced */\n    has(element: HTMLElement, key: string): boolean {\n        return this.storage.has(element) && this.storage.get(element).has(key);\n    }\n\n    /** Remove a key/value pairing from map referenced by element */\n    delete(element: HTMLElement, key: string): boolean {\n        let deleted = this.storage.has(element);\n        if (deleted) {\n            const mappedData = this.storage.get(element);\n            deleted = mappedData.delete(key);\n            if (mappedData.size === 0) {\n                this.storage.delete(element);\n            }\n        }\n\n        return deleted;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormModule.html":{"url":"modules/FormModule.html","title":"module - FormModule","body":"\n                   \n\n\n\n\n    Modules\n    FormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_imports\n\n\n\ncluster_FormModule_exports\n\n\n\n\nJsonSchemaFormComponent\n\nJsonSchemaFormComponent\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nJsonSchemaFormComponent->FormModule\n\n\n\n\n\nJsonSchemaFormComponent \n\nJsonSchemaFormComponent \n\nJsonSchemaFormComponent  -->\n\nFormModule->JsonSchemaFormComponent \n\n\n\n\n\nSelectWidgetModule\n\nSelectWidgetModule\n\nFormModule -->\n\nSelectWidgetModule->FormModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/form/form.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            JsonSchemaFormComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SelectWidgetModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JsonSchemaFormComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { SelectWidgetModule } from '../select-widget/select-widget.module';\nimport { JsonSchemaFormComponent } from './json-schema-form.component';\n\n@NgModule({\n    declarations: [ JsonSchemaFormComponent ],\n    exports: [ JsonSchemaFormComponent ],\n    imports: [ CommonModule, SelectWidgetModule ]\n})\nexport class FormModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HiddenComponent.html":{"url":"components/HiddenComponent.html","title":"component - HiddenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HiddenComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-json-schema-form/src/lib/hidden/hidden.component.ts\n\n\n    \n        Description\n    \n    \n        Displays an input[type='hidden']\n\n    \n\n    \n        Extends\n    \n    \n                AbstractWidget\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                jsf-hidden\n            \n\n            \n                styleUrls\n                ./hidden.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./hidden.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                controlDisabled\n                            \n                            \n                                controlName\n                            \n                            \n                                controlValue\n                            \n                            \n                                formControl\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(jsf: JsonSchemaFormService, elementDataStorage: ElementDataStorageService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/hidden/hidden.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jsf\n                                                  \n                                                        \n                                                                        JsonSchemaFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementDataStorage\n                                                  \n                                                        \n                                                                        ElementDataStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(event: Event)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractWidget\n\n                \n            \n            \n                \n                        Defined in         AbstractWidget:66\n\n                \n            \n\n\n            \n                \n                    Update the value of the control\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nChange event\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:12\n\n                            \n                        \n\n                \n                    \n                        Flag to disable the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:14\n\n                            \n                        \n\n                \n                    \n                        Name for the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:16\n\n                            \n                        \n\n                \n                    \n                        Value of the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AbstractControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:18\n\n                            \n                        \n\n                \n                    \n                        Associated FormControl for widget \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:20\n\n                            \n                        \n\n                \n                    \n                        Options for the control \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        \n\n\nHidden\nHidden widgets are what you would expect, they render an .  This is the default for any layout item that can't be properly matched.  For the most part, hidden widgets won't be needed as you simply don't need to render them, their data never changes.  However, in the event that you need to do an actual form submittal, hidden inputs may be necessary and are therfore included.\n\n\n\n\n\n\n\n\n    \n\n    \n        import { Component } from '@angular/core';\n\nimport { Widget } from '../core/decorators/widget.decorator';\nimport { ElementDataStorageService } from '../core/services/element-data-storage.service';\nimport { AbstractWidget } from '../core/widget/widget';\n\nimport { JsonSchemaFormService } from '../form/services/json-schema-form.service';\n\n/**\n * Displays an input[type='hidden']\n */\n@Widget({\n    types: ['hidden']\n})\n@Component({\n    selector: 'jsf-hidden',\n    styleUrls: ['./hidden.component.scss'],\n    templateUrl: './hidden.component.html'\n})\nexport class HiddenComponent extends AbstractWidget {\n    constructor(jsf: JsonSchemaFormService, elementDataStorage: ElementDataStorageService) {\n        super(jsf, elementDataStorage);\n    }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./hidden.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'jsf-button'},{'name': 'ContainerComponent', 'selector': 'jsf-container'},{'name': 'HiddenComponent', 'selector': 'jsf-hidden'},{'name': 'JsonSchemaFormComponent', 'selector': 'jsf-json-schema-form'},{'name': 'SelectWidgetComponent', 'selector': 'jsf-select-widget'},{'name': 'TemplateComponent', 'selector': 'jsf-template'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HiddenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HiddenModule.html":{"url":"modules/HiddenModule.html","title":"module - HiddenModule","body":"\n                   \n\n\n\n\n    Modules\n    HiddenModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HiddenModule\n\n\n\ncluster_HiddenModule_declarations\n\n\n\ncluster_HiddenModule_exports\n\n\n\n\nHiddenComponent\n\nHiddenComponent\n\n\n\nHiddenModule\n\nHiddenModule\n\nHiddenModule -->\n\nHiddenComponent->HiddenModule\n\n\n\n\n\nHiddenComponent \n\nHiddenComponent \n\nHiddenComponent  -->\n\nHiddenModule->HiddenComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/hidden/hidden.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HiddenComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            HiddenComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HiddenComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { HiddenComponent } from './hidden.component';\n\n@NgModule({\n    declarations: [ HiddenComponent ],\n    entryComponents: [ HiddenComponent ],\n    exports: [ HiddenComponent ],\n    imports: [ CommonModule ]\n})\nexport class HiddenModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/JsonSchemaFormComponent.html":{"url":"components/JsonSchemaFormComponent.html","title":"component - JsonSchemaFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  JsonSchemaFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-json-schema-form/src/lib/form/json-schema-form.component.ts\n\n\n    \n        Description\n    \n    \n        NGX JSON Schema Form\nRoot module of the NGX JSON Schema Form client-side library,\nan Angular library which generates an HTML form from a JSON schema\nstructured data model and/or a JSON Schema Form layout description.\nThis library depends on:\n\nAngular (obviously)\nlodash, JavaScript utility library\najv, Another JSON Schema validator\njson-schema-traverse, JSON Schema Traverse\n\nIn addition, the Example Playground also depends on:\n\nbrace, Browserified Ace editor\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnChanges\n                    OnDestroy\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                JsonSchemaFormService\n                                LayoutService\n                                SchemaService\n                \n            \n\n\n            \n                selector\n                jsf-json-schema-form\n            \n\n\n\n\n            \n                templateUrl\n                ./json-schema-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submitForm\n                            \n                            \n                                trackByFn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                autocomplete\n                            \n                            \n                                enctype\n                            \n                            \n                                layout\n                            \n                            \n                                method\n                            \n                            \n                                schema\n                            \n                            \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(schemaService: SchemaService, layoutService: LayoutService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/form/json-schema-form.component.ts:95\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        schemaService\n                                                  \n                                                        \n                                                                        SchemaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        action\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/form/json-schema-form.component.ts:71\n                            \n                        \n                \n                    \n                        Sets the action attribute of the internal form\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\" | null\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/form/json-schema-form.component.ts:76\n                            \n                        \n                \n                    \n                        Sets the autocomplete attribute of the internal form\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enctype\n                    \n                \n                \n                    \n                        Type :     \"application/x-www-form-urlencoded\" | \"multipart/form-data\" | \"text/plain\" | null\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/form/json-schema-form.component.ts:81\n                            \n                        \n                \n                    \n                        Sets the enctype attribute of the internal form\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layout\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/form/json-schema-form.component.ts:66\n                            \n                        \n                \n                    \n                        Layout used to define how the form is rendered \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        method\n                    \n                \n                \n                    \n                        Type :     \"get\" | \"post\" | \"dialog\" | null\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/form/json-schema-form.component.ts:86\n                            \n                        \n                \n                    \n                        Sets the method attribute of the internal form\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schema\n                    \n                \n                \n                    \n                        Type :     JSONSchema7 | JSONSchema6 | JSONSchema4\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/form/json-schema-form.component.ts:64\n                            \n                        \n                \n                    \n                        JSON Schema used to validate form data \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        target\n                    \n                \n                \n                    \n                        Type :     \"_self\" | \"_blank\" | \"_parent\" | \"_top\" | string | null\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/form/json-schema-form.component.ts:91\n                            \n                        \n                \n                    \n                        Sets the target attribute of the internal form\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitForm\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/form/json-schema-form.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trackByFn\n                        \n                        \n                    \n                \n            \n            \n                \ntrackByFn(index)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/form/json-schema-form.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n    ChangeDetectionStrategy, Component, Input,\n    OnChanges, OnDestroy, OnInit, SimpleChanges\n} from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\nimport { isPlainObject } from 'lodash';\n\nimport { JSONSchema4, JSONSchema6, JSONSchema7 } from 'json-schema';\n\nimport { LayoutItem } from '../core/interfaces/layout-item.data';\n\nimport { JsonSchemaFormService } from './services/json-schema-form.service';\nimport { LayoutService } from './services/layout.service';\nimport { SchemaService } from './services/schema.service';\n\n// * This library also validates input data by the user, using both validators on\n// * individual controls to provide real-time feedback while the user is filling\n// * out the form, and then validating the entire input against the schema when\n// * the form is submitted to make sure the returned JSON data object is valid.\n// *\n// * This library is similar to, and mostly API compatible with:\n// *\n// * - JSON Schema Form's [Angular Schema Form]{@link http://schemaform.io} library for AngularJs\n// *   [(examples)]{@link http://schemaform.io/examples/bootstrap-example.html}\n// *\n// * - Mozilla's [react-jsonschema-form]{@link https://github.com/mozilla-services/react-jsonschema-form} library for React\n// *   [(examples)]{@link https://mozilla-services.github.io/react-jsonschema-form}\n// *\n// * - Joshfire's [JSON Form]{@link https://github.com/joshfire/jsonform} library for jQuery\n// *   [(examples)]{@link http://ulion.github.io/jsonform/playground}\n/**\n * NGX JSON Schema Form\n *\n * Root module of the NGX JSON Schema Form client-side library,\n * an Angular library which generates an HTML form from a JSON schema\n * structured data model and/or a JSON Schema Form layout description.\n *\n * This library depends on:\n *\n * - [Angular]{@link https://angular.io} (obviously)\n * - [lodash]{@link https://github.com/lodash/lodash}, JavaScript utility library\n * - [ajv]{@link https://github.com/epoberezkin/ajv}, Another JSON Schema validator\n * - [json-schema-traverse]{@link https://github.com/epoberezkin/json-schema-traverse}, JSON Schema Traverse\n *\n * In addition, the Example Playground also depends on:\n *\n * - [brace]{@link http://thlorenz.github.io/brace}, Browserified Ace editor\n */\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        JsonSchemaFormService,\n        LayoutService,\n        SchemaService\n    ],\n    selector: 'jsf-json-schema-form',\n    styles: [],\n    templateUrl: './json-schema-form.component.html'\n})\nexport class JsonSchemaFormComponent implements OnChanges, OnDestroy, OnInit {\n    /** JSON Schema used to validate form data */\n    @Input() schema: JSONSchema7 | JSONSchema6 | JSONSchema4;\n    /** Layout used to define how the form is rendered */\n    @Input() layout: Array;\n    /**\n     * Sets the action attribute of the internal form\n     * See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes}\n     */\n    @Input() action: string | null;\n    /**\n     * Sets the autocomplete attribute of the internal form\n     * See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes}\n     */\n    @Input() autocomplete: 'on' | 'off' | null;\n    /**\n     * Sets the enctype attribute of the internal form\n     * See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes}\n     */\n    @Input() enctype: 'application/x-www-form-urlencoded' | 'multipart/form-data' | 'text/plain' | null;\n    /**\n     * Sets the method attribute of the internal form\n     * See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes}\n     */\n    @Input() method: 'get' | 'post' | 'dialog' | null;\n    /**\n     * Sets the target attribute of the internal form\n     * See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#Attributes}\n     */\n    @Input() target: '_self' | '_blank' | '_parent' | '_top' | string | null;\n\n    private formInitialized = false;\n    /** Observable to used to unsubscribe listners upon ngDestroy */\n    private readonly destroyed$: Subject = new Subject();\n\n    constructor(\n        // private readonly jsf: JsonSchemaFormService,\n        private readonly schemaService: SchemaService,\n        readonly layoutService: LayoutService\n    ) {}\n\n    ngOnInit() {\n        this.updateForm();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.hasOwnProperty('schema') || changes.hasOwnProperty('layout')) {\n            this.formInitialized = false;\n        }\n        this.updateForm();\n    }\n\n    ngOnDestroy() {\n        this.destroyed$.next();\n        this.destroyed$.complete();\n    }\n\n    /**\n     * @todo Implement submitForm method\n     * Submits the form\n     */\n    submitForm(): void {\n        console.warn(this);\n    }\n\n    trackByFn(index) {\n        return index;\n    }\n\n    private updateForm(): void {\n        if (!this.formInitialized) {\n            this.initializeForm();\n        }\n    }\n\n    private initializeForm(): void {\n        this.initializeSchema();\n        this.initializeLayout();\n        this.formInitialized = true;\n    }\n\n    private initializeLayout(): void {\n        this.layoutService.setLayout(this.layout || ['*']);\n    }\n\n    private initializeSchema(): void {\n        if (isPlainObject(this.schema)) {\n            this.schemaService.schema = this.schemaService.migrate(this.schema);\n        }\n    }\n}\n\n    \n\n    \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'jsf-button'},{'name': 'ContainerComponent', 'selector': 'jsf-container'},{'name': 'HiddenComponent', 'selector': 'jsf-hidden'},{'name': 'JsonSchemaFormComponent', 'selector': 'jsf-json-schema-form'},{'name': 'SelectWidgetComponent', 'selector': 'jsf-select-widget'},{'name': 'TemplateComponent', 'selector': 'jsf-template'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'JsonSchemaFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JsonSchemaFormModule.html":{"url":"modules/JsonSchemaFormModule.html","title":"module - JsonSchemaFormModule","body":"\n                   \n\n\n\n\n    Modules\n    JsonSchemaFormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JsonSchemaFormModule\n\n\n\ncluster_JsonSchemaFormModule_imports\n\n\n\ncluster_JsonSchemaFormModule_exports\n\n\n\n\nButtonModule\n\nButtonModule\n\n\n\nJsonSchemaFormModule\n\nJsonSchemaFormModule\n\nJsonSchemaFormModule -->\n\nButtonModule->JsonSchemaFormModule\n\n\n\n\n\nContainerModule\n\nContainerModule\n\nJsonSchemaFormModule -->\n\nContainerModule->JsonSchemaFormModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nJsonSchemaFormModule -->\n\nCoreModule->JsonSchemaFormModule\n\n\n\n\n\nFormModule\n\nFormModule\n\nJsonSchemaFormModule -->\n\nFormModule->JsonSchemaFormModule\n\n\n\n\n\nHiddenModule\n\nHiddenModule\n\nJsonSchemaFormModule -->\n\nHiddenModule->JsonSchemaFormModule\n\n\n\n\n\nSelectWidgetModule\n\nSelectWidgetModule\n\nJsonSchemaFormModule -->\n\nSelectWidgetModule->JsonSchemaFormModule\n\n\n\n\n\nTemplateModule\n\nTemplateModule\n\nJsonSchemaFormModule -->\n\nTemplateModule->JsonSchemaFormModule\n\n\n\n\n\nButtonModule \n\nButtonModule \n\nButtonModule  -->\n\nJsonSchemaFormModule->ButtonModule \n\n\n\n\n\nContainerModule \n\nContainerModule \n\nContainerModule  -->\n\nJsonSchemaFormModule->ContainerModule \n\n\n\n\n\nCoreModule \n\nCoreModule \n\nCoreModule  -->\n\nJsonSchemaFormModule->CoreModule \n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nJsonSchemaFormModule->FormModule \n\n\n\n\n\nHiddenModule \n\nHiddenModule \n\nHiddenModule  -->\n\nJsonSchemaFormModule->HiddenModule \n\n\n\n\n\nSelectWidgetModule \n\nSelectWidgetModule \n\nSelectWidgetModule  -->\n\nJsonSchemaFormModule->SelectWidgetModule \n\n\n\n\n\nTemplateModule \n\nTemplateModule \n\nTemplateModule  -->\n\nJsonSchemaFormModule->TemplateModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/json-schema-form.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ButtonModule\n                        \n                        \n                            ContainerModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            FormModule\n                        \n                        \n                            HiddenModule\n                        \n                        \n                            SelectWidgetModule\n                        \n                        \n                            TemplateModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ButtonModule\n                        \n                        \n                            ContainerModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            FormModule\n                        \n                        \n                            HiddenModule\n                        \n                        \n                            SelectWidgetModule\n                        \n                        \n                            TemplateModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/json-schema-form.module.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { ButtonModule } from './button/button.module';\nimport { ContainerModule } from './container/container.module';\nimport { CoreModule } from './core/core.module';\nimport { FormModule } from './form/form.module';\nimport { HiddenModule } from './hidden/hidden.module';\nimport { SelectWidgetModule } from './select-widget/select-widget.module';\nimport { TemplateModule } from './template/template.module';\n\nconst MODULES = [\n    ButtonModule, ContainerModule, CoreModule, FormModule,\n    HiddenModule, SelectWidgetModule, TemplateModule\n];\n\n@NgModule({\n    exports: [ ...MODULES ],\n    imports: [\n        CommonModule,\n        ...MODULES\n    ]\n})\nexport class JsonSchemaFormModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: JsonSchemaFormModule,\n            providers: [\n                ...CoreModule.forRoot().providers\n            ]\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JsonSchemaFormService.html":{"url":"injectables/JsonSchemaFormService.html","title":"injectable - JsonSchemaFormService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JsonSchemaFormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/form/services/json-schema-form.service.ts\n        \n\n            \n                Description\n            \n            \n                Helper service \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                compileTemplate\n                            \n                            \n                                initializeControl\n                            \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            compileTemplate\n                        \n                        \n                    \n                \n            \n            \n                \ncompileTemplate(template: string, context: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/form/services/json-schema-form.service.ts:65\n                \n            \n\n\n            \n                \n                    Compiles an HTML tempalte and data into a document fragment\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    template\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nHTML template to render\n\n\n                                    \n                                \n                                \n                                    context\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                    \n                                        \noptions to use when rendering the template\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DocumentFragment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeControl\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeControl(control: AbstractWidget, bind)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/form/services/json-schema-form.service.ts:47\n                \n            \n\n\n            \n                \n                    Creates a component with passed in template and associated context \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractWidget\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    bind\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(ctx: any, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/form/services/json-schema-form.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n// import {\n//     Compiler, Component, ComponentRef, Injectable, Injector,\n//     ModuleWithComponentFactories, NgModule, NgModuleRef\n// } from '@angular/core';\n\nimport Handlebars from 'handlebars/dist/cjs/handlebars';\n\nimport { AbstractWidget } from '../../core/widget/widget';\n\n/* tslint:disable: max-classes-per-file */\n/** Helper service */\n@Injectable()\nexport class JsonSchemaFormService {\n    private x = false;\n\n    /** Creates a component with passed in template and associated context */\n    // private static createComponent(template: string, context: {[key: string]: any}): any {\n    //     return Component({\n    //         selector: `runtime-component-sample`,\n    //         template\n    //     })(class RuntimeComponent {\n    //         options: any = context;\n    //     });\n    // }\n\n    /** Create a module for use with the RuntimeComponent */\n    // private static createModule(component: any, compiler: Compiler): ModuleWithComponentFactories {\n    //     @NgModule({ imports: [CommonModule], declarations: [component] })\n    //     class RuntimeComponentModule { }\n\n    //     return compiler.compileModuleAndAllComponentsSync(RuntimeComponentModule);\n    // }\n\n    /** Get a components innerHTML as a document Fragment */\n    // private static getDocumentFragment(componentRef: ComponentRef): DocumentFragment {\n    //     const template = document.createElement('template');\n    //     template.innerHTML = (componentRef.location.nativeElement).innerHTML;\n\n    //     return template.content;\n    // }\n\n    // constructor(private readonly compiler: Compiler,private readonly injector: Injector, private readonly moduleRef: NgModuleRef) {}\n\n    /** Sets a widgets properties upon widget creation */\n    initializeControl(control: AbstractWidget, bind = true): void {\n        // Do we even need to do this?  seems silly\n        control.controlName = control.layoutNode.name;\n    }\n\n    /**\n     * @todo Implement updateValue or remove if unnecessary\n     * Manually update value\n     */\n    updateValue(ctx: any, value: any): void {\n        this.x = !this.x;\n    }\n\n    /**\n     * Compiles an HTML tempalte and data into a document fragment\n     * @param template - HTML template to render\n     * @param context - options to use when rendering the template\n     */\n    compileTemplate(template: string, context: {[key: string]: any} = {}): DocumentFragment {\n        const templateTag = document.createElement('template');\n        templateTag.innerHTML = Handlebars.compile(template)({options: context});\n\n        return templateTag.content;\n    }\n\n    // /**\n    //  * Compiles an HTML tempalte and data into a document fragment\n    //  * @param template - HTML template to render\n    //  * @param context - options to use when rendering the template\n    //  */\n    // compileTemplate(template: string, context: {[key: string]: any} = {}): DocumentFragment {\n    //     const component: any = JsonSchemaFormService.createComponent(template, context);\n    //     const module = JsonSchemaFormService.createModule(component, this.compiler);\n    //     const factory = module.componentFactories.find((f) => f.componentType === component);\n    //     const componentRef: ComponentRef = factory.create(this.injector, undefined, undefined, this.moduleRef);\n\n    //     componentRef.hostView.detectChanges();\n    //     const fragment = JsonSchemaFormService.getDocumentFragment(componentRef);\n    //     componentRef.destroy();\n\n    //     return fragment;\n    // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LayoutItem.html":{"url":"interfaces/LayoutItem.html","title":"interface - LayoutItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LayoutItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/core/interfaces/layout-item.data.ts\n        \n\n            \n                Description\n            \n            \n                Properties used to specify how to layout a piece of data in the form \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        items\n                                \n                                \n                                            Optional\n                                        key\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        options\n                                \n                                \n                                            Optional\n                                        template\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [others: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/core/interfaces/layout-item.data.ts:22\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Layout items to render for a container widget \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Object path to map this item to a data value \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name for the item.  Will be used as the input[name] \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:         LayoutOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LayoutOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Options to set on widgets.\nNOTE: this is optional as any undeclared property will automatically be put into an options contianer\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        template\n                                    \n                                \n                                \n                                    \n                                        template:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    HTML template for rendering custom buttons and templates \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Specify what type of widget is used to represent the data.\nIf not is specified, the JSON Schema will be used to determine the most appropriate widget\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { LayoutOptions } from './layout-options.data';\n\n/** Properties used to specify how to layout a piece of data in the form */\nexport interface LayoutItem {\n    /** Layout items to render for a container widget */\n    items?: Array;\n    /** HTML template for rendering custom buttons and templates */\n    template?: string;\n    /** Object path to map this item to a data value */\n    key?: string;\n    /** Name for the item.  Will be used as the input[name] */\n    name?: string;\n    /**\n     * Options to set on widgets.\n     * NOTE: this is optional as any undeclared property will automatically be put into an options contianer\n     */\n    options?: LayoutOptions;\n    /**\n     * Specify what type of widget is used to represent the data.\n     * If not is specified, the JSON Schema will be used to determine the most appropriate widget\n     */\n    type?: string;\n\n    [others: string]: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LayoutNode.html":{"url":"classes/LayoutNode.html","title":"class - LayoutNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LayoutNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/core/models/layout-node.ts\n        \n\n            \n                Description\n            \n            \n                The LayoutNode contains the logic to parse a LayoutItem along with its Schema.\nA LayoutNode acts, to some degree, as a proxy of the LayoutItem, augmenting data\nas needed. This gives the system a specific api to work with while allowing the\nuser to pass in variable data, so a degree.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                    Static\n                                getPointer\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    layoutDefinition\n                                \n                                \n                                    name\n                                \n                                \n                                    dataPointer\n                                \n                                \n                                    type\n                                \n                                \n                                    template\n                                \n                                \n                                    options\n                                \n                                \n                                    items\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutItem: LayoutItem, schema?: JSONSchema7, childNodes?: Array)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/core/models/layout-node.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        layoutItem\n                                                  \n                                                        \n                                                                        LayoutItem\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                    JSONSchema7\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        childNodes\n                                                  \n                                                        \n                                                                        Array\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : uniqueId('control')\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/models/layout-node.ts:24\n                            \n                        \n\n                \n                    \n                        Unique Identifier for the item \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(layoutItem: LayoutItem | string, schemaAnalyzer: SchemaAnalyzer, childNodes: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/core/models/layout-node.ts:44\n                \n            \n\n\n            \n                \n                    Creates a LayoutNode\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    layoutItem\n                                    \n                                                LayoutItem | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nA LayoutItem presented by the user.  If a string is given, it is converted into a LayoutItem\n\n\n                                    \n                                \n                                \n                                    schemaAnalyzer\n                                    \n                                                SchemaAnalyzer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    childNodes\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nLayout children\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LayoutNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getPointer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPointer(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/core/models/layout-node.ts:54\n                \n            \n\n\n            \n                \n                    Normalizes a key(object.path or json/path) to json path \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        layoutDefinition\n                    \n                \n\n                \n                    \n                        getlayoutDefinition()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/models/layout-node.ts:62\n                                \n                            \n                    \n                        \n                                Copy of the original layoutItem \n\n\n                                \n                                    Returns :         LayoutItem\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/models/layout-node.ts:66\n                                \n                            \n                    \n                        \n                                Name for the item.  Will be used as the input[name] \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        dataPointer\n                    \n                \n\n                \n                    \n                        getdataPointer()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/models/layout-node.ts:70\n                                \n                            \n                    \n                        \n                                JSON path for accessing data for this layout item \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/models/layout-node.ts:77\n                                \n                            \n                    \n                        \n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        template\n                    \n                \n\n                \n                    \n                        gettemplate()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/models/layout-node.ts:81\n                                \n                            \n                    \n                        \n                                HTML template to be rendered inside the widget \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/models/layout-node.ts:85\n                                \n                            \n                    \n                        \n                                Options for the widget \n\n\n                                \n                                    Returns :         LayoutOptions\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n\n                \n                    \n                        getitems()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/core/models/layout-node.ts:94\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { JSONSchema7 } from 'json-schema';\nimport { cloneDeep, defaultTo, isString, mapKeys, omit, pick, uniqueId } from 'lodash';\nimport { Memoize } from 'lodash-decorators';\n\nimport { LayoutItem } from '../interfaces/layout-item.data';\nimport { LayoutOptions } from '../interfaces/layout-options.data';\nimport { SchemaAnalyzer } from '../interfaces/schema-analyzer.data';\n\n/**\n * The LayoutNode contains the logic to parse a LayoutItem along with its Schema.\n * A LayoutNode acts, to some degree, as a proxy of the LayoutItem, augmenting data\n * as needed. This gives the system a specific api to work with while allowing the\n * user to pass in variable data, so a degree.\n */\nexport class LayoutNode {\n    /** Reference to the user defined layout item */\n    private readonly layoutItem: LayoutItem;\n    /** Reference to the schema that pertains the layout */\n    private readonly schema: JSONSchema7;\n    /** LayoutNodes that are rendered as children on this node */\n    private readonly childNodes: Array;\n\n    /** Unique Identifier for the item */\n    public readonly id: string = uniqueId('control');\n\n    /**\n     * @throws Will throw an error if there is no layout.type or schema.type\n     */\n    constructor(layoutItem: LayoutItem, schema?: JSONSchema7, childNodes?: Array) {\n        if (!layoutItem.type && !(schema && schema.type)) {\n            throw new Error('Missing \"type\"....');\n        }\n        this.layoutItem = layoutItem;\n        this.schema = schema;\n        this.childNodes = childNodes;\n    }\n\n    /**\n     * Creates a LayoutNode\n     * @param layoutItem - A LayoutItem presented by the user.  If a string is given, it is converted into a LayoutItem\n     * @param schemaService - Service for looking up related Schema definition\n     * @param childNodes - Layout children\n     */\n    public static create(layoutItem: LayoutItem | string, schemaAnalyzer: SchemaAnalyzer, childNodes: Array): LayoutNode {\n        const item: LayoutItem = isString(layoutItem)\n            ? {key: layoutItem}\n            : layoutItem;\n        const schema: JSONSchema7 = schemaAnalyzer.dataPointerMap.get(LayoutNode.getPointer(item.key));\n\n        return new LayoutNode(item, schema, childNodes);\n    }\n\n    /** Normalizes a key(object.path or json/path) to json path */\n    public static getPointer(key: string): string {\n        const pointer = defaultTo(key, '');\n\n        return pointer.charAt(0) === '/'\n            ? pointer\n            : `/${pointer.replace(/\\./g, '/')}`;\n    }\n    /** Copy of the original layoutItem */\n    @Memoize() get layoutDefinition(): LayoutItem {\n        return cloneDeep(this.layoutItem);\n    }\n    /** Name for the item.  Will be used as the input[name] */\n    @Memoize() get name(): string {\n        return this.layoutItem.name || this.dataPointer.split('/').pop();\n    }\n    /** JSON path for accessing data for this layout item */\n    @Memoize() get dataPointer(): string {\n        return LayoutNode.getPointer(this.layoutItem.key);\n    }\n    /**\n     * @todo Handle array of types from schema\n     * Type of widget is used to represent the data\n     */\n    @Memoize() get type(): string {\n        return this.layoutItem.type || defaultTo(this.schema, {}).type;\n    }\n    /** HTML template to be rendered inside the widget */\n    @Memoize() get template(): string {\n        return isString(this.layoutItem.template) ? this.layoutItem.template : undefined;\n    }\n    /** Options for the widget */\n    @Memoize() get options(): LayoutOptions {\n        return {\n            ...pick(this.schema, ['title', 'description']),\n            ...mapKeys(pick(this.schema, ['readOnly']), () => 'readonly'),\n            ...omit(this.layoutItem, ['key', 'type', 'name', 'template', 'items', 'options']),\n            ...defaultTo(this.layoutItem.options, {})\n        };\n    }\n\n    @Memoize() get items(): Array {\n        return this.childNodes;\n    }\n\n    // $ref?: any;\n    // arrayItem?;\n    // arrayItemType?;\n    // dataType?;\n    // recursiveReference?;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LayoutOptions.html":{"url":"interfaces/LayoutOptions.html","title":"interface - LayoutOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LayoutOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/core/interfaces/layout-options.data.ts\n        \n\n            \n                Description\n            \n            \n                Options for a particular Layout \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        accesskey\n                                \n                                \n                                            Optional\n                                        dirname\n                                \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        htmlClass\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        open\n                                \n                                \n                                            Optional\n                                        readonly\n                                \n                                \n                                            Optional\n                                        selectedIndex\n                                \n                                \n                                            Optional\n                                        style\n                                \n                                \n                                            Optional\n                                        tabindex\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [others: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/core/interfaces/layout-options.data.ts:38\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accesskey\n                                    \n                                \n                                \n                                    \n                                        accesskey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/accesskey \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dirname\n                                    \n                                \n                                \n                                    \n                                        dirname:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#dirname \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#disabled \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        htmlClass\n                                    \n                                \n                                \n                                    \n                                        htmlClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/class \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        open\n                                    \n                                \n                                \n                                    \n                                        open:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether or not a details container widget is open \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readonly\n                                    \n                                \n                                \n                                    \n                                        readonly:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#readonly \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedIndex\n                                    \n                                \n                                \n                                    \n                                        selectedIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Index of the tab to selected by default \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                    \n                                \n                                \n                                    \n                                        style:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/style \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tabindex\n                                    \n                                \n                                \n                                    \n                                        tabindex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/title \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface LayoutOptions {\n    /* Global HTML attributes */\n    /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/accesskey} */\n    accesskey?: string;\n    /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/class} */\n    htmlClass?: string;\n    /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/style} */\n    style?: string;\n    /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex} */\n    tabindex?: number;\n    /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/title} */\n    title?: string;\n\n    /* Global HTML Input attributes */\n    /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#dirname} */\n    dirname?: boolean;\n    /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#disabled} */\n    disabled?: boolean;\n    /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#readonly} */\n    readonly?: boolean;\n\n    /* Attribute for setting a icon */\n    icon?: {\n        /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/image#alt} */\n        alt?: string;\n        /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/image#height} */\n        height?: number;\n        /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/image#src} */\n        src: string;\n        /** See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/image#width} */\n        width?: number;\n    };\n\n    /** Whether or not a details container widget is open */\n    open?: boolean;\n    /** Index of the tab to selected by default */\n    selectedIndex?: number;\n\n    [others: string]: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LayoutService.html":{"url":"injectables/LayoutService.html","title":"injectable - LayoutService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LayoutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/form/services/layout.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides services for handling layouts \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setLayout\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    layout\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(schemaService: SchemaService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/form/services/layout.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        schemaService\n                                                  \n                                                        \n                                                                        SchemaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLayout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLayout(value: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/form/services/layout.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        layout\n                    \n                \n\n                \n                    \n                        getlayout()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/form/services/layout.service.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                        \n\n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nList of Layout Nodes to be displayed in the UI\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         Array\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { cloneDeep, difference, isString } from 'lodash';\n\nimport { JSONSchema7Definition } from 'json-schema';\n\nimport { LayoutItem } from '../../core/interfaces/layout-item.data';\nimport { LayoutNode } from '../../core/models/layout-node';\n\nimport { SchemaService } from './schema.service';\n\n/** Provides services for handling layouts */\n@Injectable()\nexport class LayoutService {\n    private readonly mappedPointers: Set = new Set();\n    private _layout: Array = [];\n    /**\n     * @param value - List of Layout Nodes to be displayed in the UI\n     */\n    get layout(): Array {\n        return this._layout;\n    }\n\n    constructor(private readonly schemaService: SchemaService) {}\n\n    public setLayout(value: Array): void {\n        this.mappedPointers.clear();\n        this._layout = this.buildLayout(this.deDupe(cloneDeep(value)));\n    }\n\n    /**\n     * Remove duplicate references from the layout and get a listing of\n     * referened dataPointers.  Datapointers will be used to replace the\n     * instance of '*' if it exists.\n     */\n    private deDupe(layout: Array): Array {\n        return layout.reduceRight((currentLayout: Array, layoutItem: LayoutItem | string) => {\n            let key: string = isString(layoutItem) ? layoutItem : layoutItem.key;\n            if (key) {\n                key = LayoutNode.getPointer(key);\n                if (!this.mappedPointers.has(key)) {\n                    this.mappedPointers.add(key);\n                    currentLayout.unshift(layoutItem);\n                }\n            } else if ((layoutItem).items) {\n                (layoutItem).items = this.deDupe((layoutItem).items);\n                currentLayout.unshift(layoutItem);\n            } else {\n                currentLayout.unshift(layoutItem);\n            }\n\n            return currentLayout;\n        }, []);\n    }\n\n    private buildLayout(layout: Array): Array {\n        return layout.reduce((currentLayout: Array, layoutItem: LayoutItem | string, i: number): Array => {\n            let newLayout: Array = currentLayout;\n            let childNodes: Array;\n\n            if (layoutItem === '*') {\n                const schemaPointers: Map = this.schemaService.dataPointerMap;\n                const availablePointers: Array = Array.from(schemaPointers.keys());\n                newLayout = newLayout.concat(...this.buildLayout(difference(availablePointers, Array.from(this.mappedPointers))));\n            } else {\n                if ((layoutItem).items) {\n                    childNodes = this.buildLayout((layoutItem).items);\n                }\n                try {\n                    const layoutNode: LayoutNode = LayoutNode.create(layoutItem, this.schemaService, childNodes);\n                    newLayout = newLayout.concat(layoutNode);\n                } catch (err) {\n                    console.error('buildLayout error: Form layout element not recognized:');\n                    console.error(layoutItem);\n                }\n            }\n\n            return newLayout;\n        }, []);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SchemaAnalyzer.html":{"url":"interfaces/SchemaAnalyzer.html","title":"interface - SchemaAnalyzer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SchemaAnalyzer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/core/interfaces/schema-analyzer.data.ts\n        \n\n            \n                Description\n            \n            \n                Defines properties and methods for working with a json schema \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dataPointerMap\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dataPointerMap\n                                    \n                                \n                                \n                                    \n                                        dataPointerMap:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Map of json data pointers and their corresponding schema \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { JSONSchema7Definition } from 'json-schema';\n\n/** Defines properties and methods for working with a json schema */\nexport interface SchemaAnalyzer {\n    /** Map of json data pointers and their corresponding schema */\n    readonly dataPointerMap: Map;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchemaService.html":{"url":"injectables/SchemaService.html","title":"injectable - SchemaService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SchemaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/form/services/schema.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides services for parsing JSON Schema and validating data \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                migrate\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    schema\n                                \n                                \n                                    dataPointerMap\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            migrate\n                        \n                        \n                    \n                \n            \n            \n                \nmigrate(schema: JSONSchema4 | JSONSchema6 | JSONSchema7)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/form/services/schema.service.ts:53\n                \n            \n\n\n            \n                \n                    Migrate a schema from draft 4/6 to draft 7\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schema\n                                    \n                                            JSONSchema4 | JSONSchema6 | JSONSchema7\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     JSONSchema7\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/form/services/schema.service.ts:69\n                \n            \n\n\n            \n                \n                    Validates data based on set JSON Schema\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ndata to be valdiated\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        schema\n                    \n                \n\n                \n                    \n                        getschema()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/form/services/schema.service.ts:26\n                                \n                            \n\n                \n                    \n                        setschema(value)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/form/services/schema.service.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nJSON Schema to be used for validation\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        dataPointerMap\n                    \n                \n\n                \n                    \n                        getdataPointerMap()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-json-schema-form/src/lib/form/services/schema.service.ts:35\n                                \n                            \n                    \n                        \n                                Gets a map of all the relevant json data pointers\nand their related schema definitions.  This allows for\neasy lookup of a schema reference from a json pointer.\n\n\n                                \n                                    Returns :     Map\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { cloneDeep } from 'lodash';\n\nimport { JSONSchema4, JSONSchema6, JSONSchema7, JSONSchema7Definition } from 'json-schema';\n\nimport migrate from 'json-schema-migrate';\nimport traverse from 'json-schema-traverse';\n\nimport Ajv from 'ajv';\n\nimport { SchemaAnalyzer } from '../../core/interfaces/schema-analyzer.data';\n\n/** Provides services for parsing JSON Schema and validating data */\n@Injectable()\nexport class SchemaService implements SchemaAnalyzer {\n    private _schema: JSONSchema7 = {};\n    /**\n     * @param value - JSON Schema to be used for validation\n     * @todo implement schema migration?\n     */\n    set schema(value: JSONSchema7) {\n        this._schema = value;\n        this.compileSchema();\n    }\n    get schema(): JSONSchema7 {\n        return this._schema;\n    }\n\n    /**\n     * Gets a map of all the relevant json data pointers\n     * and their related schema definitions.  This allows for\n     * easy lookup of a schema reference from a json pointer.\n     */\n    get dataPointerMap(): Map {\n        const pointers: Map = new Map();\n        traverse(this.schema, {cb: (...args) => {\n            const [schema, pointer, , , , parentSchema] = args;\n            if (pointer && parentSchema && parentSchema.type !== 'array' && schema.type !== 'object') {\n                pointers.set(pointer.replace(/\\/properties/g, ''), schema);\n            }\n        }});\n\n        return pointers;\n    }\n\n    private readonly ajv: Ajv.Ajv = new Ajv({ allErrors: true, jsonPointers: true, unknownFormats: 'ignore' });\n    private validator: Ajv.ValidateFunction;\n\n    /**\n     * Migrate a schema from draft 4/6 to draft 7\n     */\n    migrate(schema: JSONSchema4 | JSONSchema6 | JSONSchema7): JSONSchema7 {\n        const migratedSchema = cloneDeep(schema);\n        if (!migratedSchema.$schema || (migratedSchema.$schema && !migratedSchema.$schema.includes('draft-07'))) {\n            migrate.draft6(migratedSchema);\n            // Per https://github.com/epoberezkin/json-schema-migrate/issues/1, draft 7 is\n            // fully backwards compatible with 6, so changing $schema should suffice?\n            migratedSchema.$schema = 'http://json-schema.org/draft-07/schema#';\n        }\n\n        return migratedSchema as JSONSchema7;\n    }\n\n    /**\n     * Validates data based on set JSON Schema\n     * @param data - data to be valdiated\n     */\n    validate(data: any): boolean {\n        return this.validator(data);\n    }\n\n    private compileSchema() {\n        this.ajv.removeSchema(this.schema);\n        this.validator = this.ajv.compile(this.schema);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectWidgetComponent.html":{"url":"components/SelectWidgetComponent.html","title":"component - SelectWidgetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectWidgetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-json-schema-form/src/lib/select-widget/select-widget.component.ts\n\n\n    \n        Description\n    \n    \n        Dynamically creates a widget component based on a layout node.\nChanges in @Input attributes will be passed onto the created widget.\n\n    \n\n    \n        Extends\n    \n    \n                AbstractWidget\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                jsf-select-widget\n            \n\n            \n                styleUrls\n                ./select-widget.component.css\n            \n\n\n\n            \n                templateUrl\n                ./select-widget.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                widgetContainer\n                            \n                            \n                                controlDisabled\n                            \n                            \n                                controlName\n                            \n                            \n                                controlValue\n                            \n                            \n                                formControl\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataIndex\n                            \n                            \n                                layoutIndex\n                            \n                            \n                                layoutNode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactory: ComponentFactoryResolver, widgetLibraryService: WidgetLibraryService, jsf: JsonSchemaFormService, elementDataStorage: ElementDataStorageService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/select-widget/select-widget.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactory\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        widgetLibraryService\n                                                  \n                                                        \n                                                                        WidgetLibraryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jsf\n                                                  \n                                                        \n                                                                        JsonSchemaFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementDataStorage\n                                                  \n                                                        \n                                                                        ElementDataStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataIndex\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:35\n\n                            \n                        \n                \n                    \n                        Index of the data in data array \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutIndex\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:33\n\n                            \n                        \n                \n                    \n                        Index of the layout in the Layout array \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutNode\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:24\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(event: Event)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractWidget\n\n                \n            \n            \n                \n                        Defined in         AbstractWidget:66\n\n                \n            \n\n\n            \n                \n                    Update the value of the control\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nChange event\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            widgetContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ViewContainerRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('widgetContainer', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-json-schema-form/src/lib/select-widget/select-widget.component.ts:25\n                            \n                        \n\n                \n                    \n                        Placeholder for injecting widget \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:12\n\n                            \n                        \n\n                \n                    \n                        Flag to disable the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:14\n\n                            \n                        \n\n                \n                    \n                        Name for the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:16\n\n                            \n                        \n\n                \n                    \n                        Value of the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AbstractControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:18\n\n                            \n                        \n\n                \n                    \n                        Associated FormControl for widget \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:20\n\n                            \n                        \n\n                \n                    \n                        Options for the control \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n    Component, ComponentFactoryResolver, ComponentRef,\n    OnChanges, OnInit, ViewChild, ViewContainerRef\n} from '@angular/core';\n\nimport { ElementDataStorageService } from '../core/services/element-data-storage.service';\nimport { WidgetLibraryService } from '../core/services/widget-library.service';\nimport { AbstractWidget } from '../core/widget/widget';\n\nimport { JsonSchemaFormService } from '../form/services/json-schema-form.service';\n\n/**\n * Dynamically creates a widget component based on a layout node.\n * Changes in @Input attributes will be passed onto the created widget.\n */\n@Component({\n    selector: 'jsf-select-widget',\n    styleUrls: ['./select-widget.component.css'],\n    templateUrl: './select-widget.component.html'\n})\nexport class SelectWidgetComponent extends AbstractWidget implements OnChanges, OnInit {\n    private newComponent: ComponentRef;\n\n    /** Placeholder for injecting widget */\n    @ViewChild('widgetContainer', { read: ViewContainerRef }) widgetContainer: ViewContainerRef;\n\n    constructor(private readonly componentFactory: ComponentFactoryResolver,\n        private readonly widgetLibraryService: WidgetLibraryService,\n        jsf: JsonSchemaFormService,\n        elementDataStorage: ElementDataStorageService) {\n            super(jsf, elementDataStorage);\n    }\n\n    ngOnChanges() {\n        this.updateComponent();\n    }\n\n    ngOnInit() {\n        this.updateComponent();\n    }\n\n    private updateComponent(): void {\n        this.createComponent();\n        if (this.newComponent) {\n            for (const input of ['layoutNode', 'layoutIndex', 'dataIndex']) {\n                this.newComponent.instance[input] = this[input];\n            }\n        }\n    }\n\n    /**\n     * @todo Handle case of layoutNode change\n     */\n    private createComponent(): void {\n        if (!this.newComponent && this.layoutNode && this.layoutNode.type) {\n            this.newComponent = this.widgetContainer.createComponent(\n                this.componentFactory.resolveComponentFactory(\n                    this.widgetLibraryService.getWidget(this.layoutNode.type) as any\n                ),\n                undefined,\n                undefined,\n                this.generateNgContent()\n            );\n        }\n    }\n\n    private generateNgContent(): Array> {\n        if (this.layoutNode.template) {\n            return [ [ this.jsf.compileTemplate(this.layoutNode.template, this.layoutNode.options) ] ];\n        }\n    }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./select-widget.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'jsf-button'},{'name': 'ContainerComponent', 'selector': 'jsf-container'},{'name': 'HiddenComponent', 'selector': 'jsf-hidden'},{'name': 'JsonSchemaFormComponent', 'selector': 'jsf-json-schema-form'},{'name': 'SelectWidgetComponent', 'selector': 'jsf-select-widget'},{'name': 'TemplateComponent', 'selector': 'jsf-template'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectWidgetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SelectWidgetModule.html":{"url":"modules/SelectWidgetModule.html","title":"module - SelectWidgetModule","body":"\n                   \n\n\n\n\n    Modules\n    SelectWidgetModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SelectWidgetModule\n\n\n\ncluster_SelectWidgetModule_declarations\n\n\n\ncluster_SelectWidgetModule_exports\n\n\n\n\nSelectWidgetComponent\n\nSelectWidgetComponent\n\n\n\nSelectWidgetModule\n\nSelectWidgetModule\n\nSelectWidgetModule -->\n\nSelectWidgetComponent->SelectWidgetModule\n\n\n\n\n\nSelectWidgetComponent \n\nSelectWidgetComponent \n\nSelectWidgetComponent  -->\n\nSelectWidgetModule->SelectWidgetComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/select-widget/select-widget.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SelectWidgetComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            SelectWidgetComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SelectWidgetComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { SelectWidgetComponent } from './select-widget.component';\n\n@NgModule({\n    declarations: [ SelectWidgetComponent ],\n    entryComponents: [ SelectWidgetComponent ],\n    exports: [ SelectWidgetComponent ],\n    imports: [ CommonModule ]\n})\nexport class SelectWidgetModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TemplateComponent.html":{"url":"components/TemplateComponent.html","title":"component - TemplateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TemplateComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-json-schema-form/src/lib/template/template.component.ts\n\n\n    \n        Description\n    \n    \n        Component for rendering dynamic component templates\n\n    \n\n    \n        Extends\n    \n    \n                AbstractWidget\n    \n\n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                jsf-template\n            \n\n            \n                styleUrls\n                ./template.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./template.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                controlDisabled\n                            \n                            \n                                controlName\n                            \n                            \n                                controlValue\n                            \n                            \n                                formControl\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(jsf: JsonSchemaFormService, elementDataStorage: ElementDataStorageService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-json-schema-form/src/lib/template/template.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jsf\n                                                  \n                                                        \n                                                                        JsonSchemaFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementDataStorage\n                                                  \n                                                        \n                                                                        ElementDataStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(event: Event)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractWidget\n\n                \n            \n            \n                \n                        Defined in         AbstractWidget:66\n\n                \n            \n\n\n            \n                \n                    Update the value of the control\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nChange event\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:12\n\n                            \n                        \n\n                \n                    \n                        Flag to disable the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:14\n\n                            \n                        \n\n                \n                    \n                        Name for the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:16\n\n                            \n                        \n\n                \n                    \n                        Value of the control \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AbstractControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:18\n\n                            \n                        \n\n                \n                    \n                        Associated FormControl for widget \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractWidget\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractWidget:20\n\n                            \n                        \n\n                \n                    \n                        Options for the control \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        \n\n\nTemplates\nThe template widget is used to render custom html inside your form.  For example, you may need to render a table of data\n\nlayout.json\n\n[{\n    \"type\": \"template\",\n    \"content\": \"\n        ...\n        \n        ...\n        \n        \"\n}]\n\nNote: As of Angular 5, dynamic angular components cannot be used in AOT mode.  Due to this limitation, the\ntemplate widget does not support angular components.  Hopefully the Angular team will resolve this limitation.  In the meantime, Handlebars is used to allow some mimial templating.\n\n\n\n\n\n\n\n\n    \n\n    \n        import {\n    Component /*, ComponentFactoryResolver, ComponentRef,*/\n    // OnChanges, OnInit, ViewChild, ViewContainerRef\n} from '@angular/core';\n\nimport { Widget } from '../core/decorators/widget.decorator';\nimport { ElementDataStorageService } from '../core/services/element-data-storage.service';\nimport { AbstractWidget } from '../core/widget/widget';\n\nimport { JsonSchemaFormService } from '../form/services/json-schema-form.service';\n\n/**\n * Component for rendering dynamic component templates\n * @todo As of Angular 5, it appears that dynamic components are not possible when\n * using AOT compilation.  There appears to eb some hope with the new IVY rendering\n * engine that dynamic component will again be possible with AOT enable.  Need to revist\n * this component in the future @see{https://github.com/angular/angular/issues/20875}\n */\n@Widget({\n    types: ['template']\n})\n@Component({\n    selector: 'jsf-template',\n    styleUrls: ['./template.component.scss'],\n    templateUrl: './template.component.html'\n})\nexport class TemplateComponent extends AbstractWidget /*implements OnInit, OnChanges*/ {\n    // private newComponent: ComponentRef;\n\n    // /** Placeholder for injecting widget */\n    // @ViewChild('templateContainer', { read: ViewContainerRef }) templateContainer: ViewContainerRef;\n\n    constructor(\n        // private readonly componentFactory: ComponentFactoryResolver,\n        jsf: JsonSchemaFormService, elementDataStorage: ElementDataStorageService) {\n        super(jsf, elementDataStorage);\n    }\n\n    // ngOnInit() {\n    //     this.updateComponent();\n    // }\n\n    // ngOnChanges() {\n    //     this.updateComponent();\n    // }\n\n    // private updateComponent() {\n    //     this.createComponent();\n    //     if (this.newComponent) {\n    //         for (const input of ['layoutNode', 'layoutIndex', 'dataIndex']) {\n    //             this.newComponent.instance[input] = this[input];\n    //         }\n    //     }\n    // }\n\n    // private createComponent(): void {\n    //     if (!this.newComponent && this.options.template) {\n    //         this.newComponent = this.templateContainer.createComponent(\n    //             this.componentFactory.resolveComponentFactory(this.options.template)\n    //         );\n    //     }\n    // }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./template.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ButtonComponent', 'selector': 'jsf-button'},{'name': 'ContainerComponent', 'selector': 'jsf-container'},{'name': 'HiddenComponent', 'selector': 'jsf-hidden'},{'name': 'JsonSchemaFormComponent', 'selector': 'jsf-json-schema-form'},{'name': 'SelectWidgetComponent', 'selector': 'jsf-select-widget'},{'name': 'TemplateComponent', 'selector': 'jsf-template'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TemplateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TemplateModule.html":{"url":"modules/TemplateModule.html","title":"module - TemplateModule","body":"\n                   \n\n\n\n\n    Modules\n    TemplateModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TemplateModule\n\n\n\ncluster_TemplateModule_declarations\n\n\n\ncluster_TemplateModule_exports\n\n\n\n\nTemplateComponent\n\nTemplateComponent\n\n\n\nTemplateModule\n\nTemplateModule\n\nTemplateModule -->\n\nTemplateComponent->TemplateModule\n\n\n\n\n\nTemplateComponent \n\nTemplateComponent \n\nTemplateComponent  -->\n\nTemplateModule->TemplateComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/template/template.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TemplateComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            TemplateComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TemplateComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { TemplateComponent } from './template.component';\n\n@NgModule({\n    declarations: [ TemplateComponent ],\n    entryComponents: [ TemplateComponent ],\n    exports: [ TemplateComponent ],\n    imports: [ CommonModule ]\n})\nexport class TemplateModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WidgetDecorator.html":{"url":"interfaces/WidgetDecorator.html","title":"interface - WidgetDecorator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WidgetDecorator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/core/interfaces/widget-decorator.data.ts\n        \n\n            \n                Description\n            \n            \n                Properties for decorating a widget \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        types\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        types\n                                    \n                                \n                                \n                                    \n                                        types:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    keys for associating a widget with a layout.type \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface WidgetDecorator {\n    /** keys for associating a widget with a layout.type */\n    types: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WidgetLibraryService.html":{"url":"injectables/WidgetLibraryService.html","title":"injectable - WidgetLibraryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WidgetLibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-json-schema-form/src/lib/core/services/widget-library.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides services for mapping a widget component to a layoutNode type\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWidget\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWidget\n                        \n                        \n                    \n                \n            \n            \n                \ngetWidget(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-json-schema-form/src/lib/core/services/widget-library.service.ts:32\n                \n            \n\n\n            \n                \n                    Gets a widget class from the type\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntype of component\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { AbstractWidget } from '../widget/widget';\n\n/** Map of the default registered widgets */\nconst widgets: Map = new Map();\n\n/** Internal method for registering a widget with the widget library */\nexport function register(component: typeof AbstractWidget, types: Array): void {\n    types.forEach((type: string) => {\n        if (widgets.has(type)) {\n            console.error(`Widget type \"${type}\" already exists.  Ignoring.`, component);\n        } else {\n            widgets.set(type, component);\n        }\n    });\n}\n\n/**\n * Provides services for mapping a widget component to a layoutNode type\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class WidgetLibraryService {\n    private readonly defaultWidget = 'hidden';\n\n    /**\n     * Gets a widget class from the type\n     * @param type - type of component\n     */\n    getWidget(type: string): typeof AbstractWidget {\n        return widgets.has(type)\n            ? widgets.get(type)\n            : widgets.get(this.defaultWidget);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nCHANGELOG\nThe changelog is automatically updated using\nsemantic-release. You\ncan see it on the releases page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing to NGX-JSON-Schema-Form\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\nCode of Conduct\nIssues and Bugs\nFeature Requests\nCoding Rules\nCommit Message Guidelines\nLicense\n\n Code of Conduct\nThis project and everyone participating in it is governed by the Code of Conduct. By participating, you are expected to uphold this code. Please report unacceptable behavior to ngx-json-schema-form@outlook.com.\n Found a Bug?\nIf you find a bug in the source code, you can help us by submitting an issue to our GitHub Repository. Even better, you can submit a Pull Request with a fix.\n Missing a Feature?\nYou can request a new feature by submitting a new issue to our GitHub Repository.\nIf you would like to implement a new feature, please submit an issue or a pull request, depending on what kind of feature it is:\n\nA major feature should be proposed in a new issue that outlines the feature you would like to add, so it can be discussed. This will allow us to better coordinate our efforts, prevent duplication of work, and help you to craft the change so that it is successfully accepted into the project.\nA small features can be crafted and directly submitted as a pull request.\n\n Coding Rules\nWe try to follow Google's JavaScript Style Guide, but wrap all code at 140 characters or less and use 4 spaces for indentation.  Review our TSLint rules for more information.\n Commit Message Guidelines\nThis project uses semantic-release and thus requires specific commit message standards.  Sematic-release uses the Angular Commit Message Guidelines; please review.\n License\nThis library is released under the MIT License. All contributions, if accepted, will be covered by this license. So PRs must either consist of original code, or code from another source with an MIT-compatible license. By submitting a pull request, you assert that the code you are submitting complies with these requirements.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.0\n        \n            @angular/cdk : ^7.2.0\n        \n            @angular/common : ~7.2.0\n        \n            @angular/compiler : ~7.2.0\n        \n            @angular/core : ~7.2.0\n        \n            @angular/flex-layout : 7.0.0-beta.24\n        \n            @angular/forms : ~7.2.0\n        \n            @angular/http : ~7.2.0\n        \n            @angular/material : ~7.2.0\n        \n            @angular/platform-browser : ~7.2.0\n        \n            @angular/platform-browser-dynamic : ~7.2.0\n        \n            @angular/router : ~7.2.0\n        \n            @types/ace : 0.0.36\n        \n            @types/json-schema : ^7.0.3\n        \n            @types/lodash : ^4.14.136\n        \n            ajv : ^6.10.0\n        \n            brace : ^0.11.0\n        \n            core-js : ^2.5.4\n        \n            handlebars : ^4.1.2\n        \n            json-schema-migrate : ^0.2.0\n        \n            json-schema-traverse : ^0.4.1\n        \n            lodash : ^4.17.14\n        \n            lodash-decorators : ^6.0.1\n        \n            ng2-ace-editor : 0.3.9\n        \n            rxjs : ~6.5.2\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            register   (projects/.../widget-library.service.ts)\n                        \n                        \n                            Widget   (projects/.../widget.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-json-schema-form/src/lib/core/services/widget-library.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(component, types)\n                \n            \n\n\n\n\n            \n                \n                    Internal method for registering a widget with the widget library \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    types\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ngx-json-schema-form/src/lib/core/decorators/widget.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Widget\n                        \n                        \n                    \n                \n            \n            \n                \nWidget(args)\n                \n            \n\n\n\n\n            \n                \n                    Widget Decorator\nRegisters widget with widget library\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n\n\nNgxJsonSchemaForm\nA JSON Schema Form builder for Angular 7+, similar to\n\nAngular JSON Schema Form's \n\nNote: This project attemtps to take over where its predecesor left off.\nIt's based off of the above project, but rewritten from the ground up.\nNote: This project is not ready for consumption.  There is still a lot to do to\nbring parity with Angular JSON Schema Form\nCheck out the live demo and play with the examples\nCheck out some examples here.\nUsing Angular JSON Schema Form\nBasic use\nBegin by installing the library in your project\nnpm install ngx-json-schema-form --saveThen import JsonSchemaFormModule in your main application module:\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { JsonSchemaFormModule } from 'ngx-json-schema-form';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n    declarations: [ AppComponent ],\n    imports: [\n        BrowserModule,\n        JsonSchemaFormModule.forRoot()\n    ],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule { }To display a form in your Angular component, simply add the following to your component's template:\nWhere schema is a valid JSON schema object. If you don't already have your own schemas, you can find a bunch of samples to test with in the projects/demo/src/assets/examples folder.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License\nCopyright for portions of project NGX-Json-Schema-Form are held by [David Schnell-Davis, 2014]\nas part of project Angular2-Json-Schema-Form. All other copyright for project NGX-Json-Schema-Form\nare held by [James Scharett, 2019]\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ButtonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContainerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HiddenModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JsonSchemaFormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SelectWidgetModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TemplateModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ButtonModule\n\n\n\ncluster_ButtonModule_declarations\n\n\n\ncluster_ButtonModule_exports\n\n\n\ncluster_ContainerModule\n\n\n\ncluster_ContainerModule_declarations\n\n\n\ncluster_ContainerModule_imports\n\n\n\ncluster_ContainerModule_exports\n\n\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_HiddenModule\n\n\n\ncluster_HiddenModule_declarations\n\n\n\ncluster_HiddenModule_exports\n\n\n\ncluster_JsonSchemaFormModule\n\n\n\ncluster_JsonSchemaFormModule_imports\n\n\n\ncluster_JsonSchemaFormModule_exports\n\n\n\ncluster_SelectWidgetModule\n\n\n\ncluster_SelectWidgetModule_declarations\n\n\n\ncluster_SelectWidgetModule_exports\n\n\n\ncluster_TemplateModule\n\n\n\ncluster_TemplateModule_declarations\n\n\n\ncluster_TemplateModule_exports\n\n\n\n\nButtonComponent\n\nButtonComponent\n\n\n\nButtonModule\n\nButtonModule\n\nButtonModule -->\n\nButtonComponent->ButtonModule\n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nButtonModule->ButtonComponent \n\n\n\n\n\nJsonSchemaFormModule\n\nJsonSchemaFormModule\n\nJsonSchemaFormModule -->\n\nButtonModule->JsonSchemaFormModule\n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nContainerModule\n\nContainerModule\n\nContainerModule -->\n\nContainerComponent->ContainerModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nContainerModule->ContainerComponent \n\n\n\nJsonSchemaFormModule -->\n\nContainerModule->JsonSchemaFormModule\n\n\n\n\n\nSelectWidgetModule\n\nSelectWidgetModule\n\nContainerModule -->\n\nSelectWidgetModule->ContainerModule\n\n\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nSelectWidgetModule->FormModule\n\n\n\nJsonSchemaFormModule -->\n\nSelectWidgetModule->JsonSchemaFormModule\n\n\n\n\n\nSelectWidgetComponent \n\nSelectWidgetComponent \n\nSelectWidgetComponent  -->\n\nSelectWidgetModule->SelectWidgetComponent \n\n\n\n\n\nJsonSchemaFormComponent\n\nJsonSchemaFormComponent\n\nFormModule -->\n\nJsonSchemaFormComponent->FormModule\n\n\n\n\n\nJsonSchemaFormComponent \n\nJsonSchemaFormComponent \n\nJsonSchemaFormComponent  -->\n\nFormModule->JsonSchemaFormComponent \n\n\n\nJsonSchemaFormModule -->\n\nFormModule->JsonSchemaFormModule\n\n\n\n\n\nHiddenComponent\n\nHiddenComponent\n\n\n\nHiddenModule\n\nHiddenModule\n\nHiddenModule -->\n\nHiddenComponent->HiddenModule\n\n\n\n\n\nHiddenComponent \n\nHiddenComponent \n\nHiddenComponent  -->\n\nHiddenModule->HiddenComponent \n\n\n\nJsonSchemaFormModule -->\n\nHiddenModule->JsonSchemaFormModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nJsonSchemaFormModule -->\n\nCoreModule->JsonSchemaFormModule\n\n\n\n\n\nTemplateModule\n\nTemplateModule\n\nJsonSchemaFormModule -->\n\nTemplateModule->JsonSchemaFormModule\n\n\n\n\n\nTemplateComponent \n\nTemplateComponent \n\nTemplateComponent  -->\n\nTemplateModule->TemplateComponent \n\n\n\n\n\nButtonModule \n\nButtonModule \n\nButtonModule  -->\n\nJsonSchemaFormModule->ButtonModule \n\n\n\n\n\nContainerModule \n\nContainerModule \n\nContainerModule  -->\n\nJsonSchemaFormModule->ContainerModule \n\n\n\n\n\nCoreModule \n\nCoreModule \n\nCoreModule  -->\n\nJsonSchemaFormModule->CoreModule \n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nJsonSchemaFormModule->FormModule \n\n\n\n\n\nHiddenModule \n\nHiddenModule \n\nHiddenModule  -->\n\nJsonSchemaFormModule->HiddenModule \n\n\n\n\n\nSelectWidgetModule \n\nSelectWidgetModule \n\nSelectWidgetModule  -->\n\nJsonSchemaFormModule->SelectWidgetModule \n\n\n\n\n\nTemplateModule \n\nTemplateModule \n\nTemplateModule  -->\n\nJsonSchemaFormModule->TemplateModule \n\n\n\n\n\nSelectWidgetComponent\n\nSelectWidgetComponent\n\nSelectWidgetModule -->\n\nSelectWidgetComponent->SelectWidgetModule\n\n\n\n\n\nTemplateComponent\n\nTemplateComponent\n\nTemplateModule -->\n\nTemplateComponent->TemplateModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DataEvent   (projects/.../data-event-plugin.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-json-schema-form/src/lib/core/services/data-event-plugin.service.ts\n    \n    \n        \n            \n                \n                    \n                    DataEvent\n                \n            \n            \n                \n                    Event wrapper for piggybacking data on an event \n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MODULES   (projects/.../json-schema-form.module.ts)\n                        \n                        \n                            widgets   (projects/.../widget-library.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-json-schema-form/src/lib/json-schema-form.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MODULES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    ButtonModule, ContainerModule, CoreModule, FormModule,\n    HiddenModule, SelectWidgetModule, TemplateModule\n]\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-json-schema-form/src/lib/core/services/widget-library.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            widgets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n\n                \n                    \n                        Map of the default registered widgets \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/introduction.html":{"url":"additional-documentation/introduction.html","title":"additional-page - Introduction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n\n\n\nJson Schema\nThe only requirement to using the component is to supply a valid JSON Schema.  The component will parse the schema and display all properties in the order they\nare presented within the schema.\n\nschema.json\n\n{\n    \"$id\": \"https://example.com/person.schema.json\",\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"Person\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"firstName\": {\n            \"type\": \"string\",\n            \"description\": \"The person's first name.\"\n        },\n        \"lastName\": {\n            \"type\": \"string\",\n            \"description\": \"The person's last name.\"\n        },\n        \"age\": {\n            \"description\": \"Age in years which must be equal to or greater than zero.\",\n            \"type\": \"integer\",\n            \"minimum\": 0\n        }\n    }\n}\n\nIn this example, the form will display 3 fields; firstName, lastName and age.  The order is determined by the order of the fields in the schema.  Once you have your schema set, all you need to do is pass it to the component\n\nbasic.component.ts\n\nimport { JSONSchema7 } from 'json-schema';\nimport schema from './schema.json';\n\n@Component({\n    template: ``,\n    ...\n})\nexport class BasicComponent {\n    schema: JSONSchema7 = schema as JSONSchema7;\n    ...\n}\n\nHere we import the schema json and set it as a property on our component.  Then you wire up the schema in the template and\nLayout\nThe deault layout is simply ['*'].  This translates to display everything in the the schema.  The * key is a special command that tells the component to display everything that has not specifically been laid out.  This can become useful when you only care about a few fields and their location.  For example:\n\nschema.json\n\n{\n    \"$id\": \"https://example.com/person.schema.json\",\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"Person\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"question1\": {\n            \"type\": \"boolean\"\n        },\n        \"age\": {\n            \"description\": \"Are you 18 or older?\",\n            \"type\": \"boolean\"\n        },\n        \"question2\": {\n            \"type\": \"boolean\"\n        }\n    }\n}\n\nlayout.json\n\n[\n    \"age\",\n    '*'\n]\n\nlayout.component.ts\n\nimport { JSONSchema7 } from 'json-schema';\nimport schema from './schema.json';\nimport layout from './layout.json';\n\n@Component({\n    template: ``,\n    ...\n})\nexport class LayoutComponent {\n    schema: JSONSchema7 = schema as JSONSchema7;\n    layout: Array = layout;\n    ...\n}\n\nAs you can see, we only care that age is presented first.  All the other properties in the schema are shown after age.\nForm Options\nJust like a native form, you can set the standard form attributes (action, autocomplete, enctype, method, target) on the jsf component.  Most of the time you will not need to set these, but there may be instances in which you need your form to do an actual submit and need these set. For more info on these see Form Attributes.\n\nlogin.component.html\n\n\n\nWidgets\nOptions\nThere are numerous attributes that can be set on a widget which are set via the layout.  The following are currently supported\n\naccesskey\ndirname\ndisabled\nhtmlClass\nname\nreadonly\nstyle\ntabindex\ntitle\n\n\nlayout.json\n\n[{\n    \"type\": \"text\",\n    \"accesskey\": \"n\",\n    \"dirname\": true,\n    \"disabled\": false,\n    \"htmlClass\": \"input-sm\",\n    \"name\": \"name\",\n    \"readonly\": true,\n    \"style\": {\n        \"color\": \"#333\"\n    },\n    \"tabindex\": 2,\n    \"title\": \"Name\"\n}]\n\n\n\n\n\nJSON Schema\nLayout\nForm Options\nWidgets\nOptions\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/buttons.html":{"url":"additional-documentation/buttons.html","title":"additional-page - Buttons","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n\n\n\nButtons\nThere are 4 types of buttons that jsf supports, button, image, reset and submit.  By default, these will all use the  tag for display.  However, with the exception of image, you can specify custom html via the template option.  This will result in the  being used for display and the template being inserted.  Content can contain simple bindings so that you can bind to various properties of the layout.  For example:\n\nbutton-layout.json\n\n[{\n    \"type\": \"submit\",\n    \"title\": \"Submit\",\n    \"template\": \"{{ options.title }}\",\n    \"icon\": {\n        \"src\": \"/assets/submit.png\",\n        \"width\": 30,\n        \"height\": 30,\n        \"alt\": \"Checkmark\"\n    }\n}]\n\nwill result in\n\nbutton.html\n\n\n    \n    Submit\n\n\nHere you can see we are specifying that the button should contain an image via the template options.  The template binds to the properties of the icon option which results in an image tag being rendered.  The icon option is also used when redering a simple button of type image.\n\nNote: due to current limitation of Angular AOT compilation, use of the angular compile to transpile `template` strings into HTML DOM is not possible.  Recent Angular changes have restricted the inclusion of the compiler in favor of reducing the file size and load time when in AOT mode.  Therefore, Handlebars is currently being imported to handle the compilation of `template` string to HTML DOM.\n\n\nWe can also respond to events such as a click.  To do this, we must first bind an event handler to the jsf component\n\nform.component.html\n\n\n\nThen we add a layout with a couple of buttons.  The first button will run an internal command where as the second will run a command specified by layout.onClick.\n\nbuttons-layout.json\n\n[{\n    \"type\": \"button\",\n    \"id\": \"button1\",\n    \"title\": \"Open dialog\"\n}, {\n    \"type\": \"button\",\n    \"id\": \"button2\",\n    \"title\": \"Open Google\",\n    \"onClick\": \"window.open('http://www.google.com/');\"\n}]\n\nLastly, we specify our onClick handler in our component.\n\nform.component.ts\n\nimport layout from './buttons-layout.json';\nimport { DataEvent } from 'ngx-json-schema-form';\n\n@Component({\n    templateUrl: './form.component.html',\n    ...\n})\nexport class LayoutComponent {\n    layout: Array = layout;\n\n    onClick(event: DataEvent): void {\n        if (event.data.id === 'button1') {\n            openDialog(event);\n        } else if (event.data.id === 'button2') {\n            // Run some external code\n            const fn = new Function('event', event.data.onClick);\n            fn(event);\n        }\n    }\n    ...\n}\n\nWhen a button is clicked, the event will bubble up to the jsf form component to which we bound our onClick handler.  Using event metadata (click.data.layout), we can specify that only events in which a target that has an associated data property of layout will trigger the event.  This association is handled internally when a widget is created and acts similarly to jQuery's $.data.  When the event handler is triggered, the layout is passed down with the event via event.data , allowing us to inspect which layout item triggered the event and act accordingly.  In the case of \"button1\", we run and internal method openDialog in order to open an angular dialog component.  With \"button2\" however, we run the external javascript passed in via the onClick property in the layout in order to open a popup dialog to Google.\nNote: running external javascript is usually not a good choice, therefore the jsf library does not internally run the onClick handler.  You will need to handle the conversion from text to javascript yourself and run the code.\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/containers.html":{"url":"additional-documentation/containers.html","title":"additional-page - Containers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n\n\n\nContainers\nThere are 4 different types of containers; div, fieldset, details, and tabs.  Each allows you to wrap form elements inside a specific elements, allowing you to create various form structures.  When dealing with contianers, the layout requires you to specify an array of items which can be rendered inside the container.\nDiv\nThe div is the simplest contianer.  It allow you to create a div in which you can style as you wish.\n\nlayout.json\n\n[{\n    \"type\": \"div\",\n    \"items\": [{\n        \"type\": \"text\",\n        \"title\": \"Text 1\"\n    }, {\n        \"type\": \"text\",\n        \"title\": \"Text 2\"\n    }, {\n        \"type\": \"text\",\n        \"title\": \"Text 3\"\n    }]\n}]\n\n\n\nFieldset\nA fieldset container acts much the same as div, except it uses a  element instead of a .  This has the added benefit that you can easily disable all form elements inside the fieldset simply by marking the container as disabled.\n\nlayout.json\n\n[{\n    \"type\": \"fieldset\",\n    \"items\": [...],\n    \"disabled\": true\n}]\n\nDetails\nA details container uses a  element allowing you to expand/collapse a set of form elements.\n\nlayout.json\n\n[{\n    \"type\": \"details\",\n    \"items\": [...]\n}]\n\nTabs\nWith a tabs container, you supply a list of LayoutItems of type tab.  Each tab should have a title which is used to display the tab text.  By default, the first tab will be selected.  You can optional specify which tab to select by adding selectedIndex to the tabs options.\n\nlayout.json\n\n[{\n    \"type\": \"tabs\",\n    \"selectedIndex\": 1,\n    \"items\": [{\n        \"type\": \"tab\",\n        \"title\": \"Tab 1\",\n        \"items\": [...]\n    }, {\n        \"type\": \"tab\",\n        \"title\": \"Tab 2\",\n        \"items\": [...]\n    }, {\n        \"type\": \"tab\",\n        \"title\": \"Tab 3\",\n        \"items\": [...]\n    }]\n}]\n\nThe above layout will render a container with 3 tabs; 'Tab 1', 'Tab 2', and 'Tab 3'.  'Tab 2' will be selected by default.\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/hidden-inputs.html":{"url":"additional-documentation/hidden-inputs.html","title":"additional-page - Hidden Inputs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n\n\n\nHidden\nHidden widgets are what you would expect, they render an .  This is the default for any layout item that can't be properly matched.  For the most part, hidden widgets won't be needed as you simply don't need to render them, their data never changes.  However, in the event that you need to do an actual form submittal, hidden inputs may be necessary and are therfore included.\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/templates.html":{"url":"additional-documentation/templates.html","title":"additional-page - Templates","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n\n\n\nTemplates\nThe template widget is used to render custom html inside your form.  For example, you may need to render a table of data\n\nlayout.json\n\n[{\n    \"type\": \"template\",\n    \"content\": \"\n        ...\n        \n        ...\n        \n        \"\n}]\n\nNote: As of Angular 5, dynamic angular components cannot be used in AOT mode.  Due to this limitation, the\ntemplate widget does not support angular components.  Hopefully the Angular team will resolve this limitation.  In the meantime, Handlebars is used to allow some mimial templating.\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
